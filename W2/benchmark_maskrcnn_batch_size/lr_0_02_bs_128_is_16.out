1
The device we will be working on is: cuda
[03/01 18:58:32 d2.engine.defaults]: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=12, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=44, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 11, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[03/01 18:58:35 d2.data.build]: Removed 0 images with no usable annotations. 5007 images left.
[03/01 18:58:36 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
| background | 0            |    car     | 18822        | pedestrian | 8065         |
|            | 0            |            | 0            |            | 0            |
|            | 0            |            | 0            |            | 0            |
|            | 0            |   ignore   | 4977         |            |              |
|   total    | 31864        |            |              |            |              |
[03/01 18:58:36 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[03/01 18:58:36 d2.data.build]: Using training sampler TrainingSampler
[03/01 18:58:36 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 18:58:36 d2.data.common]: Serializing 5007 elements to byte tensors and concatenating them all ...
[03/01 18:58:36 d2.data.common]: Serialized dataset takes 13.56 MiB
[03/01 18:58:36 d2.data.build]: Making batched data loader with batch_size=16
WARNING [03/01 18:58:36 d2.solver.build]: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/01 18:58:36 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl ...
[03/01 18:58:36 d2.engine.train_loop]: Starting training from iteration 0
[03/01 18:59:14 d2.utils.events]:  eta: 0:29:28  iter: 19  total_loss: 3.118  loss_cls: 1.849  loss_box_reg: 0.4546  loss_mask: 0.6514  loss_rpn_cls: 0.1579  loss_rpn_loc: 0.09163    time: 1.3389  last_time: 1.1980  data_time: 0.6208  last_data_time: 0.2929   lr: 0.00039962  max_mem: 16090M
[03/01 18:59:47 d2.utils.events]:  eta: 0:29:15  iter: 39  total_loss: 1.531  loss_cls: 0.5089  loss_box_reg: 0.4448  loss_mask: 0.4425  loss_rpn_cls: 0.0573  loss_rpn_loc: 0.07366    time: 1.3215  last_time: 1.2066  data_time: 0.4070  last_data_time: 0.2826   lr: 0.00079922  max_mem: 16090M
[03/01 19:00:17 d2.utils.events]:  eta: 0:29:27  iter: 59  total_loss: 1.143  loss_cls: 0.2979  loss_box_reg: 0.3802  loss_mask: 0.3223  loss_rpn_cls: 0.04923  loss_rpn_loc: 0.0857    time: 1.3849  last_time: 1.2255  data_time: 0.3833  last_data_time: 0.3184   lr: 0.0011988  max_mem: 16090M
[03/01 19:00:42 d2.utils.events]:  eta: 0:29:06  iter: 79  total_loss: 0.967  loss_cls: 0.2301  loss_box_reg: 0.3089  loss_mask: 0.2825  loss_rpn_cls: 0.0526  loss_rpn_loc: 0.08074    time: 1.3589  last_time: 1.2230  data_time: 0.3769  last_data_time: 0.2966   lr: 0.0015984  max_mem: 16090M
[03/01 19:01:07 d2.utils.events]:  eta: 0:28:40  iter: 99  total_loss: 0.831  loss_cls: 0.1792  loss_box_reg: 0.2627  loss_mask: 0.2639  loss_rpn_cls: 0.03732  loss_rpn_loc: 0.07538    time: 1.3304  last_time: 1.2372  data_time: 0.3276  last_data_time: 0.3169   lr: 0.001998  max_mem: 16090M
[03/01 19:01:31 d2.utils.events]:  eta: 0:28:09  iter: 119  total_loss: 0.751  loss_cls: 0.158  loss_box_reg: 0.2252  loss_mask: 0.2568  loss_rpn_cls: 0.03109  loss_rpn_loc: 0.06867    time: 1.3089  last_time: 1.2025  data_time: 0.3092  last_data_time: 0.3164   lr: 0.0023976  max_mem: 16090M
[03/01 19:01:56 d2.utils.events]:  eta: 0:27:48  iter: 139  total_loss: 0.7086  loss_cls: 0.1519  loss_box_reg: 0.225  loss_mask: 0.2388  loss_rpn_cls: 0.03083  loss_rpn_loc: 0.06637    time: 1.3000  last_time: 1.2502  data_time: 0.3425  last_data_time: 0.3333   lr: 0.0027972  max_mem: 16090M
[03/01 19:02:21 d2.utils.events]:  eta: 0:27:24  iter: 159  total_loss: 0.6912  loss_cls: 0.1327  loss_box_reg: 0.2035  loss_mask: 0.2305  loss_rpn_cls: 0.02888  loss_rpn_loc: 0.07424    time: 1.2923  last_time: 1.1904  data_time: 0.3378  last_data_time: 0.3077   lr: 0.0031968  max_mem: 16090M
[03/01 19:02:46 d2.utils.events]:  eta: 0:27:01  iter: 179  total_loss: 0.6967  loss_cls: 0.1494  loss_box_reg: 0.2166  loss_mask: 0.2335  loss_rpn_cls: 0.02681  loss_rpn_loc: 0.06939    time: 1.2882  last_time: 1.2494  data_time: 0.3404  last_data_time: 0.3276   lr: 0.0035964  max_mem: 16090M
[03/01 19:03:10 d2.utils.events]:  eta: 0:26:31  iter: 199  total_loss: 0.6531  loss_cls: 0.1303  loss_box_reg: 0.1878  loss_mask: 0.2349  loss_rpn_cls: 0.03245  loss_rpn_loc: 0.07221    time: 1.2784  last_time: 1.2382  data_time: 0.3091  last_data_time: 0.3671   lr: 0.003996  max_mem: 16090M
[03/01 19:03:34 d2.utils.events]:  eta: 0:26:06  iter: 219  total_loss: 0.6617  loss_cls: 0.1296  loss_box_reg: 0.1996  loss_mask: 0.231  loss_rpn_cls: 0.02829  loss_rpn_loc: 0.05879    time: 1.2734  last_time: 1.3042  data_time: 0.3283  last_data_time: 0.3539   lr: 0.0043956  max_mem: 16090M
[03/01 19:03:59 d2.utils.events]:  eta: 0:25:41  iter: 239  total_loss: 0.6534  loss_cls: 0.1349  loss_box_reg: 0.2  loss_mask: 0.218  loss_rpn_cls: 0.02508  loss_rpn_loc: 0.07787    time: 1.2706  last_time: 1.2131  data_time: 0.3331  last_data_time: 0.3046   lr: 0.0047952  max_mem: 16090M
[03/01 19:04:23 d2.utils.events]:  eta: 0:25:16  iter: 259  total_loss: 0.6421  loss_cls: 0.1337  loss_box_reg: 0.1994  loss_mask: 0.2121  loss_rpn_cls: 0.02439  loss_rpn_loc: 0.07309    time: 1.2675  last_time: 1.3099  data_time: 0.3165  last_data_time: 0.3855   lr: 0.0051948  max_mem: 16090M
[03/01 19:04:48 d2.utils.events]:  eta: 0:24:52  iter: 279  total_loss: 0.629  loss_cls: 0.1324  loss_box_reg: 0.2042  loss_mask: 0.2103  loss_rpn_cls: 0.02212  loss_rpn_loc: 0.05457    time: 1.2647  last_time: 1.2590  data_time: 0.3172  last_data_time: 0.3189   lr: 0.0055944  max_mem: 16090M
[03/01 19:05:12 d2.utils.events]:  eta: 0:24:27  iter: 299  total_loss: 0.5826  loss_cls: 0.1209  loss_box_reg: 0.1839  loss_mask: 0.2023  loss_rpn_cls: 0.02057  loss_rpn_loc: 0.05725    time: 1.2614  last_time: 1.2183  data_time: 0.3127  last_data_time: 0.3068   lr: 0.005994  max_mem: 16368M
[03/01 19:05:37 d2.utils.events]:  eta: 0:24:02  iter: 319  total_loss: 0.6131  loss_cls: 0.1166  loss_box_reg: 0.1882  loss_mask: 0.1998  loss_rpn_cls: 0.02399  loss_rpn_loc: 0.06642    time: 1.2594  last_time: 1.2481  data_time: 0.3235  last_data_time: 0.3379   lr: 0.0063936  max_mem: 16368M
[03/01 19:06:01 d2.utils.events]:  eta: 0:23:38  iter: 339  total_loss: 0.5777  loss_cls: 0.1195  loss_box_reg: 0.1814  loss_mask: 0.199  loss_rpn_cls: 0.01994  loss_rpn_loc: 0.05705    time: 1.2570  last_time: 1.1791  data_time: 0.3142  last_data_time: 0.3068   lr: 0.0067932  max_mem: 16368M
[03/01 19:06:26 d2.utils.events]:  eta: 0:23:13  iter: 359  total_loss: 0.6056  loss_cls: 0.1226  loss_box_reg: 0.1927  loss_mask: 0.1965  loss_rpn_cls: 0.02237  loss_rpn_loc: 0.07113    time: 1.2559  last_time: 1.1883  data_time: 0.3151  last_data_time: 0.3021   lr: 0.0071928  max_mem: 16368M
[03/01 19:06:51 d2.utils.events]:  eta: 0:22:48  iter: 379  total_loss: 0.615  loss_cls: 0.1253  loss_box_reg: 0.1932  loss_mask: 0.1997  loss_rpn_cls: 0.02125  loss_rpn_loc: 0.0625    time: 1.2543  last_time: 1.1857  data_time: 0.3064  last_data_time: 0.2782   lr: 0.0075924  max_mem: 16368M
[03/01 19:07:16 d2.utils.events]:  eta: 0:22:25  iter: 399  total_loss: 0.6018  loss_cls: 0.1229  loss_box_reg: 0.1965  loss_mask: 0.2009  loss_rpn_cls: 0.02146  loss_rpn_loc: 0.06703    time: 1.2546  last_time: 1.2581  data_time: 0.3308  last_data_time: 0.3034   lr: 0.007992  max_mem: 16404M
[03/01 19:07:41 d2.utils.events]:  eta: 0:22:01  iter: 419  total_loss: 0.6295  loss_cls: 0.1209  loss_box_reg: 0.2015  loss_mask: 0.2072  loss_rpn_cls: 0.02222  loss_rpn_loc: 0.0664    time: 1.2538  last_time: 1.2713  data_time: 0.3251  last_data_time: 0.3213   lr: 0.0083916  max_mem: 16404M
[03/01 19:08:05 d2.utils.events]:  eta: 0:21:37  iter: 439  total_loss: 0.5908  loss_cls: 0.1257  loss_box_reg: 0.1919  loss_mask: 0.1887  loss_rpn_cls: 0.01619  loss_rpn_loc: 0.05593    time: 1.2526  last_time: 1.2648  data_time: 0.3047  last_data_time: 0.3397   lr: 0.0087912  max_mem: 16404M
[03/01 19:08:30 d2.utils.events]:  eta: 0:21:13  iter: 459  total_loss: 0.5921  loss_cls: 0.1229  loss_box_reg: 0.1925  loss_mask: 0.1877  loss_rpn_cls: 0.01813  loss_rpn_loc: 0.06479    time: 1.2526  last_time: 1.2741  data_time: 0.3185  last_data_time: 0.3096   lr: 0.0091908  max_mem: 16404M
[03/01 19:08:55 d2.utils.events]:  eta: 0:20:50  iter: 479  total_loss: 0.5664  loss_cls: 0.119  loss_box_reg: 0.1901  loss_mask: 0.1853  loss_rpn_cls: 0.01876  loss_rpn_loc: 0.05918    time: 1.2528  last_time: 1.2279  data_time: 0.3282  last_data_time: 0.2885   lr: 0.0095904  max_mem: 16404M
[03/01 19:09:21 d2.utils.events]:  eta: 0:20:27  iter: 499  total_loss: 0.5621  loss_cls: 0.1153  loss_box_reg: 0.1867  loss_mask: 0.1918  loss_rpn_cls: 0.01994  loss_rpn_loc: 0.07327    time: 1.2528  last_time: 1.1377  data_time: 0.3277  last_data_time: 0.2633   lr: 0.00999  max_mem: 16404M
[03/01 19:09:46 d2.utils.events]:  eta: 0:20:03  iter: 519  total_loss: 0.5667  loss_cls: 0.1116  loss_box_reg: 0.1837  loss_mask: 0.1813  loss_rpn_cls: 0.01942  loss_rpn_loc: 0.06785    time: 1.2528  last_time: 1.2710  data_time: 0.3268  last_data_time: 0.3367   lr: 0.01039  max_mem: 16593M
[03/01 19:10:11 d2.utils.events]:  eta: 0:19:38  iter: 539  total_loss: 0.5607  loss_cls: 0.108  loss_box_reg: 0.1846  loss_mask: 0.181  loss_rpn_cls: 0.01898  loss_rpn_loc: 0.05858    time: 1.2519  last_time: 1.2427  data_time: 0.3074  last_data_time: 0.2768   lr: 0.010789  max_mem: 16593M
[03/01 19:10:36 d2.utils.events]:  eta: 0:19:14  iter: 559  total_loss: 0.5824  loss_cls: 0.1248  loss_box_reg: 0.1967  loss_mask: 0.181  loss_rpn_cls: 0.0161  loss_rpn_loc: 0.05612    time: 1.2527  last_time: 1.2902  data_time: 0.3337  last_data_time: 0.3233   lr: 0.011189  max_mem: 16593M
[03/01 19:11:01 d2.utils.events]:  eta: 0:18:50  iter: 579  total_loss: 0.567  loss_cls: 0.1156  loss_box_reg: 0.1885  loss_mask: 0.1894  loss_rpn_cls: 0.01813  loss_rpn_loc: 0.05084    time: 1.2522  last_time: 1.2391  data_time: 0.3037  last_data_time: 0.2893   lr: 0.011588  max_mem: 16593M
[03/01 19:11:28 d2.utils.events]:  eta: 0:18:26  iter: 599  total_loss: 0.5578  loss_cls: 0.1157  loss_box_reg: 0.1959  loss_mask: 0.1791  loss_rpn_cls: 0.01589  loss_rpn_loc: 0.05988    time: 1.2558  last_time: 1.6701  data_time: 0.3741  last_data_time: 0.5977   lr: 0.011988  max_mem: 16665M
[03/01 19:11:58 d2.utils.events]:  eta: 0:18:03  iter: 619  total_loss: 0.5645  loss_cls: 0.1109  loss_box_reg: 0.1785  loss_mask: 0.1776  loss_rpn_cls: 0.0159  loss_rpn_loc: 0.06313    time: 1.2634  last_time: 1.3437  data_time: 0.4644  last_data_time: 0.3307   lr: 0.012388  max_mem: 16665M
[03/01 19:12:23 d2.utils.events]:  eta: 0:17:39  iter: 639  total_loss: 0.5355  loss_cls: 0.1041  loss_box_reg: 0.1756  loss_mask: 0.1768  loss_rpn_cls: 0.01886  loss_rpn_loc: 0.06505    time: 1.2636  last_time: 1.2204  data_time: 0.3399  last_data_time: 0.3048   lr: 0.012787  max_mem: 16678M
[03/01 19:12:49 d2.utils.events]:  eta: 0:17:15  iter: 659  total_loss: 0.5437  loss_cls: 0.1033  loss_box_reg: 0.1762  loss_mask: 0.17  loss_rpn_cls: 0.01796  loss_rpn_loc: 0.06664    time: 1.2647  last_time: 1.3250  data_time: 0.3407  last_data_time: 0.3693   lr: 0.013187  max_mem: 16836M
[03/01 19:13:15 d2.utils.events]:  eta: 0:16:52  iter: 679  total_loss: 0.5357  loss_cls: 0.1068  loss_box_reg: 0.183  loss_mask: 0.177  loss_rpn_cls: 0.01491  loss_rpn_loc: 0.06235    time: 1.2656  last_time: 1.3006  data_time: 0.3371  last_data_time: 0.3544   lr: 0.013586  max_mem: 16836M
[03/01 19:13:41 d2.utils.events]:  eta: 0:16:28  iter: 699  total_loss: 0.5494  loss_cls: 0.109  loss_box_reg: 0.1876  loss_mask: 0.1693  loss_rpn_cls: 0.01651  loss_rpn_loc: 0.05897    time: 1.2658  last_time: 1.1819  data_time: 0.3235  last_data_time: 0.2861   lr: 0.013986  max_mem: 16836M
[03/01 19:14:06 d2.utils.events]:  eta: 0:16:03  iter: 719  total_loss: 0.5209  loss_cls: 0.1065  loss_box_reg: 0.1768  loss_mask: 0.172  loss_rpn_cls: 0.01486  loss_rpn_loc: 0.06152    time: 1.2657  last_time: 1.2754  data_time: 0.3149  last_data_time: 0.3293   lr: 0.014386  max_mem: 16836M
[03/01 19:14:32 d2.utils.events]:  eta: 0:15:39  iter: 739  total_loss: 0.5346  loss_cls: 0.1024  loss_box_reg: 0.1847  loss_mask: 0.1716  loss_rpn_cls: 0.01395  loss_rpn_loc: 0.06092    time: 1.2663  last_time: 1.3020  data_time: 0.3439  last_data_time: 0.3290   lr: 0.014785  max_mem: 16836M
[03/01 19:14:57 d2.utils.events]:  eta: 0:15:14  iter: 759  total_loss: 0.5108  loss_cls: 0.09563  loss_box_reg: 0.1723  loss_mask: 0.1646  loss_rpn_cls: 0.01585  loss_rpn_loc: 0.06625    time: 1.2663  last_time: 1.3310  data_time: 0.3167  last_data_time: 0.3323   lr: 0.015185  max_mem: 16836M
[03/01 19:15:23 d2.utils.events]:  eta: 0:14:50  iter: 779  total_loss: 0.5402  loss_cls: 0.09636  loss_box_reg: 0.185  loss_mask: 0.174  loss_rpn_cls: 0.01406  loss_rpn_loc: 0.05359    time: 1.2666  last_time: 1.3375  data_time: 0.3393  last_data_time: 0.3689   lr: 0.015584  max_mem: 16836M
[03/01 19:15:48 d2.utils.events]:  eta: 0:14:26  iter: 799  total_loss: 0.5366  loss_cls: 0.09746  loss_box_reg: 0.1834  loss_mask: 0.1613  loss_rpn_cls: 0.01414  loss_rpn_loc: 0.07214    time: 1.2668  last_time: 1.2398  data_time: 0.3202  last_data_time: 0.2903   lr: 0.015984  max_mem: 17051M
[03/01 19:16:13 d2.utils.events]:  eta: 0:14:02  iter: 819  total_loss: 0.5224  loss_cls: 0.09796  loss_box_reg: 0.1787  loss_mask: 0.1678  loss_rpn_cls: 0.01504  loss_rpn_loc: 0.05436    time: 1.2668  last_time: 1.3178  data_time: 0.3097  last_data_time: 0.3149   lr: 0.016384  max_mem: 17051M
[03/01 19:16:39 d2.utils.events]:  eta: 0:13:37  iter: 839  total_loss: 0.4987  loss_cls: 0.09256  loss_box_reg: 0.1709  loss_mask: 0.1603  loss_rpn_cls: 0.01319  loss_rpn_loc: 0.05632    time: 1.2665  last_time: 1.2547  data_time: 0.3189  last_data_time: 0.3001   lr: 0.016783  max_mem: 17051M
[03/01 19:17:04 d2.utils.events]:  eta: 0:13:13  iter: 859  total_loss: 0.5151  loss_cls: 0.09598  loss_box_reg: 0.1811  loss_mask: 0.1693  loss_rpn_cls: 0.01501  loss_rpn_loc: 0.06296    time: 1.2669  last_time: 1.3321  data_time: 0.3344  last_data_time: 0.3500   lr: 0.017183  max_mem: 17051M
[03/01 19:17:29 d2.utils.events]:  eta: 0:12:49  iter: 879  total_loss: 0.5126  loss_cls: 0.08872  loss_box_reg: 0.1755  loss_mask: 0.1664  loss_rpn_cls: 0.01522  loss_rpn_loc: 0.06472    time: 1.2667  last_time: 1.3207  data_time: 0.3191  last_data_time: 0.3279   lr: 0.017582  max_mem: 17051M
[03/01 19:17:55 d2.utils.events]:  eta: 0:12:25  iter: 899  total_loss: 0.5094  loss_cls: 0.09697  loss_box_reg: 0.1767  loss_mask: 0.1688  loss_rpn_cls: 0.01352  loss_rpn_loc: 0.04917    time: 1.2674  last_time: 1.3067  data_time: 0.3352  last_data_time: 0.3537   lr: 0.017982  max_mem: 17051M
[03/01 19:18:20 d2.utils.events]:  eta: 0:12:00  iter: 919  total_loss: 0.5083  loss_cls: 0.09862  loss_box_reg: 0.1751  loss_mask: 0.1669  loss_rpn_cls: 0.0149  loss_rpn_loc: 0.04934    time: 1.2670  last_time: 1.2485  data_time: 0.3098  last_data_time: 0.3042   lr: 0.018382  max_mem: 17051M
[03/01 19:18:46 d2.utils.events]:  eta: 0:11:36  iter: 939  total_loss: 0.5207  loss_cls: 0.08942  loss_box_reg: 0.1731  loss_mask: 0.1701  loss_rpn_cls: 0.01467  loss_rpn_loc: 0.06092    time: 1.2671  last_time: 1.3172  data_time: 0.3157  last_data_time: 0.3404   lr: 0.018781  max_mem: 17051M
[03/01 19:19:11 d2.utils.events]:  eta: 0:11:12  iter: 959  total_loss: 0.4828  loss_cls: 0.08904  loss_box_reg: 0.1702  loss_mask: 0.1592  loss_rpn_cls: 0.01129  loss_rpn_loc: 0.05626    time: 1.2675  last_time: 1.2125  data_time: 0.3280  last_data_time: 0.2972   lr: 0.019181  max_mem: 17051M
[03/01 19:19:37 d2.utils.events]:  eta: 0:10:47  iter: 979  total_loss: 0.4795  loss_cls: 0.08464  loss_box_reg: 0.1638  loss_mask: 0.1541  loss_rpn_cls: 0.01102  loss_rpn_loc: 0.06404    time: 1.2674  last_time: 1.2317  data_time: 0.3097  last_data_time: 0.2767   lr: 0.01958  max_mem: 17051M
[03/01 19:20:03 d2.utils.events]:  eta: 0:10:22  iter: 999  total_loss: 0.5117  loss_cls: 0.09268  loss_box_reg: 0.1798  loss_mask: 0.1644  loss_rpn_cls: 0.01162  loss_rpn_loc: 0.05724    time: 1.2672  last_time: 1.2156  data_time: 0.3155  last_data_time: 0.2951   lr: 0.01998  max_mem: 17051M
[03/01 19:20:29 d2.utils.events]:  eta: 0:09:58  iter: 1019  total_loss: 0.4914  loss_cls: 0.09221  loss_box_reg: 0.1768  loss_mask: 0.1647  loss_rpn_cls: 0.01127  loss_rpn_loc: 0.0565    time: 1.2680  last_time: 1.2883  data_time: 0.3357  last_data_time: 0.3272   lr: 0.02  max_mem: 17051M
[03/01 19:20:55 d2.utils.events]:  eta: 0:09:34  iter: 1039  total_loss: 0.4732  loss_cls: 0.09042  loss_box_reg: 0.169  loss_mask: 0.1505  loss_rpn_cls: 0.01228  loss_rpn_loc: 0.05743    time: 1.2685  last_time: 1.3046  data_time: 0.3307  last_data_time: 0.3292   lr: 0.02  max_mem: 17051M
[03/01 19:21:21 d2.utils.events]:  eta: 0:09:09  iter: 1059  total_loss: 0.5056  loss_cls: 0.0923  loss_box_reg: 0.1789  loss_mask: 0.1622  loss_rpn_cls: 0.0123  loss_rpn_loc: 0.06184    time: 1.2691  last_time: 1.3601  data_time: 0.3350  last_data_time: 0.3944   lr: 0.02  max_mem: 17051M
[03/01 19:21:47 d2.utils.events]:  eta: 0:08:44  iter: 1079  total_loss: 0.4975  loss_cls: 0.09278  loss_box_reg: 0.1754  loss_mask: 0.156  loss_rpn_cls: 0.01151  loss_rpn_loc: 0.05487    time: 1.2697  last_time: 1.4621  data_time: 0.3321  last_data_time: 0.4988   lr: 0.02  max_mem: 17051M
[03/01 19:22:13 d2.utils.events]:  eta: 0:08:20  iter: 1099  total_loss: 0.4954  loss_cls: 0.09133  loss_box_reg: 0.1716  loss_mask: 0.1537  loss_rpn_cls: 0.01261  loss_rpn_loc: 0.05332    time: 1.2700  last_time: 1.3016  data_time: 0.3110  last_data_time: 0.3100   lr: 0.02  max_mem: 17051M
[03/01 19:22:49 d2.utils.events]:  eta: 0:07:56  iter: 1119  total_loss: 0.4824  loss_cls: 0.0874  loss_box_reg: 0.1706  loss_mask: 0.1571  loss_rpn_cls: 0.01126  loss_rpn_loc: 0.05615    time: 1.2795  last_time: 1.3400  data_time: 0.3707  last_data_time: 0.3787   lr: 0.02  max_mem: 17051M
[03/01 19:23:15 d2.utils.events]:  eta: 0:07:31  iter: 1139  total_loss: 0.4785  loss_cls: 0.0918  loss_box_reg: 0.1706  loss_mask: 0.1612  loss_rpn_cls: 0.01113  loss_rpn_loc: 0.05048    time: 1.2797  last_time: 1.2062  data_time: 0.3253  last_data_time: 0.2702   lr: 0.02  max_mem: 17051M
[03/01 19:23:40 d2.utils.events]:  eta: 0:07:06  iter: 1159  total_loss: 0.4796  loss_cls: 0.08799  loss_box_reg: 0.1685  loss_mask: 0.1571  loss_rpn_cls: 0.009621  loss_rpn_loc: 0.05066    time: 1.2798  last_time: 1.5200  data_time: 0.3161  last_data_time: 0.5139   lr: 0.02  max_mem: 17051M
[03/01 19:24:06 d2.utils.events]:  eta: 0:06:42  iter: 1179  total_loss: 0.4695  loss_cls: 0.08619  loss_box_reg: 0.1633  loss_mask: 0.1572  loss_rpn_cls: 0.0116  loss_rpn_loc: 0.05024    time: 1.2797  last_time: 1.3034  data_time: 0.3033  last_data_time: 0.2779   lr: 0.02  max_mem: 17051M
[03/01 19:24:32 d2.utils.events]:  eta: 0:06:18  iter: 1199  total_loss: 0.4956  loss_cls: 0.08763  loss_box_reg: 0.1668  loss_mask: 0.1509  loss_rpn_cls: 0.0114  loss_rpn_loc: 0.05856    time: 1.2801  last_time: 1.2768  data_time: 0.3309  last_data_time: 0.3257   lr: 0.02  max_mem: 17051M
[03/01 19:24:58 d2.utils.events]:  eta: 0:05:53  iter: 1219  total_loss: 0.4681  loss_cls: 0.08581  loss_box_reg: 0.1662  loss_mask: 0.1544  loss_rpn_cls: 0.01326  loss_rpn_loc: 0.05265    time: 1.2805  last_time: 1.2873  data_time: 0.3315  last_data_time: 0.3152   lr: 0.02  max_mem: 17051M
[03/01 19:25:23 d2.utils.events]:  eta: 0:05:28  iter: 1239  total_loss: 0.4603  loss_cls: 0.08123  loss_box_reg: 0.164  loss_mask: 0.1571  loss_rpn_cls: 0.01057  loss_rpn_loc: 0.05263    time: 1.2803  last_time: 1.1553  data_time: 0.3037  last_data_time: 0.2565   lr: 0.02  max_mem: 17051M
[03/01 19:25:49 d2.utils.events]:  eta: 0:05:03  iter: 1259  total_loss: 0.4617  loss_cls: 0.07947  loss_box_reg: 0.1671  loss_mask: 0.1523  loss_rpn_cls: 0.01072  loss_rpn_loc: 0.05372    time: 1.2802  last_time: 1.2688  data_time: 0.3283  last_data_time: 0.3198   lr: 0.02  max_mem: 17068M
[03/01 19:26:14 d2.utils.events]:  eta: 0:04:38  iter: 1279  total_loss: 0.4331  loss_cls: 0.07624  loss_box_reg: 0.1617  loss_mask: 0.1429  loss_rpn_cls: 0.009811  loss_rpn_loc: 0.04877    time: 1.2802  last_time: 1.3138  data_time: 0.3189  last_data_time: 0.3330   lr: 0.02  max_mem: 17068M
[03/01 19:26:40 d2.utils.events]:  eta: 0:04:13  iter: 1299  total_loss: 0.4541  loss_cls: 0.08424  loss_box_reg: 0.1608  loss_mask: 0.1476  loss_rpn_cls: 0.008684  loss_rpn_loc: 0.04786    time: 1.2802  last_time: 1.3149  data_time: 0.3108  last_data_time: 0.3008   lr: 0.02  max_mem: 17068M
[03/01 19:27:06 d2.utils.events]:  eta: 0:03:48  iter: 1319  total_loss: 0.4603  loss_cls: 0.08334  loss_box_reg: 0.1641  loss_mask: 0.1578  loss_rpn_cls: 0.01032  loss_rpn_loc: 0.0448    time: 1.2806  last_time: 1.2983  data_time: 0.3400  last_data_time: 0.3494   lr: 0.02  max_mem: 17068M
[03/01 19:27:32 d2.utils.events]:  eta: 0:03:23  iter: 1339  total_loss: 0.4415  loss_cls: 0.07604  loss_box_reg: 0.1608  loss_mask: 0.1518  loss_rpn_cls: 0.009741  loss_rpn_loc: 0.05068    time: 1.2809  last_time: 1.2885  data_time: 0.3217  last_data_time: 0.3081   lr: 0.02  max_mem: 17068M
[03/01 19:27:58 d2.utils.events]:  eta: 0:02:57  iter: 1359  total_loss: 0.4549  loss_cls: 0.07473  loss_box_reg: 0.1572  loss_mask: 0.1439  loss_rpn_cls: 0.01194  loss_rpn_loc: 0.05395    time: 1.2811  last_time: 1.2409  data_time: 0.3223  last_data_time: 0.2963   lr: 0.02  max_mem: 17237M
[03/01 19:28:24 d2.utils.events]:  eta: 0:02:32  iter: 1379  total_loss: 0.448  loss_cls: 0.07835  loss_box_reg: 0.1566  loss_mask: 0.1466  loss_rpn_cls: 0.009651  loss_rpn_loc: 0.05157    time: 1.2808  last_time: 1.2253  data_time: 0.2982  last_data_time: 0.2710   lr: 0.02  max_mem: 17240M
[03/01 19:28:50 d2.utils.events]:  eta: 0:02:07  iter: 1399  total_loss: 0.4629  loss_cls: 0.08524  loss_box_reg: 0.1684  loss_mask: 0.1512  loss_rpn_cls: 0.008121  loss_rpn_loc: 0.04648    time: 1.2814  last_time: 1.3574  data_time: 0.3350  last_data_time: 0.3796   lr: 0.02  max_mem: 17389M
[03/01 19:29:16 d2.utils.events]:  eta: 0:01:41  iter: 1419  total_loss: 0.4472  loss_cls: 0.07415  loss_box_reg: 0.1552  loss_mask: 0.1456  loss_rpn_cls: 0.0116  loss_rpn_loc: 0.04816    time: 1.2814  last_time: 1.3153  data_time: 0.3106  last_data_time: 0.3248   lr: 0.02  max_mem: 17389M
[03/01 19:29:41 d2.utils.events]:  eta: 0:01:16  iter: 1439  total_loss: 0.4235  loss_cls: 0.07463  loss_box_reg: 0.146  loss_mask: 0.1426  loss_rpn_cls: 0.008902  loss_rpn_loc: 0.04795    time: 1.2813  last_time: 1.2458  data_time: 0.3214  last_data_time: 0.2810   lr: 0.02  max_mem: 17389M
[03/01 19:30:07 d2.utils.events]:  eta: 0:00:51  iter: 1459  total_loss: 0.4381  loss_cls: 0.0818  loss_box_reg: 0.1557  loss_mask: 0.1444  loss_rpn_cls: 0.01084  loss_rpn_loc: 0.05252    time: 1.2814  last_time: 1.2366  data_time: 0.3156  last_data_time: 0.2674   lr: 0.02  max_mem: 17389M
[03/01 19:30:33 d2.utils.events]:  eta: 0:00:25  iter: 1479  total_loss: 0.4458  loss_cls: 0.08041  loss_box_reg: 0.1656  loss_mask: 0.1471  loss_rpn_cls: 0.008785  loss_rpn_loc: 0.0458    time: 1.2816  last_time: 1.2152  data_time: 0.3212  last_data_time: 0.2620   lr: 0.02  max_mem: 17389M
[03/01 19:31:02 d2.utils.events]:  eta: 0:00:00  iter: 1499  total_loss: 0.4368  loss_cls: 0.07627  loss_box_reg: 0.1551  loss_mask: 0.1443  loss_rpn_cls: 0.009427  loss_rpn_loc: 0.04804    time: 1.2818  last_time: 1.2625  data_time: 0.3229  last_data_time: 0.2978   lr: 0.02  max_mem: 17389M
[03/01 19:31:02 d2.engine.hooks]: Overall training speed: 1498 iterations in 0:32:00 (1.2818 s / it)
[03/01 19:31:02 d2.engine.hooks]: Total training time: 0:32:12 (0:00:12 on hooks)
[03/01 19:31:05 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
| background | 0            |    car     | 8021         | pedestrian | 3347         |
|            | 0            |            | 0            |            | 0            |
|            | 0            |            | 0            |            | 0            |
|            | 0            |   ignore   | 2765         |            |              |
|   total    | 14133        |            |              |            |              |
[03/01 19:31:05 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/01 19:31:05 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 19:31:05 d2.data.common]: Serializing 2919 elements to byte tensors and concatenating them all ...
[03/01 19:31:05 d2.data.common]: Serialized dataset takes 5.86 MiB
WARNING [03/01 19:31:05 d2.engine.defaults]: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[03/01 19:31:12 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from /ghome/group07/C5-W2/lr_0_02_bs_128_is_16/model_0001499.pth ...
[03/01 19:31:15 d2.evaluation.coco_evaluation]: Trying to convert 'KITTI-MOTS_val' to COCO format ...
[03/01 19:31:15 d2.data.datasets.coco]: Converting annotations of dataset 'KITTI-MOTS_val' to COCO format ...)
[03/01 19:31:17 d2.data.datasets.coco]: Converting dataset dicts into COCO format
[03/01 19:31:17 d2.data.datasets.coco]: Conversion finished, #images: 2919, #annotations: 14133
[03/01 19:31:17 d2.data.datasets.coco]: Caching COCO format annotations at '/ghome/group07/C5-W2/lr_0_02_bs_128_is_16/KITTI-MOTS_val_coco_format.json' ...
[03/01 19:31:20 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/01 19:31:20 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 19:31:20 d2.data.common]: Serializing 2919 elements to byte tensors and concatenating them all ...
[03/01 19:31:20 d2.data.common]: Serialized dataset takes 5.86 MiB
[03/01 19:31:20 d2.evaluation.evaluator]: Start inference on 2919 batches
[03/01 19:31:22 d2.evaluation.evaluator]: Inference done 11/2919. Dataloading: 0.0020 s/iter. Inference: 0.0591 s/iter. Eval: 0.0057 s/iter. Total: 0.0668 s/iter. ETA=0:03:14
[03/01 19:31:27 d2.evaluation.evaluator]: Inference done 98/2919. Dataloading: 0.0026 s/iter. Inference: 0.0526 s/iter. Eval: 0.0031 s/iter. Total: 0.0584 s/iter. ETA=0:02:44
[03/01 19:31:32 d2.evaluation.evaluator]: Inference done 184/2919. Dataloading: 0.0026 s/iter. Inference: 0.0529 s/iter. Eval: 0.0028 s/iter. Total: 0.0584 s/iter. ETA=0:02:39
[03/01 19:31:38 d2.evaluation.evaluator]: Inference done 269/2919. Dataloading: 0.0027 s/iter. Inference: 0.0532 s/iter. Eval: 0.0027 s/iter. Total: 0.0586 s/iter. ETA=0:02:35
[03/01 19:31:43 d2.evaluation.evaluator]: Inference done 357/2919. Dataloading: 0.0027 s/iter. Inference: 0.0531 s/iter. Eval: 0.0025 s/iter. Total: 0.0582 s/iter. ETA=0:02:29
[03/01 19:31:48 d2.evaluation.evaluator]: Inference done 442/2919. Dataloading: 0.0027 s/iter. Inference: 0.0532 s/iter. Eval: 0.0024 s/iter. Total: 0.0584 s/iter. ETA=0:02:24
[03/01 19:31:53 d2.evaluation.evaluator]: Inference done 536/2919. Dataloading: 0.0027 s/iter. Inference: 0.0524 s/iter. Eval: 0.0023 s/iter. Total: 0.0575 s/iter. ETA=0:02:17
[03/01 19:31:58 d2.evaluation.evaluator]: Inference done 627/2919. Dataloading: 0.0027 s/iter. Inference: 0.0521 s/iter. Eval: 0.0024 s/iter. Total: 0.0572 s/iter. ETA=0:02:11
[03/01 19:32:03 d2.evaluation.evaluator]: Inference done 718/2919. Dataloading: 0.0027 s/iter. Inference: 0.0518 s/iter. Eval: 0.0024 s/iter. Total: 0.0569 s/iter. ETA=0:02:05
[03/01 19:32:08 d2.evaluation.evaluator]: Inference done 810/2919. Dataloading: 0.0027 s/iter. Inference: 0.0515 s/iter. Eval: 0.0024 s/iter. Total: 0.0567 s/iter. ETA=0:01:59
[03/01 19:32:13 d2.evaluation.evaluator]: Inference done 900/2919. Dataloading: 0.0027 s/iter. Inference: 0.0514 s/iter. Eval: 0.0025 s/iter. Total: 0.0566 s/iter. ETA=0:01:54
[03/01 19:32:18 d2.evaluation.evaluator]: Inference done 987/2919. Dataloading: 0.0027 s/iter. Inference: 0.0515 s/iter. Eval: 0.0025 s/iter. Total: 0.0567 s/iter. ETA=0:01:49
[03/01 19:32:23 d2.evaluation.evaluator]: Inference done 1075/2919. Dataloading: 0.0027 s/iter. Inference: 0.0515 s/iter. Eval: 0.0026 s/iter. Total: 0.0568 s/iter. ETA=0:01:44
[03/01 19:32:28 d2.evaluation.evaluator]: Inference done 1166/2919. Dataloading: 0.0026 s/iter. Inference: 0.0514 s/iter. Eval: 0.0026 s/iter. Total: 0.0567 s/iter. ETA=0:01:39
[03/01 19:32:33 d2.evaluation.evaluator]: Inference done 1260/2919. Dataloading: 0.0027 s/iter. Inference: 0.0511 s/iter. Eval: 0.0026 s/iter. Total: 0.0564 s/iter. ETA=0:01:33
[03/01 19:32:38 d2.evaluation.evaluator]: Inference done 1343/2919. Dataloading: 0.0027 s/iter. Inference: 0.0513 s/iter. Eval: 0.0026 s/iter. Total: 0.0567 s/iter. ETA=0:01:29
[03/01 19:32:43 d2.evaluation.evaluator]: Inference done 1431/2919. Dataloading: 0.0027 s/iter. Inference: 0.0513 s/iter. Eval: 0.0026 s/iter. Total: 0.0567 s/iter. ETA=0:01:24
[03/01 19:32:48 d2.evaluation.evaluator]: Inference done 1519/2919. Dataloading: 0.0027 s/iter. Inference: 0.0513 s/iter. Eval: 0.0027 s/iter. Total: 0.0567 s/iter. ETA=0:01:19
[03/01 19:32:54 d2.evaluation.evaluator]: Inference done 1562/2919. Dataloading: 0.0027 s/iter. Inference: 0.0538 s/iter. Eval: 0.0027 s/iter. Total: 0.0593 s/iter. ETA=0:01:20
[03/01 19:32:59 d2.evaluation.evaluator]: Inference done 1650/2919. Dataloading: 0.0027 s/iter. Inference: 0.0537 s/iter. Eval: 0.0027 s/iter. Total: 0.0591 s/iter. ETA=0:01:15
[03/01 19:33:04 d2.evaluation.evaluator]: Inference done 1737/2919. Dataloading: 0.0027 s/iter. Inference: 0.0536 s/iter. Eval: 0.0027 s/iter. Total: 0.0591 s/iter. ETA=0:01:09
[03/01 19:33:09 d2.evaluation.evaluator]: Inference done 1814/2919. Dataloading: 0.0027 s/iter. Inference: 0.0536 s/iter. Eval: 0.0030 s/iter. Total: 0.0594 s/iter. ETA=0:01:05
[03/01 19:33:14 d2.evaluation.evaluator]: Inference done 1903/2919. Dataloading: 0.0027 s/iter. Inference: 0.0534 s/iter. Eval: 0.0030 s/iter. Total: 0.0592 s/iter. ETA=0:01:00
[03/01 19:33:19 d2.evaluation.evaluator]: Inference done 1990/2919. Dataloading: 0.0027 s/iter. Inference: 0.0533 s/iter. Eval: 0.0031 s/iter. Total: 0.0592 s/iter. ETA=0:00:54
[03/01 19:33:25 d2.evaluation.evaluator]: Inference done 2077/2919. Dataloading: 0.0027 s/iter. Inference: 0.0532 s/iter. Eval: 0.0031 s/iter. Total: 0.0591 s/iter. ETA=0:00:49
[03/01 19:33:30 d2.evaluation.evaluator]: Inference done 2165/2919. Dataloading: 0.0027 s/iter. Inference: 0.0531 s/iter. Eval: 0.0031 s/iter. Total: 0.0590 s/iter. ETA=0:00:44
[03/01 19:33:35 d2.evaluation.evaluator]: Inference done 2251/2919. Dataloading: 0.0027 s/iter. Inference: 0.0531 s/iter. Eval: 0.0031 s/iter. Total: 0.0590 s/iter. ETA=0:00:39
[03/01 19:33:40 d2.evaluation.evaluator]: Inference done 2340/2919. Dataloading: 0.0027 s/iter. Inference: 0.0530 s/iter. Eval: 0.0031 s/iter. Total: 0.0589 s/iter. ETA=0:00:34
[03/01 19:33:45 d2.evaluation.evaluator]: Inference done 2422/2919. Dataloading: 0.0028 s/iter. Inference: 0.0529 s/iter. Eval: 0.0032 s/iter. Total: 0.0590 s/iter. ETA=0:00:29
[03/01 19:33:50 d2.evaluation.evaluator]: Inference done 2501/2919. Dataloading: 0.0028 s/iter. Inference: 0.0530 s/iter. Eval: 0.0034 s/iter. Total: 0.0591 s/iter. ETA=0:00:24
[03/01 19:33:55 d2.evaluation.evaluator]: Inference done 2581/2919. Dataloading: 0.0028 s/iter. Inference: 0.0529 s/iter. Eval: 0.0035 s/iter. Total: 0.0592 s/iter. ETA=0:00:20
[03/01 19:34:00 d2.evaluation.evaluator]: Inference done 2667/2919. Dataloading: 0.0028 s/iter. Inference: 0.0529 s/iter. Eval: 0.0035 s/iter. Total: 0.0592 s/iter. ETA=0:00:14
[03/01 19:34:05 d2.evaluation.evaluator]: Inference done 2755/2919. Dataloading: 0.0028 s/iter. Inference: 0.0529 s/iter. Eval: 0.0035 s/iter. Total: 0.0592 s/iter. ETA=0:00:09
[03/01 19:34:10 d2.evaluation.evaluator]: Inference done 2840/2919. Dataloading: 0.0028 s/iter. Inference: 0.0529 s/iter. Eval: 0.0034 s/iter. Total: 0.0592 s/iter. ETA=0:00:04
[03/01 19:34:14 d2.evaluation.evaluator]: Total inference time: 0:02:52.196666 (0.059093 s / iter per device, on 1 devices)
[03/01 19:34:14 d2.evaluation.evaluator]: Total inference pure compute time: 0:02:33 (0.052768 s / iter per device, on 1 devices)
[03/01 19:34:14 d2.evaluation.coco_evaluation]: Preparing results for COCO format ...
[03/01 19:34:14 d2.evaluation.coco_evaluation]: Saving results to /ghome/group07/C5-W2/lr_0_02_bs_128_is_16/coco_instances_results.json
[03/01 19:34:15 d2.evaluation.coco_evaluation]: Evaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
[03/01 19:34:15 d2.evaluation.fast_eval_api]: Evaluate annotation type *bbox*
[03/01 19:34:15 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 0.85 seconds.
[03/01 19:34:15 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[03/01 19:34:16 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.11 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.405
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.565
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.463
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.255
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.474
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.521
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.161
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.462
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.464
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.311
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.513
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.641
[03/01 19:34:16 d2.evaluation.coco_evaluation]: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 40.492 | 56.478 | 46.258 | 25.502 | 47.351 | 52.097 |
[03/01 19:34:16 d2.evaluation.coco_evaluation]: Per-category bbox AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| background | nan  | car        | 65.834 | pedestrian | 51.183 |
|            | nan  |            | nan    |            | nan    |
|            | nan  |            | nan    |            | nan    |
|            | nan  | ignore     | 4.459  |            |        |
Loading and preparing results...
DONE (t=0.14s)
creating index...
index created!
[03/01 19:34:16 d2.evaluation.fast_eval_api]: Evaluate annotation type *segm*
[03/01 19:34:17 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 0.93 seconds.
[03/01 19:34:17 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[03/01 19:34:17 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.08 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.372
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.545
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.423
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.211
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.438
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.536
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.147
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.426
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.427
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.273
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.476
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.602
[03/01 19:34:17 d2.evaluation.coco_evaluation]: Evaluation results for segm: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 37.217 | 54.474 | 42.285 | 21.059 | 43.821 | 53.550 |
[03/01 19:34:17 d2.evaluation.coco_evaluation]: Per-category segm AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| background | nan  | car        | 66.115 | pedestrian | 41.309 |
|            | nan  |            | nan    |            | nan    |
|            | nan  |            | nan    |            | nan    |
|            | nan  | ignore     | 4.226  |            |        |
OrderedDict([('bbox', {'AP': 40.49203239201115, 'AP50': 56.4780829750404, 'AP75': 46.257562711492554, 'APs': 25.50196556316825, 'APm': 47.351435947257826, 'APl': 52.0969814467453, 'AP-background': nan, 'AP-car': 65.83430951819584, 'AP-pedestrian': 51.18257158999542, 'AP-': nan, 'AP-ignore': 4.459216067842181}), ('segm', {'AP': 37.21670617295014, 'AP50': 54.47356004011766, 'AP75': 42.28506455161873, 'APs': 21.059197364628787, 'APm': 43.82094424305249, 'APl': 53.55032414372724, 'AP-background': nan, 'AP-car': 66.11486737085644, 'AP-pedestrian': 41.30940102942879, 'AP-': nan, 'AP-ignore': 4.225850118565157})])

1
The device we will be working on is: cuda
[03/01 21:48:02 d2.engine.defaults]: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=12, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=44, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 11, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[03/01 21:48:05 d2.data.build]: Removed 0 images with no usable annotations. 5007 images left.
[03/01 21:48:06 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
| background | 0            |    car     | 18822        | pedestrian | 8065         |
|            | 0            |            | 0            |            | 0            |
|            | 0            |            | 0            |            | 0            |
|            | 0            |   ignore   | 4977         |            |              |
|   total    | 31864        |            |              |            |              |
[03/01 21:48:06 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[03/01 21:48:06 d2.data.build]: Using training sampler TrainingSampler
[03/01 21:48:06 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 21:48:06 d2.data.common]: Serializing 5007 elements to byte tensors and concatenating them all ...
[03/01 21:48:06 d2.data.common]: Serialized dataset takes 13.56 MiB
[03/01 21:48:06 d2.data.build]: Making batched data loader with batch_size=16
WARNING [03/01 21:48:06 d2.solver.build]: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/01 21:48:06 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl ...
[03/01 21:48:06 d2.engine.train_loop]: Starting training from iteration 0
[03/01 21:48:43 d2.utils.events]:  eta: 0:30:23  iter: 19  total_loss: 3.525  loss_cls: 2.117  loss_box_reg: 0.4929  loss_mask: 0.6724  loss_rpn_cls: 0.1644  loss_rpn_loc: 0.08788    time: 1.3659  last_time: 1.1468  data_time: 0.6766  last_data_time: 0.3142   lr: 0.00019981  max_mem: 15609M
[03/01 21:49:17 d2.utils.events]:  eta: 0:30:02  iter: 39  total_loss: 1.726  loss_cls: 0.5682  loss_box_reg: 0.4778  loss_mask: 0.5117  loss_rpn_cls: 0.07659  loss_rpn_loc: 0.07675    time: 1.3412  last_time: 1.1395  data_time: 0.4293  last_data_time: 0.3047   lr: 0.00039961  max_mem: 15827M
[03/01 21:49:48 d2.utils.events]:  eta: 0:29:52  iter: 59  total_loss: 1.344  loss_cls: 0.3583  loss_box_reg: 0.4504  loss_mask: 0.3836  loss_rpn_cls: 0.05464  loss_rpn_loc: 0.08781    time: 1.4175  last_time: 1.1227  data_time: 0.4102  last_data_time: 0.2900   lr: 0.00059941  max_mem: 16217M
[03/01 21:50:13 d2.utils.events]:  eta: 0:29:34  iter: 79  total_loss: 1.117  loss_cls: 0.2777  loss_box_reg: 0.385  loss_mask: 0.3204  loss_rpn_cls: 0.04781  loss_rpn_loc: 0.0824    time: 1.3737  last_time: 1.1793  data_time: 0.3361  last_data_time: 0.2814   lr: 0.00079921  max_mem: 16217M
[03/01 21:50:38 d2.utils.events]:  eta: 0:29:02  iter: 99  total_loss: 0.9481  loss_cls: 0.2268  loss_box_reg: 0.293  loss_mask: 0.2916  loss_rpn_cls: 0.04161  loss_rpn_loc: 0.07905    time: 1.3494  last_time: 1.2328  data_time: 0.3594  last_data_time: 0.3355   lr: 0.00099901  max_mem: 16217M
[03/01 21:51:03 d2.utils.events]:  eta: 0:28:31  iter: 119  total_loss: 0.8101  loss_cls: 0.1806  loss_box_reg: 0.2518  loss_mask: 0.273  loss_rpn_cls: 0.03901  loss_rpn_loc: 0.07204    time: 1.3285  last_time: 1.1799  data_time: 0.3212  last_data_time: 0.2801   lr: 0.0011988  max_mem: 16217M
[03/01 21:51:28 d2.utils.events]:  eta: 0:28:06  iter: 139  total_loss: 0.7588  loss_cls: 0.1614  loss_box_reg: 0.2368  loss_mask: 0.2505  loss_rpn_cls: 0.03327  loss_rpn_loc: 0.06739    time: 1.3191  last_time: 1.2652  data_time: 0.3578  last_data_time: 0.3358   lr: 0.0013986  max_mem: 16261M
[03/01 21:51:52 d2.utils.events]:  eta: 0:27:31  iter: 159  total_loss: 0.6968  loss_cls: 0.1544  loss_box_reg: 0.2105  loss_mask: 0.2508  loss_rpn_cls: 0.02873  loss_rpn_loc: 0.06614    time: 1.3064  last_time: 1.3148  data_time: 0.3204  last_data_time: 0.3730   lr: 0.0015984  max_mem: 16261M
[03/01 21:52:16 d2.utils.events]:  eta: 0:27:05  iter: 179  total_loss: 0.712  loss_cls: 0.1466  loss_box_reg: 0.2167  loss_mask: 0.246  loss_rpn_cls: 0.03052  loss_rpn_loc: 0.06538    time: 1.2960  last_time: 1.2428  data_time: 0.3139  last_data_time: 0.3609   lr: 0.0017982  max_mem: 16261M
[03/01 21:52:41 d2.utils.events]:  eta: 0:26:37  iter: 199  total_loss: 0.7108  loss_cls: 0.1417  loss_box_reg: 0.2105  loss_mask: 0.257  loss_rpn_cls: 0.03937  loss_rpn_loc: 0.07661    time: 1.2881  last_time: 1.1834  data_time: 0.3312  last_data_time: 0.2948   lr: 0.001998  max_mem: 16261M
[03/01 21:53:05 d2.utils.events]:  eta: 0:26:13  iter: 219  total_loss: 0.6808  loss_cls: 0.1415  loss_box_reg: 0.1946  loss_mask: 0.2416  loss_rpn_cls: 0.02998  loss_rpn_loc: 0.07183    time: 1.2819  last_time: 1.2814  data_time: 0.3291  last_data_time: 0.3256   lr: 0.0021978  max_mem: 16261M
[03/01 21:53:31 d2.utils.events]:  eta: 0:25:47  iter: 239  total_loss: 0.6644  loss_cls: 0.1303  loss_box_reg: 0.1921  loss_mask: 0.2237  loss_rpn_cls: 0.02973  loss_rpn_loc: 0.0759    time: 1.2820  last_time: 1.1928  data_time: 0.3784  last_data_time: 0.2863   lr: 0.0023976  max_mem: 16261M
[03/01 21:53:55 d2.utils.events]:  eta: 0:25:19  iter: 259  total_loss: 0.6485  loss_cls: 0.1357  loss_box_reg: 0.1946  loss_mask: 0.2325  loss_rpn_cls: 0.0243  loss_rpn_loc: 0.06491    time: 1.2759  last_time: 1.2626  data_time: 0.3076  last_data_time: 0.3515   lr: 0.0025974  max_mem: 16261M
[03/01 21:54:20 d2.utils.events]:  eta: 0:24:52  iter: 279  total_loss: 0.6611  loss_cls: 0.127  loss_box_reg: 0.1909  loss_mask: 0.2275  loss_rpn_cls: 0.02692  loss_rpn_loc: 0.07269    time: 1.2725  last_time: 1.2012  data_time: 0.3213  last_data_time: 0.3225   lr: 0.0027972  max_mem: 16261M
[03/01 21:54:44 d2.utils.events]:  eta: 0:24:27  iter: 299  total_loss: 0.6362  loss_cls: 0.125  loss_box_reg: 0.187  loss_mask: 0.2264  loss_rpn_cls: 0.02545  loss_rpn_loc: 0.06314    time: 1.2684  last_time: 1.2334  data_time: 0.3173  last_data_time: 0.3356   lr: 0.002997  max_mem: 16261M
[03/01 21:55:09 d2.utils.events]:  eta: 0:24:03  iter: 319  total_loss: 0.6391  loss_cls: 0.1279  loss_box_reg: 0.189  loss_mask: 0.2148  loss_rpn_cls: 0.02552  loss_rpn_loc: 0.06504    time: 1.2675  last_time: 1.1722  data_time: 0.3355  last_data_time: 0.3170   lr: 0.0031968  max_mem: 16391M
[03/01 21:55:34 d2.utils.events]:  eta: 0:23:39  iter: 339  total_loss: 0.6414  loss_cls: 0.1288  loss_box_reg: 0.1945  loss_mask: 0.2107  loss_rpn_cls: 0.02684  loss_rpn_loc: 0.07033    time: 1.2670  last_time: 1.1599  data_time: 0.3539  last_data_time: 0.2915   lr: 0.0033966  max_mem: 16391M
[03/01 21:55:59 d2.utils.events]:  eta: 0:23:16  iter: 359  total_loss: 0.6399  loss_cls: 0.1333  loss_box_reg: 0.2018  loss_mask: 0.2075  loss_rpn_cls: 0.02484  loss_rpn_loc: 0.07206    time: 1.2663  last_time: 1.3511  data_time: 0.3287  last_data_time: 0.3386   lr: 0.0035964  max_mem: 16550M
[03/01 21:56:25 d2.utils.events]:  eta: 0:22:53  iter: 379  total_loss: 0.6105  loss_cls: 0.1286  loss_box_reg: 0.2012  loss_mask: 0.2001  loss_rpn_cls: 0.02269  loss_rpn_loc: 0.06211    time: 1.2671  last_time: 1.4161  data_time: 0.3651  last_data_time: 0.4784   lr: 0.0037962  max_mem: 16550M
[03/01 21:56:50 d2.utils.events]:  eta: 0:22:30  iter: 399  total_loss: 0.6334  loss_cls: 0.1345  loss_box_reg: 0.2103  loss_mask: 0.2113  loss_rpn_cls: 0.02235  loss_rpn_loc: 0.05954    time: 1.2663  last_time: 1.2915  data_time: 0.3288  last_data_time: 0.3648   lr: 0.003996  max_mem: 16550M
[03/01 21:57:14 d2.utils.events]:  eta: 0:22:04  iter: 419  total_loss: 0.6225  loss_cls: 0.1197  loss_box_reg: 0.193  loss_mask: 0.2093  loss_rpn_cls: 0.02541  loss_rpn_loc: 0.06047    time: 1.2637  last_time: 1.2815  data_time: 0.3149  last_data_time: 0.3448   lr: 0.0041958  max_mem: 16550M
[03/01 21:57:39 d2.utils.events]:  eta: 0:21:40  iter: 439  total_loss: 0.6346  loss_cls: 0.124  loss_box_reg: 0.1906  loss_mask: 0.2053  loss_rpn_cls: 0.02217  loss_rpn_loc: 0.06491    time: 1.2624  last_time: 1.2125  data_time: 0.3312  last_data_time: 0.3057   lr: 0.0043956  max_mem: 16550M
[03/01 21:58:04 d2.utils.events]:  eta: 0:21:15  iter: 459  total_loss: 0.5774  loss_cls: 0.1159  loss_box_reg: 0.1821  loss_mask: 0.1983  loss_rpn_cls: 0.01996  loss_rpn_loc: 0.06066    time: 1.2613  last_time: 1.2300  data_time: 0.3437  last_data_time: 0.3043   lr: 0.0045954  max_mem: 16550M
[03/01 21:58:28 d2.utils.events]:  eta: 0:20:51  iter: 479  total_loss: 0.6398  loss_cls: 0.1287  loss_box_reg: 0.1972  loss_mask: 0.2065  loss_rpn_cls: 0.02267  loss_rpn_loc: 0.06772    time: 1.2601  last_time: 1.2238  data_time: 0.3269  last_data_time: 0.3641   lr: 0.0047952  max_mem: 16550M
[03/01 21:58:54 d2.utils.events]:  eta: 0:20:26  iter: 499  total_loss: 0.6074  loss_cls: 0.1262  loss_box_reg: 0.1963  loss_mask: 0.1978  loss_rpn_cls: 0.02047  loss_rpn_loc: 0.05949    time: 1.2595  last_time: 1.2844  data_time: 0.3280  last_data_time: 0.3253   lr: 0.004995  max_mem: 16723M
[03/01 21:59:19 d2.utils.events]:  eta: 0:20:02  iter: 519  total_loss: 0.5987  loss_cls: 0.1256  loss_box_reg: 0.199  loss_mask: 0.1824  loss_rpn_cls: 0.01755  loss_rpn_loc: 0.06264    time: 1.2600  last_time: 1.2229  data_time: 0.3507  last_data_time: 0.3305   lr: 0.0051948  max_mem: 16723M
[03/01 21:59:45 d2.utils.events]:  eta: 0:19:38  iter: 539  total_loss: 0.6266  loss_cls: 0.1312  loss_box_reg: 0.2074  loss_mask: 0.1909  loss_rpn_cls: 0.02076  loss_rpn_loc: 0.06821    time: 1.2597  last_time: 1.2878  data_time: 0.3268  last_data_time: 0.3482   lr: 0.0053946  max_mem: 16723M
[03/01 22:00:09 d2.utils.events]:  eta: 0:19:13  iter: 559  total_loss: 0.5935  loss_cls: 0.122  loss_box_reg: 0.192  loss_mask: 0.1903  loss_rpn_cls: 0.02203  loss_rpn_loc: 0.06884    time: 1.2587  last_time: 1.2661  data_time: 0.3115  last_data_time: 0.3239   lr: 0.0055944  max_mem: 16723M
[03/01 22:00:34 d2.utils.events]:  eta: 0:18:49  iter: 579  total_loss: 0.5899  loss_cls: 0.1214  loss_box_reg: 0.1967  loss_mask: 0.1919  loss_rpn_cls: 0.02  loss_rpn_loc: 0.06052    time: 1.2583  last_time: 1.2657  data_time: 0.3229  last_data_time: 0.3220   lr: 0.0057942  max_mem: 16723M
[03/01 22:00:59 d2.utils.events]:  eta: 0:18:25  iter: 599  total_loss: 0.5904  loss_cls: 0.1173  loss_box_reg: 0.1914  loss_mask: 0.1927  loss_rpn_cls: 0.02105  loss_rpn_loc: 0.05852    time: 1.2578  last_time: 1.2280  data_time: 0.3267  last_data_time: 0.3067   lr: 0.005994  max_mem: 16723M
[03/01 22:01:24 d2.utils.events]:  eta: 0:18:01  iter: 619  total_loss: 0.5807  loss_cls: 0.1216  loss_box_reg: 0.199  loss_mask: 0.189  loss_rpn_cls: 0.01975  loss_rpn_loc: 0.06317    time: 1.2575  last_time: 1.2916  data_time: 0.3257  last_data_time: 0.3223   lr: 0.0061938  max_mem: 16723M
[03/01 22:01:49 d2.utils.events]:  eta: 0:17:37  iter: 639  total_loss: 0.5617  loss_cls: 0.1079  loss_box_reg: 0.1719  loss_mask: 0.1939  loss_rpn_cls: 0.0165  loss_rpn_loc: 0.06295    time: 1.2572  last_time: 1.2384  data_time: 0.3254  last_data_time: 0.3211   lr: 0.0063936  max_mem: 16723M
[03/01 22:02:14 d2.utils.events]:  eta: 0:17:13  iter: 659  total_loss: 0.5687  loss_cls: 0.1056  loss_box_reg: 0.1819  loss_mask: 0.1859  loss_rpn_cls: 0.0172  loss_rpn_loc: 0.06654    time: 1.2571  last_time: 1.3659  data_time: 0.3303  last_data_time: 0.4455   lr: 0.0065934  max_mem: 16723M
[03/01 22:02:39 d2.utils.events]:  eta: 0:16:48  iter: 679  total_loss: 0.5746  loss_cls: 0.1184  loss_box_reg: 0.1942  loss_mask: 0.1866  loss_rpn_cls: 0.01629  loss_rpn_loc: 0.05681    time: 1.2568  last_time: 1.2790  data_time: 0.3138  last_data_time: 0.3225   lr: 0.0067932  max_mem: 16723M
[03/01 22:03:05 d2.utils.events]:  eta: 0:16:25  iter: 699  total_loss: 0.5767  loss_cls: 0.117  loss_box_reg: 0.1945  loss_mask: 0.1869  loss_rpn_cls: 0.01927  loss_rpn_loc: 0.0644    time: 1.2575  last_time: 1.2260  data_time: 0.3338  last_data_time: 0.2792   lr: 0.006993  max_mem: 16723M
[03/01 22:03:30 d2.utils.events]:  eta: 0:16:01  iter: 719  total_loss: 0.5638  loss_cls: 0.1167  loss_box_reg: 0.1934  loss_mask: 0.1776  loss_rpn_cls: 0.01558  loss_rpn_loc: 0.05822    time: 1.2577  last_time: 1.2142  data_time: 0.3106  last_data_time: 0.3026   lr: 0.0071928  max_mem: 16723M
[03/01 22:03:56 d2.utils.events]:  eta: 0:15:37  iter: 739  total_loss: 0.543  loss_cls: 0.112  loss_box_reg: 0.1869  loss_mask: 0.1749  loss_rpn_cls: 0.01652  loss_rpn_loc: 0.0552    time: 1.2583  last_time: 1.2735  data_time: 0.3290  last_data_time: 0.3186   lr: 0.0073926  max_mem: 16723M
[03/01 22:04:21 d2.utils.events]:  eta: 0:15:12  iter: 759  total_loss: 0.5378  loss_cls: 0.1077  loss_box_reg: 0.1755  loss_mask: 0.181  loss_rpn_cls: 0.01531  loss_rpn_loc: 0.05277    time: 1.2584  last_time: 1.2102  data_time: 0.3264  last_data_time: 0.3030   lr: 0.0075924  max_mem: 16820M
[03/01 22:04:46 d2.utils.events]:  eta: 0:14:48  iter: 779  total_loss: 0.5434  loss_cls: 0.1111  loss_box_reg: 0.1831  loss_mask: 0.1773  loss_rpn_cls: 0.01608  loss_rpn_loc: 0.05618    time: 1.2587  last_time: 1.2118  data_time: 0.3385  last_data_time: 0.3039   lr: 0.0077922  max_mem: 16820M
[03/01 22:05:12 d2.utils.events]:  eta: 0:14:25  iter: 799  total_loss: 0.5504  loss_cls: 0.1098  loss_box_reg: 0.1854  loss_mask: 0.1761  loss_rpn_cls: 0.01808  loss_rpn_loc: 0.06302    time: 1.2596  last_time: 1.2949  data_time: 0.3497  last_data_time: 0.3465   lr: 0.007992  max_mem: 16820M
[03/01 22:05:37 d2.utils.events]:  eta: 0:14:01  iter: 819  total_loss: 0.542  loss_cls: 0.1059  loss_box_reg: 0.1759  loss_mask: 0.1891  loss_rpn_cls: 0.01501  loss_rpn_loc: 0.05736    time: 1.2595  last_time: 1.1951  data_time: 0.3261  last_data_time: 0.2792   lr: 0.0081918  max_mem: 16820M
[03/01 22:06:02 d2.utils.events]:  eta: 0:13:36  iter: 839  total_loss: 0.5318  loss_cls: 0.1035  loss_box_reg: 0.1821  loss_mask: 0.1751  loss_rpn_cls: 0.01865  loss_rpn_loc: 0.06156    time: 1.2593  last_time: 1.2014  data_time: 0.3197  last_data_time: 0.2788   lr: 0.0083916  max_mem: 16820M
[03/01 22:06:27 d2.utils.events]:  eta: 0:13:11  iter: 859  total_loss: 0.5025  loss_cls: 0.09984  loss_box_reg: 0.169  loss_mask: 0.173  loss_rpn_cls: 0.01582  loss_rpn_loc: 0.05419    time: 1.2590  last_time: 1.3268  data_time: 0.3189  last_data_time: 0.3585   lr: 0.0085914  max_mem: 16820M
[03/01 22:06:53 d2.utils.events]:  eta: 0:12:47  iter: 879  total_loss: 0.5503  loss_cls: 0.1067  loss_box_reg: 0.1912  loss_mask: 0.173  loss_rpn_cls: 0.0148  loss_rpn_loc: 0.05799    time: 1.2598  last_time: 1.2533  data_time: 0.3398  last_data_time: 0.3321   lr: 0.0087912  max_mem: 16820M
[03/01 22:07:19 d2.utils.events]:  eta: 0:12:23  iter: 899  total_loss: 0.5331  loss_cls: 0.1005  loss_box_reg: 0.1804  loss_mask: 0.1764  loss_rpn_cls: 0.01546  loss_rpn_loc: 0.05895    time: 1.2601  last_time: 1.2196  data_time: 0.3287  last_data_time: 0.2717   lr: 0.008991  max_mem: 16820M
[03/01 22:07:44 d2.utils.events]:  eta: 0:11:59  iter: 919  total_loss: 0.5348  loss_cls: 0.1028  loss_box_reg: 0.1791  loss_mask: 0.1725  loss_rpn_cls: 0.01489  loss_rpn_loc: 0.06069    time: 1.2604  last_time: 1.3104  data_time: 0.3245  last_data_time: 0.3380   lr: 0.0091908  max_mem: 16820M
[03/01 22:08:09 d2.utils.events]:  eta: 0:11:35  iter: 939  total_loss: 0.4998  loss_cls: 0.09535  loss_box_reg: 0.171  loss_mask: 0.1708  loss_rpn_cls: 0.0148  loss_rpn_loc: 0.05556    time: 1.2604  last_time: 1.2738  data_time: 0.3256  last_data_time: 0.3283   lr: 0.0093906  max_mem: 16820M
[03/01 22:08:35 d2.utils.events]:  eta: 0:11:11  iter: 959  total_loss: 0.5118  loss_cls: 0.09488  loss_box_reg: 0.1724  loss_mask: 0.1743  loss_rpn_cls: 0.01375  loss_rpn_loc: 0.05238    time: 1.2608  last_time: 1.1942  data_time: 0.3344  last_data_time: 0.2773   lr: 0.0095904  max_mem: 16820M
[03/01 22:09:00 d2.utils.events]:  eta: 0:10:46  iter: 979  total_loss: 0.5007  loss_cls: 0.09469  loss_box_reg: 0.1706  loss_mask: 0.1697  loss_rpn_cls: 0.01302  loss_rpn_loc: 0.05896    time: 1.2609  last_time: 1.2652  data_time: 0.3227  last_data_time: 0.3361   lr: 0.0097902  max_mem: 16820M
[03/01 22:09:26 d2.utils.events]:  eta: 0:10:21  iter: 999  total_loss: 0.5227  loss_cls: 0.1003  loss_box_reg: 0.1797  loss_mask: 0.1711  loss_rpn_cls: 0.0136  loss_rpn_loc: 0.05709    time: 1.2611  last_time: 1.2690  data_time: 0.3231  last_data_time: 0.3213   lr: 0.00999  max_mem: 16908M
[03/01 22:09:52 d2.utils.events]:  eta: 0:09:58  iter: 1019  total_loss: 0.5262  loss_cls: 0.1036  loss_box_reg: 0.1722  loss_mask: 0.1682  loss_rpn_cls: 0.0148  loss_rpn_loc: 0.05617    time: 1.2618  last_time: 1.2972  data_time: 0.3356  last_data_time: 0.3197   lr: 0.01  max_mem: 16951M
[03/01 22:10:18 d2.utils.events]:  eta: 0:09:33  iter: 1039  total_loss: 0.5164  loss_cls: 0.09612  loss_box_reg: 0.1797  loss_mask: 0.1701  loss_rpn_cls: 0.01194  loss_rpn_loc: 0.05088    time: 1.2624  last_time: 1.2741  data_time: 0.3347  last_data_time: 0.3570   lr: 0.01  max_mem: 16951M
[03/01 22:10:44 d2.utils.events]:  eta: 0:09:08  iter: 1059  total_loss: 0.5077  loss_cls: 0.08915  loss_box_reg: 0.1808  loss_mask: 0.1736  loss_rpn_cls: 0.0121  loss_rpn_loc: 0.06229    time: 1.2628  last_time: 1.2866  data_time: 0.3367  last_data_time: 0.3567   lr: 0.01  max_mem: 16951M
[03/01 22:11:10 d2.utils.events]:  eta: 0:08:43  iter: 1079  total_loss: 0.5021  loss_cls: 0.09832  loss_box_reg: 0.1729  loss_mask: 0.1696  loss_rpn_cls: 0.01422  loss_rpn_loc: 0.0624    time: 1.2631  last_time: 1.3117  data_time: 0.3417  last_data_time: 0.3392   lr: 0.01  max_mem: 16951M
[03/01 22:11:36 d2.utils.events]:  eta: 0:08:19  iter: 1099  total_loss: 0.5057  loss_cls: 0.09567  loss_box_reg: 0.1726  loss_mask: 0.1673  loss_rpn_cls: 0.01218  loss_rpn_loc: 0.05479    time: 1.2637  last_time: 1.3236  data_time: 0.3473  last_data_time: 0.3417   lr: 0.01  max_mem: 16951M
[03/01 22:12:01 d2.utils.events]:  eta: 0:07:54  iter: 1119  total_loss: 0.4837  loss_cls: 0.08805  loss_box_reg: 0.1645  loss_mask: 0.1669  loss_rpn_cls: 0.0139  loss_rpn_loc: 0.0534    time: 1.2642  last_time: 1.2632  data_time: 0.3289  last_data_time: 0.3251   lr: 0.01  max_mem: 16951M
[03/01 22:12:34 d2.utils.events]:  eta: 0:07:30  iter: 1139  total_loss: 0.4951  loss_cls: 0.09179  loss_box_reg: 0.1719  loss_mask: 0.1677  loss_rpn_cls: 0.01377  loss_rpn_loc: 0.06063    time: 1.2707  last_time: 1.3227  data_time: 0.4089  last_data_time: 0.3116   lr: 0.01  max_mem: 16951M
[03/01 22:13:00 d2.utils.events]:  eta: 0:07:05  iter: 1159  total_loss: 0.4908  loss_cls: 0.09054  loss_box_reg: 0.1609  loss_mask: 0.1601  loss_rpn_cls: 0.01181  loss_rpn_loc: 0.05038    time: 1.2707  last_time: 1.2660  data_time: 0.3168  last_data_time: 0.3005   lr: 0.01  max_mem: 16951M
[03/01 22:13:25 d2.utils.events]:  eta: 0:06:41  iter: 1179  total_loss: 0.4773  loss_cls: 0.08457  loss_box_reg: 0.164  loss_mask: 0.1624  loss_rpn_cls: 0.01302  loss_rpn_loc: 0.05418    time: 1.2706  last_time: 1.2940  data_time: 0.3111  last_data_time: 0.3475   lr: 0.01  max_mem: 16951M
[03/01 22:13:50 d2.utils.events]:  eta: 0:06:16  iter: 1199  total_loss: 0.4565  loss_cls: 0.07878  loss_box_reg: 0.1566  loss_mask: 0.1551  loss_rpn_cls: 0.0122  loss_rpn_loc: 0.04506    time: 1.2705  last_time: 1.3096  data_time: 0.3099  last_data_time: 0.3561   lr: 0.01  max_mem: 16951M
[03/01 22:14:16 d2.utils.events]:  eta: 0:05:51  iter: 1219  total_loss: 0.499  loss_cls: 0.09333  loss_box_reg: 0.1749  loss_mask: 0.1708  loss_rpn_cls: 0.01402  loss_rpn_loc: 0.05529    time: 1.2711  last_time: 1.3099  data_time: 0.3435  last_data_time: 0.3555   lr: 0.01  max_mem: 16951M
[03/01 22:14:42 d2.utils.events]:  eta: 0:05:26  iter: 1239  total_loss: 0.4653  loss_cls: 0.08437  loss_box_reg: 0.1564  loss_mask: 0.1649  loss_rpn_cls: 0.009953  loss_rpn_loc: 0.0475    time: 1.2711  last_time: 1.3621  data_time: 0.3120  last_data_time: 0.3638   lr: 0.01  max_mem: 16951M
[03/01 22:15:07 d2.utils.events]:  eta: 0:05:02  iter: 1259  total_loss: 0.4711  loss_cls: 0.08468  loss_box_reg: 0.1577  loss_mask: 0.1566  loss_rpn_cls: 0.01065  loss_rpn_loc: 0.04813    time: 1.2712  last_time: 1.2848  data_time: 0.3108  last_data_time: 0.3063   lr: 0.01  max_mem: 16951M
[03/01 22:15:33 d2.utils.events]:  eta: 0:04:37  iter: 1279  total_loss: 0.4403  loss_cls: 0.08238  loss_box_reg: 0.1586  loss_mask: 0.1495  loss_rpn_cls: 0.009269  loss_rpn_loc: 0.04901    time: 1.2717  last_time: 1.3283  data_time: 0.3318  last_data_time: 0.3830   lr: 0.01  max_mem: 16951M
[03/01 22:15:59 d2.utils.events]:  eta: 0:04:12  iter: 1299  total_loss: 0.4423  loss_cls: 0.0826  loss_box_reg: 0.153  loss_mask: 0.1501  loss_rpn_cls: 0.01047  loss_rpn_loc: 0.05133    time: 1.2718  last_time: 1.2977  data_time: 0.3213  last_data_time: 0.3465   lr: 0.01  max_mem: 16951M
[03/01 22:16:25 d2.utils.events]:  eta: 0:03:47  iter: 1319  total_loss: 0.4756  loss_cls: 0.08915  loss_box_reg: 0.1653  loss_mask: 0.1623  loss_rpn_cls: 0.01029  loss_rpn_loc: 0.05281    time: 1.2723  last_time: 1.3144  data_time: 0.3354  last_data_time: 0.3394   lr: 0.01  max_mem: 16951M
[03/01 22:16:51 d2.utils.events]:  eta: 0:03:22  iter: 1339  total_loss: 0.4417  loss_cls: 0.07995  loss_box_reg: 0.1559  loss_mask: 0.1476  loss_rpn_cls: 0.01013  loss_rpn_loc: 0.05552    time: 1.2724  last_time: 1.2285  data_time: 0.3143  last_data_time: 0.2837   lr: 0.01  max_mem: 16951M
[03/01 22:17:16 d2.utils.events]:  eta: 0:02:57  iter: 1359  total_loss: 0.4564  loss_cls: 0.08294  loss_box_reg: 0.158  loss_mask: 0.1544  loss_rpn_cls: 0.009377  loss_rpn_loc: 0.04899    time: 1.2728  last_time: 1.3195  data_time: 0.3374  last_data_time: 0.3400   lr: 0.01  max_mem: 16951M
[03/01 22:17:43 d2.utils.events]:  eta: 0:02:31  iter: 1379  total_loss: 0.4617  loss_cls: 0.08509  loss_box_reg: 0.1608  loss_mask: 0.1563  loss_rpn_cls: 0.01247  loss_rpn_loc: 0.05157    time: 1.2732  last_time: 1.2152  data_time: 0.3280  last_data_time: 0.2711   lr: 0.01  max_mem: 16951M
[03/01 22:18:08 d2.utils.events]:  eta: 0:02:06  iter: 1399  total_loss: 0.4645  loss_cls: 0.0823  loss_box_reg: 0.1626  loss_mask: 0.1572  loss_rpn_cls: 0.00904  loss_rpn_loc: 0.05127    time: 1.2733  last_time: 1.3548  data_time: 0.3203  last_data_time: 0.3608   lr: 0.01  max_mem: 16951M
[03/01 22:18:34 d2.utils.events]:  eta: 0:01:41  iter: 1419  total_loss: 0.4609  loss_cls: 0.0797  loss_box_reg: 0.1562  loss_mask: 0.1579  loss_rpn_cls: 0.009434  loss_rpn_loc: 0.04919    time: 1.2738  last_time: 1.2541  data_time: 0.3302  last_data_time: 0.3049   lr: 0.01  max_mem: 17305M
[03/01 22:19:00 d2.utils.events]:  eta: 0:01:16  iter: 1439  total_loss: 0.4599  loss_cls: 0.08202  loss_box_reg: 0.1612  loss_mask: 0.1614  loss_rpn_cls: 0.009988  loss_rpn_loc: 0.05303    time: 1.2738  last_time: 1.2900  data_time: 0.3157  last_data_time: 0.3627   lr: 0.01  max_mem: 17305M
[03/01 22:19:25 d2.utils.events]:  eta: 0:00:50  iter: 1459  total_loss: 0.4511  loss_cls: 0.08336  loss_box_reg: 0.1639  loss_mask: 0.154  loss_rpn_cls: 0.009813  loss_rpn_loc: 0.04894    time: 1.2739  last_time: 1.3271  data_time: 0.3129  last_data_time: 0.3347   lr: 0.01  max_mem: 17305M
[03/01 22:19:51 d2.utils.events]:  eta: 0:00:25  iter: 1479  total_loss: 0.4587  loss_cls: 0.07907  loss_box_reg: 0.153  loss_mask: 0.1574  loss_rpn_cls: 0.009732  loss_rpn_loc: 0.04793    time: 1.2740  last_time: 1.2566  data_time: 0.3365  last_data_time: 0.3121   lr: 0.01  max_mem: 17305M
[03/01 22:20:18 d2.utils.events]:  eta: 0:00:00  iter: 1499  total_loss: 0.4345  loss_cls: 0.07711  loss_box_reg: 0.1483  loss_mask: 0.1465  loss_rpn_cls: 0.007728  loss_rpn_loc: 0.04691    time: 1.2741  last_time: 1.2513  data_time: 0.3068  last_data_time: 0.2733   lr: 0.01  max_mem: 17305M
[03/01 22:20:19 d2.engine.hooks]: Overall training speed: 1498 iterations in 0:31:48 (1.2741 s / it)
[03/01 22:20:19 d2.engine.hooks]: Total training time: 0:31:59 (0:00:11 on hooks)
[03/01 22:20:21 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
| background | 0            |    car     | 8021         | pedestrian | 3347         |
|            | 0            |            | 0            |            | 0            |
|            | 0            |            | 0            |            | 0            |
|            | 0            |   ignore   | 2765         |            |              |
|   total    | 14133        |            |              |            |              |
[03/01 22:20:21 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/01 22:20:21 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 22:20:21 d2.data.common]: Serializing 2919 elements to byte tensors and concatenating them all ...
[03/01 22:20:21 d2.data.common]: Serialized dataset takes 5.86 MiB
WARNING [03/01 22:20:21 d2.engine.defaults]: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[03/01 22:20:22 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from /ghome/group07/C5-W2/lr_0_01_bs_32_is_16/model_0001499.pth ...
[03/01 22:20:28 d2.evaluation.coco_evaluation]: Trying to convert 'KITTI-MOTS_val' to COCO format ...
[03/01 22:20:28 d2.data.datasets.coco]: Converting annotations of dataset 'KITTI-MOTS_val' to COCO format ...)
[03/01 22:20:34 d2.data.datasets.coco]: Converting dataset dicts into COCO format
[03/01 22:20:35 d2.data.datasets.coco]: Conversion finished, #images: 2919, #annotations: 14133
[03/01 22:20:35 d2.data.datasets.coco]: Caching COCO format annotations at '/ghome/group07/C5-W2/lr_0_01_bs_32_is_16/KITTI-MOTS_val_coco_format.json' ...
[03/01 22:20:38 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/01 22:20:38 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 22:20:38 d2.data.common]: Serializing 2919 elements to byte tensors and concatenating them all ...
[03/01 22:20:38 d2.data.common]: Serialized dataset takes 5.86 MiB
[03/01 22:20:38 d2.evaluation.evaluator]: Start inference on 2919 batches
[03/01 22:20:42 d2.evaluation.evaluator]: Inference done 11/2919. Dataloading: 0.0027 s/iter. Inference: 0.0555 s/iter. Eval: 0.0168 s/iter. Total: 0.0750 s/iter. ETA=0:03:38
[03/01 22:20:47 d2.evaluation.evaluator]: Inference done 88/2919. Dataloading: 0.0029 s/iter. Inference: 0.0554 s/iter. Eval: 0.0075 s/iter. Total: 0.0661 s/iter. ETA=0:03:07
[03/01 22:20:52 d2.evaluation.evaluator]: Inference done 173/2919. Dataloading: 0.0029 s/iter. Inference: 0.0547 s/iter. Eval: 0.0049 s/iter. Total: 0.0628 s/iter. ETA=0:02:52
[03/01 22:20:57 d2.evaluation.evaluator]: Inference done 257/2919. Dataloading: 0.0029 s/iter. Inference: 0.0548 s/iter. Eval: 0.0041 s/iter. Total: 0.0619 s/iter. ETA=0:02:44
[03/01 22:21:02 d2.evaluation.evaluator]: Inference done 341/2919. Dataloading: 0.0029 s/iter. Inference: 0.0548 s/iter. Eval: 0.0036 s/iter. Total: 0.0614 s/iter. ETA=0:02:38
[03/01 22:21:07 d2.evaluation.evaluator]: Inference done 429/2919. Dataloading: 0.0029 s/iter. Inference: 0.0543 s/iter. Eval: 0.0033 s/iter. Total: 0.0606 s/iter. ETA=0:02:30
[03/01 22:21:12 d2.evaluation.evaluator]: Inference done 517/2919. Dataloading: 0.0028 s/iter. Inference: 0.0540 s/iter. Eval: 0.0030 s/iter. Total: 0.0600 s/iter. ETA=0:02:24
[03/01 22:21:17 d2.evaluation.evaluator]: Inference done 603/2919. Dataloading: 0.0028 s/iter. Inference: 0.0540 s/iter. Eval: 0.0029 s/iter. Total: 0.0597 s/iter. ETA=0:02:18
[03/01 22:21:22 d2.evaluation.evaluator]: Inference done 687/2919. Dataloading: 0.0028 s/iter. Inference: 0.0540 s/iter. Eval: 0.0029 s/iter. Total: 0.0598 s/iter. ETA=0:02:13
[03/01 22:21:27 d2.evaluation.evaluator]: Inference done 768/2919. Dataloading: 0.0028 s/iter. Inference: 0.0541 s/iter. Eval: 0.0030 s/iter. Total: 0.0600 s/iter. ETA=0:02:09
[03/01 22:21:32 d2.evaluation.evaluator]: Inference done 854/2919. Dataloading: 0.0028 s/iter. Inference: 0.0539 s/iter. Eval: 0.0030 s/iter. Total: 0.0598 s/iter. ETA=0:02:03
[03/01 22:21:37 d2.evaluation.evaluator]: Inference done 944/2919. Dataloading: 0.0028 s/iter. Inference: 0.0536 s/iter. Eval: 0.0030 s/iter. Total: 0.0594 s/iter. ETA=0:01:57
[03/01 22:21:42 d2.evaluation.evaluator]: Inference done 1028/2919. Dataloading: 0.0028 s/iter. Inference: 0.0536 s/iter. Eval: 0.0030 s/iter. Total: 0.0595 s/iter. ETA=0:01:52
[03/01 22:21:47 d2.evaluation.evaluator]: Inference done 1110/2919. Dataloading: 0.0028 s/iter. Inference: 0.0537 s/iter. Eval: 0.0030 s/iter. Total: 0.0596 s/iter. ETA=0:01:47
[03/01 22:21:52 d2.evaluation.evaluator]: Inference done 1194/2919. Dataloading: 0.0028 s/iter. Inference: 0.0537 s/iter. Eval: 0.0030 s/iter. Total: 0.0596 s/iter. ETA=0:01:42
[03/01 22:21:58 d2.evaluation.evaluator]: Inference done 1280/2919. Dataloading: 0.0028 s/iter. Inference: 0.0537 s/iter. Eval: 0.0030 s/iter. Total: 0.0596 s/iter. ETA=0:01:37
[03/01 22:22:03 d2.evaluation.evaluator]: Inference done 1365/2919. Dataloading: 0.0028 s/iter. Inference: 0.0537 s/iter. Eval: 0.0030 s/iter. Total: 0.0595 s/iter. ETA=0:01:32
[03/01 22:22:08 d2.evaluation.evaluator]: Inference done 1449/2919. Dataloading: 0.0028 s/iter. Inference: 0.0537 s/iter. Eval: 0.0030 s/iter. Total: 0.0596 s/iter. ETA=0:01:27
[03/01 22:22:13 d2.evaluation.evaluator]: Inference done 1534/2919. Dataloading: 0.0028 s/iter. Inference: 0.0537 s/iter. Eval: 0.0029 s/iter. Total: 0.0595 s/iter. ETA=0:01:22
[03/01 22:22:18 d2.evaluation.evaluator]: Inference done 1619/2919. Dataloading: 0.0028 s/iter. Inference: 0.0537 s/iter. Eval: 0.0029 s/iter. Total: 0.0595 s/iter. ETA=0:01:17
[03/01 22:22:23 d2.evaluation.evaluator]: Inference done 1666/2919. Dataloading: 0.0028 s/iter. Inference: 0.0550 s/iter. Eval: 0.0029 s/iter. Total: 0.0609 s/iter. ETA=0:01:16
[03/01 22:22:28 d2.evaluation.evaluator]: Inference done 1745/2919. Dataloading: 0.0028 s/iter. Inference: 0.0549 s/iter. Eval: 0.0032 s/iter. Total: 0.0610 s/iter. ETA=0:01:11
[03/01 22:22:33 d2.evaluation.evaluator]: Inference done 1832/2919. Dataloading: 0.0028 s/iter. Inference: 0.0547 s/iter. Eval: 0.0032 s/iter. Total: 0.0608 s/iter. ETA=0:01:06
[03/01 22:22:38 d2.evaluation.evaluator]: Inference done 1917/2919. Dataloading: 0.0028 s/iter. Inference: 0.0546 s/iter. Eval: 0.0032 s/iter. Total: 0.0608 s/iter. ETA=0:01:00
[03/01 22:22:43 d2.evaluation.evaluator]: Inference done 1999/2919. Dataloading: 0.0028 s/iter. Inference: 0.0546 s/iter. Eval: 0.0033 s/iter. Total: 0.0608 s/iter. ETA=0:00:55
[03/01 22:22:48 d2.evaluation.evaluator]: Inference done 2078/2919. Dataloading: 0.0029 s/iter. Inference: 0.0546 s/iter. Eval: 0.0033 s/iter. Total: 0.0609 s/iter. ETA=0:00:51
[03/01 22:22:53 d2.evaluation.evaluator]: Inference done 2161/2919. Dataloading: 0.0029 s/iter. Inference: 0.0546 s/iter. Eval: 0.0034 s/iter. Total: 0.0609 s/iter. ETA=0:00:46
[03/01 22:22:58 d2.evaluation.evaluator]: Inference done 2247/2919. Dataloading: 0.0029 s/iter. Inference: 0.0545 s/iter. Eval: 0.0034 s/iter. Total: 0.0608 s/iter. ETA=0:00:40
[03/01 22:23:03 d2.evaluation.evaluator]: Inference done 2332/2919. Dataloading: 0.0029 s/iter. Inference: 0.0544 s/iter. Eval: 0.0034 s/iter. Total: 0.0607 s/iter. ETA=0:00:35
[03/01 22:23:08 d2.evaluation.evaluator]: Inference done 2414/2919. Dataloading: 0.0029 s/iter. Inference: 0.0543 s/iter. Eval: 0.0035 s/iter. Total: 0.0608 s/iter. ETA=0:00:30
[03/01 22:23:13 d2.evaluation.evaluator]: Inference done 2491/2919. Dataloading: 0.0029 s/iter. Inference: 0.0543 s/iter. Eval: 0.0037 s/iter. Total: 0.0609 s/iter. ETA=0:00:26
[03/01 22:23:18 d2.evaluation.evaluator]: Inference done 2573/2919. Dataloading: 0.0029 s/iter. Inference: 0.0542 s/iter. Eval: 0.0038 s/iter. Total: 0.0609 s/iter. ETA=0:00:21
[03/01 22:23:23 d2.evaluation.evaluator]: Inference done 2656/2919. Dataloading: 0.0029 s/iter. Inference: 0.0542 s/iter. Eval: 0.0038 s/iter. Total: 0.0609 s/iter. ETA=0:00:16
[03/01 22:23:28 d2.evaluation.evaluator]: Inference done 2730/2919. Dataloading: 0.0029 s/iter. Inference: 0.0544 s/iter. Eval: 0.0038 s/iter. Total: 0.0611 s/iter. ETA=0:00:11
[03/01 22:23:33 d2.evaluation.evaluator]: Inference done 2806/2919. Dataloading: 0.0029 s/iter. Inference: 0.0546 s/iter. Eval: 0.0037 s/iter. Total: 0.0612 s/iter. ETA=0:00:06
[03/01 22:23:38 d2.evaluation.evaluator]: Inference done 2880/2919. Dataloading: 0.0029 s/iter. Inference: 0.0548 s/iter. Eval: 0.0037 s/iter. Total: 0.0614 s/iter. ETA=0:00:02
[03/01 22:23:41 d2.evaluation.evaluator]: Total inference time: 0:02:59.215732 (0.061502 s / iter per device, on 1 devices)
[03/01 22:23:41 d2.evaluation.evaluator]: Total inference pure compute time: 0:02:39 (0.054797 s / iter per device, on 1 devices)
[03/01 22:23:41 d2.evaluation.coco_evaluation]: Preparing results for COCO format ...
[03/01 22:23:41 d2.evaluation.coco_evaluation]: Saving results to /ghome/group07/C5-W2/lr_0_01_bs_32_is_16/coco_instances_results.json
[03/01 22:23:41 d2.evaluation.coco_evaluation]: Evaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
[03/01 22:23:41 d2.evaluation.fast_eval_api]: Evaluate annotation type *bbox*
[03/01 22:23:42 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 1.12 seconds.
[03/01 22:23:42 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[03/01 22:23:42 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.11 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.415
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.588
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.465
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.258
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.491
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.531
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.169
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.475
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.479
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.309
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.534
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.670
[03/01 22:23:42 d2.evaluation.coco_evaluation]: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 41.457 | 58.823 | 46.522 | 25.832 | 49.064 | 53.143 |
[03/01 22:23:42 d2.evaluation.coco_evaluation]: Per-category bbox AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| background | nan  | car        | 68.009 | pedestrian | 50.182 |
|            | nan  |            | nan    |            | nan    |
|            | nan  |            | nan    |            | nan    |
|            | nan  | ignore     | 6.178  |            |        |
Loading and preparing results...
DONE (t=0.15s)
creating index...
index created!
[03/01 22:23:43 d2.evaluation.fast_eval_api]: Evaluate annotation type *segm*
[03/01 22:23:44 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 1.14 seconds.
[03/01 22:23:44 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[03/01 22:23:44 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.08 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.372
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.553
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.417
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.211
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.444
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.541
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.148
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.426
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.428
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.269
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.480
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.600
[03/01 22:23:44 d2.evaluation.coco_evaluation]: Evaluation results for segm: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 37.170 | 55.321 | 41.653 | 21.112 | 44.432 | 54.097 |
[03/01 22:23:44 d2.evaluation.coco_evaluation]: Per-category segm AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| background | nan  | car        | 67.721 | pedestrian | 39.680 |
|            | nan  |            | nan    |            | nan    |
|            | nan  |            | nan    |            | nan    |
|            | nan  | ignore     | 4.109  |            |        |
OrderedDict([('bbox', {'AP': 41.456612748654145, 'AP50': 58.82312650137149, 'AP75': 46.522172866352, 'APs': 25.832090716100602, 'APm': 49.06415227047575, 'APl': 53.142821336650584, 'AP-background': nan, 'AP-car': 68.00903114019039, 'AP-pedestrian': 50.18240128816102, 'AP-': nan, 'AP-ignore': 6.17840581761103}), ('segm', {'AP': 37.16978895937366, 'AP50': 55.32122879206588, 'AP75': 41.652526351126674, 'APs': 21.112171462218342, 'APm': 44.432284668841554, 'APl': 54.09743318993988, 'AP-background': nan, 'AP-car': 67.72085749659291, 'AP-pedestrian': 39.67971210779454, 'AP-': nan, 'AP-ignore': 4.10879727373353})])

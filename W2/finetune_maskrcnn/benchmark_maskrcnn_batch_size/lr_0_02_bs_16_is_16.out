1
The device we will be working on is: cuda
[03/01 18:59:59 d2.engine.defaults]: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=12, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=44, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 11, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[03/01 19:00:03 d2.data.build]: Removed 0 images with no usable annotations. 5007 images left.
[03/01 19:00:03 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
| background | 0            |    car     | 18822        | pedestrian | 8065         |
|            | 0            |            | 0            |            | 0            |
|            | 0            |            | 0            |            | 0            |
|            | 0            |   ignore   | 4977         |            |              |
|   total    | 31864        |            |              |            |              |
[03/01 19:00:03 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[03/01 19:00:03 d2.data.build]: Using training sampler TrainingSampler
[03/01 19:00:03 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 19:00:03 d2.data.common]: Serializing 5007 elements to byte tensors and concatenating them all ...
[03/01 19:00:03 d2.data.common]: Serialized dataset takes 13.56 MiB
[03/01 19:00:03 d2.data.build]: Making batched data loader with batch_size=16
WARNING [03/01 19:00:03 d2.solver.build]: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/01 19:00:03 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl ...
[03/01 19:00:03 d2.engine.train_loop]: Starting training from iteration 0
[03/01 19:00:39 d2.utils.events]:  eta: 0:31:16  iter: 19  total_loss: 3.392  loss_cls: 1.995  loss_box_reg: 0.4785  loss_mask: 0.6603  loss_rpn_cls: 0.1521  loss_rpn_loc: 0.0891    time: 1.3675  last_time: 1.1522  data_time: 0.6522  last_data_time: 0.3065   lr: 0.00039962  max_mem: 15751M
[03/01 19:01:13 d2.utils.events]:  eta: 0:30:49  iter: 39  total_loss: 1.602  loss_cls: 0.5447  loss_box_reg: 0.4607  loss_mask: 0.4296  loss_rpn_cls: 0.05788  loss_rpn_loc: 0.08431    time: 1.3492  last_time: 1.3459  data_time: 0.4142  last_data_time: 0.4200   lr: 0.00079922  max_mem: 15751M
[03/01 19:01:40 d2.utils.events]:  eta: 0:30:21  iter: 59  total_loss: 1.141  loss_cls: 0.3012  loss_box_reg: 0.3928  loss_mask: 0.3232  loss_rpn_cls: 0.04932  loss_rpn_loc: 0.08009    time: 1.3507  last_time: 1.1308  data_time: 0.3667  last_data_time: 0.2961   lr: 0.0011988  max_mem: 15939M
[03/01 19:02:05 d2.utils.events]:  eta: 0:29:33  iter: 79  total_loss: 0.9059  loss_cls: 0.2247  loss_box_reg: 0.2742  loss_mask: 0.2824  loss_rpn_cls: 0.04292  loss_rpn_loc: 0.07772    time: 1.3172  last_time: 1.1883  data_time: 0.3259  last_data_time: 0.3143   lr: 0.0015984  max_mem: 15939M
[03/01 19:02:30 d2.utils.events]:  eta: 0:29:08  iter: 99  total_loss: 0.8317  loss_cls: 0.1874  loss_box_reg: 0.2621  loss_mask: 0.267  loss_rpn_cls: 0.03529  loss_rpn_loc: 0.07749    time: 1.3067  last_time: 1.2813  data_time: 0.3659  last_data_time: 0.3442   lr: 0.001998  max_mem: 15939M
[03/01 19:02:55 d2.utils.events]:  eta: 0:28:33  iter: 119  total_loss: 0.7598  loss_cls: 0.1574  loss_box_reg: 0.2299  loss_mask: 0.2558  loss_rpn_cls: 0.03666  loss_rpn_loc: 0.06515    time: 1.2909  last_time: 1.2105  data_time: 0.3162  last_data_time: 0.3021   lr: 0.0023976  max_mem: 15939M
[03/01 19:03:19 d2.utils.events]:  eta: 0:27:56  iter: 139  total_loss: 0.7371  loss_cls: 0.1467  loss_box_reg: 0.2237  loss_mask: 0.245  loss_rpn_cls: 0.03423  loss_rpn_loc: 0.07957    time: 1.2801  last_time: 1.1783  data_time: 0.3213  last_data_time: 0.2866   lr: 0.0027972  max_mem: 15994M
[03/01 19:03:44 d2.utils.events]:  eta: 0:27:30  iter: 159  total_loss: 0.6955  loss_cls: 0.1505  loss_box_reg: 0.2132  loss_mask: 0.2406  loss_rpn_cls: 0.03254  loss_rpn_loc: 0.06844    time: 1.2740  last_time: 1.1988  data_time: 0.3334  last_data_time: 0.3414   lr: 0.0031968  max_mem: 15994M
[03/01 19:04:08 d2.utils.events]:  eta: 0:26:53  iter: 179  total_loss: 0.6645  loss_cls: 0.1367  loss_box_reg: 0.1954  loss_mask: 0.2381  loss_rpn_cls: 0.03263  loss_rpn_loc: 0.07223    time: 1.2652  last_time: 1.1682  data_time: 0.3013  last_data_time: 0.2888   lr: 0.0035964  max_mem: 15994M
[03/01 19:04:32 d2.utils.events]:  eta: 0:26:23  iter: 199  total_loss: 0.6406  loss_cls: 0.1292  loss_box_reg: 0.1925  loss_mask: 0.2262  loss_rpn_cls: 0.02607  loss_rpn_loc: 0.0629    time: 1.2588  last_time: 1.1528  data_time: 0.3166  last_data_time: 0.2807   lr: 0.003996  max_mem: 15994M
[03/01 19:04:57 d2.utils.events]:  eta: 0:25:59  iter: 219  total_loss: 0.649  loss_cls: 0.1392  loss_box_reg: 0.2061  loss_mask: 0.2136  loss_rpn_cls: 0.02606  loss_rpn_loc: 0.06409    time: 1.2569  last_time: 1.2311  data_time: 0.3347  last_data_time: 0.3128   lr: 0.0043956  max_mem: 15994M
[03/01 19:05:21 d2.utils.events]:  eta: 0:25:36  iter: 239  total_loss: 0.661  loss_cls: 0.1375  loss_box_reg: 0.2033  loss_mask: 0.2208  loss_rpn_cls: 0.02889  loss_rpn_loc: 0.07233    time: 1.2557  last_time: 1.2538  data_time: 0.3296  last_data_time: 0.3608   lr: 0.0047952  max_mem: 15994M
[03/01 19:05:45 d2.utils.events]:  eta: 0:25:08  iter: 259  total_loss: 0.5958  loss_cls: 0.1216  loss_box_reg: 0.1761  loss_mask: 0.2108  loss_rpn_cls: 0.02335  loss_rpn_loc: 0.07452    time: 1.2513  last_time: 1.1549  data_time: 0.3000  last_data_time: 0.2865   lr: 0.0051948  max_mem: 15994M
[03/01 19:06:10 d2.utils.events]:  eta: 0:24:44  iter: 279  total_loss: 0.6063  loss_cls: 0.125  loss_box_reg: 0.1902  loss_mask: 0.1965  loss_rpn_cls: 0.02372  loss_rpn_loc: 0.07302    time: 1.2508  last_time: 1.2400  data_time: 0.3286  last_data_time: 0.3279   lr: 0.0055944  max_mem: 16196M
[03/01 19:06:35 d2.utils.events]:  eta: 0:24:21  iter: 299  total_loss: 0.6358  loss_cls: 0.1224  loss_box_reg: 0.1928  loss_mask: 0.2127  loss_rpn_cls: 0.02527  loss_rpn_loc: 0.06895    time: 1.2499  last_time: 1.1447  data_time: 0.3268  last_data_time: 0.2916   lr: 0.005994  max_mem: 16612M
[03/01 19:07:00 d2.utils.events]:  eta: 0:23:57  iter: 319  total_loss: 0.6109  loss_cls: 0.1225  loss_box_reg: 0.1876  loss_mask: 0.1978  loss_rpn_cls: 0.02381  loss_rpn_loc: 0.05914    time: 1.2482  last_time: 1.0643  data_time: 0.3157  last_data_time: 0.2272   lr: 0.0063936  max_mem: 16612M
[03/01 19:07:24 d2.utils.events]:  eta: 0:23:34  iter: 339  total_loss: 0.6072  loss_cls: 0.1281  loss_box_reg: 0.1935  loss_mask: 0.2004  loss_rpn_cls: 0.02071  loss_rpn_loc: 0.07567    time: 1.2477  last_time: 1.2039  data_time: 0.3265  last_data_time: 0.3000   lr: 0.0067932  max_mem: 16612M
[03/01 19:07:49 d2.utils.events]:  eta: 0:23:10  iter: 359  total_loss: 0.6312  loss_cls: 0.1349  loss_box_reg: 0.2073  loss_mask: 0.2023  loss_rpn_cls: 0.02169  loss_rpn_loc: 0.0601    time: 1.2476  last_time: 1.2887  data_time: 0.3201  last_data_time: 0.3300   lr: 0.0071928  max_mem: 16612M
[03/01 19:08:14 d2.utils.events]:  eta: 0:22:46  iter: 379  total_loss: 0.5723  loss_cls: 0.1196  loss_box_reg: 0.1855  loss_mask: 0.187  loss_rpn_cls: 0.01812  loss_rpn_loc: 0.05544    time: 1.2476  last_time: 1.1879  data_time: 0.3242  last_data_time: 0.2784   lr: 0.0075924  max_mem: 16612M
[03/01 19:08:39 d2.utils.events]:  eta: 0:22:23  iter: 399  total_loss: 0.5986  loss_cls: 0.1236  loss_box_reg: 0.1951  loss_mask: 0.1913  loss_rpn_cls: 0.02035  loss_rpn_loc: 0.05954    time: 1.2482  last_time: 1.3261  data_time: 0.3290  last_data_time: 0.3481   lr: 0.007992  max_mem: 16612M
[03/01 19:09:05 d2.utils.events]:  eta: 0:22:02  iter: 419  total_loss: 0.6137  loss_cls: 0.1248  loss_box_reg: 0.1978  loss_mask: 0.1969  loss_rpn_cls: 0.02004  loss_rpn_loc: 0.06645    time: 1.2499  last_time: 1.2757  data_time: 0.3456  last_data_time: 0.3107   lr: 0.0083916  max_mem: 16944M
[03/01 19:09:30 d2.utils.events]:  eta: 0:21:38  iter: 439  total_loss: 0.6027  loss_cls: 0.1246  loss_box_reg: 0.1965  loss_mask: 0.1837  loss_rpn_cls: 0.02217  loss_rpn_loc: 0.06328    time: 1.2496  last_time: 1.2211  data_time: 0.3028  last_data_time: 0.2625   lr: 0.0087912  max_mem: 16944M
[03/01 19:09:55 d2.utils.events]:  eta: 0:21:16  iter: 459  total_loss: 0.6131  loss_cls: 0.1246  loss_box_reg: 0.2049  loss_mask: 0.1883  loss_rpn_cls: 0.02027  loss_rpn_loc: 0.06477    time: 1.2499  last_time: 1.2573  data_time: 0.3288  last_data_time: 0.3220   lr: 0.0091908  max_mem: 16944M
[03/01 19:10:20 d2.utils.events]:  eta: 0:20:51  iter: 479  total_loss: 0.5811  loss_cls: 0.1226  loss_box_reg: 0.1833  loss_mask: 0.1885  loss_rpn_cls: 0.01703  loss_rpn_loc: 0.06199    time: 1.2497  last_time: 1.2962  data_time: 0.3189  last_data_time: 0.3416   lr: 0.0095904  max_mem: 16944M
[03/01 19:10:46 d2.utils.events]:  eta: 0:20:27  iter: 499  total_loss: 0.5795  loss_cls: 0.1136  loss_box_reg: 0.1915  loss_mask: 0.1826  loss_rpn_cls: 0.0208  loss_rpn_loc: 0.06811    time: 1.2506  last_time: 1.2531  data_time: 0.3506  last_data_time: 0.3234   lr: 0.00999  max_mem: 16944M
[03/01 19:11:11 d2.utils.events]:  eta: 0:20:04  iter: 519  total_loss: 0.5967  loss_cls: 0.1146  loss_box_reg: 0.1905  loss_mask: 0.1931  loss_rpn_cls: 0.02012  loss_rpn_loc: 0.07154    time: 1.2509  last_time: 1.2354  data_time: 0.3372  last_data_time: 0.3020   lr: 0.01039  max_mem: 16944M
[03/01 19:11:41 d2.utils.events]:  eta: 0:19:42  iter: 539  total_loss: 0.5661  loss_cls: 0.1149  loss_box_reg: 0.1843  loss_mask: 0.1803  loss_rpn_cls: 0.02022  loss_rpn_loc: 0.06611    time: 1.2598  last_time: 1.4636  data_time: 0.4549  last_data_time: 0.3838   lr: 0.010789  max_mem: 16944M
[03/01 19:12:08 d2.utils.events]:  eta: 0:19:20  iter: 559  total_loss: 0.5544  loss_cls: 0.1118  loss_box_reg: 0.175  loss_mask: 0.1853  loss_rpn_cls: 0.0169  loss_rpn_loc: 0.06318    time: 1.2634  last_time: 1.2159  data_time: 0.3938  last_data_time: 0.3258   lr: 0.011189  max_mem: 16944M
[03/01 19:12:33 d2.utils.events]:  eta: 0:18:55  iter: 579  total_loss: 0.5517  loss_cls: 0.1089  loss_box_reg: 0.1799  loss_mask: 0.187  loss_rpn_cls: 0.01834  loss_rpn_loc: 0.0584    time: 1.2622  last_time: 1.2420  data_time: 0.3227  last_data_time: 0.3269   lr: 0.011588  max_mem: 16944M
[03/01 19:12:59 d2.utils.events]:  eta: 0:18:32  iter: 599  total_loss: 0.5605  loss_cls: 0.1103  loss_box_reg: 0.1902  loss_mask: 0.1764  loss_rpn_cls: 0.01675  loss_rpn_loc: 0.05995    time: 1.2633  last_time: 1.3060  data_time: 0.3707  last_data_time: 0.4009   lr: 0.011988  max_mem: 16944M
[03/01 19:13:24 d2.utils.events]:  eta: 0:18:08  iter: 619  total_loss: 0.5554  loss_cls: 0.1041  loss_box_reg: 0.2012  loss_mask: 0.1837  loss_rpn_cls: 0.01829  loss_rpn_loc: 0.06068    time: 1.2633  last_time: 1.3027  data_time: 0.3255  last_data_time: 0.3393   lr: 0.012388  max_mem: 16944M
[03/01 19:13:49 d2.utils.events]:  eta: 0:17:45  iter: 639  total_loss: 0.5714  loss_cls: 0.1085  loss_box_reg: 0.1958  loss_mask: 0.1837  loss_rpn_cls: 0.01623  loss_rpn_loc: 0.06599    time: 1.2633  last_time: 1.2692  data_time: 0.3107  last_data_time: 0.2897   lr: 0.012787  max_mem: 16944M
[03/01 19:14:14 d2.utils.events]:  eta: 0:17:20  iter: 659  total_loss: 0.5181  loss_cls: 0.09891  loss_box_reg: 0.1742  loss_mask: 0.1716  loss_rpn_cls: 0.01319  loss_rpn_loc: 0.06267    time: 1.2629  last_time: 1.2666  data_time: 0.3129  last_data_time: 0.3233   lr: 0.013187  max_mem: 16944M
[03/01 19:14:40 d2.utils.events]:  eta: 0:16:56  iter: 679  total_loss: 0.5549  loss_cls: 0.1078  loss_box_reg: 0.1938  loss_mask: 0.1795  loss_rpn_cls: 0.01531  loss_rpn_loc: 0.06189    time: 1.2635  last_time: 1.2340  data_time: 0.3399  last_data_time: 0.3045   lr: 0.013586  max_mem: 16944M
[03/01 19:15:05 d2.utils.events]:  eta: 0:16:32  iter: 699  total_loss: 0.5243  loss_cls: 0.09934  loss_box_reg: 0.174  loss_mask: 0.1728  loss_rpn_cls: 0.0145  loss_rpn_loc: 0.05491    time: 1.2632  last_time: 1.2674  data_time: 0.3112  last_data_time: 0.3204   lr: 0.013986  max_mem: 16944M
[03/01 19:15:30 d2.utils.events]:  eta: 0:16:08  iter: 719  total_loss: 0.5197  loss_cls: 0.1037  loss_box_reg: 0.1746  loss_mask: 0.1705  loss_rpn_cls: 0.016  loss_rpn_loc: 0.05565    time: 1.2630  last_time: 1.3117  data_time: 0.3274  last_data_time: 0.3690   lr: 0.014386  max_mem: 16944M
[03/01 19:15:56 d2.utils.events]:  eta: 0:15:45  iter: 739  total_loss: 0.5112  loss_cls: 0.09848  loss_box_reg: 0.1741  loss_mask: 0.1653  loss_rpn_cls: 0.01458  loss_rpn_loc: 0.05556    time: 1.2638  last_time: 1.2498  data_time: 0.3376  last_data_time: 0.2752   lr: 0.014785  max_mem: 16944M
[03/01 19:16:22 d2.utils.events]:  eta: 0:15:20  iter: 759  total_loss: 0.5424  loss_cls: 0.09705  loss_box_reg: 0.1737  loss_mask: 0.1739  loss_rpn_cls: 0.01744  loss_rpn_loc: 0.06232    time: 1.2647  last_time: 1.2779  data_time: 0.3367  last_data_time: 0.3326   lr: 0.015185  max_mem: 17174M
[03/01 19:16:48 d2.utils.events]:  eta: 0:14:56  iter: 779  total_loss: 0.5316  loss_cls: 0.1047  loss_box_reg: 0.187  loss_mask: 0.1697  loss_rpn_cls: 0.01511  loss_rpn_loc: 0.05963    time: 1.2652  last_time: 1.2964  data_time: 0.3176  last_data_time: 0.2982   lr: 0.015584  max_mem: 17174M
[03/01 19:17:13 d2.utils.events]:  eta: 0:14:32  iter: 799  total_loss: 0.5167  loss_cls: 0.09364  loss_box_reg: 0.17  loss_mask: 0.1712  loss_rpn_cls: 0.01639  loss_rpn_loc: 0.06182    time: 1.2651  last_time: 1.2591  data_time: 0.3139  last_data_time: 0.3157   lr: 0.015984  max_mem: 17174M
[03/01 19:17:38 d2.utils.events]:  eta: 0:14:07  iter: 819  total_loss: 0.5161  loss_cls: 0.09817  loss_box_reg: 0.1783  loss_mask: 0.1738  loss_rpn_cls: 0.01592  loss_rpn_loc: 0.05918    time: 1.2650  last_time: 1.2323  data_time: 0.3242  last_data_time: 0.2994   lr: 0.016384  max_mem: 17174M
[03/01 19:18:03 d2.utils.events]:  eta: 0:13:42  iter: 839  total_loss: 0.5241  loss_cls: 0.09675  loss_box_reg: 0.1727  loss_mask: 0.1746  loss_rpn_cls: 0.01475  loss_rpn_loc: 0.06118    time: 1.2647  last_time: 1.1961  data_time: 0.3242  last_data_time: 0.2828   lr: 0.016783  max_mem: 17174M
[03/01 19:18:28 d2.utils.events]:  eta: 0:13:17  iter: 859  total_loss: 0.5221  loss_cls: 0.09501  loss_box_reg: 0.1787  loss_mask: 0.1637  loss_rpn_cls: 0.0152  loss_rpn_loc: 0.06153    time: 1.2643  last_time: 1.2086  data_time: 0.3118  last_data_time: 0.2772   lr: 0.017183  max_mem: 17174M
[03/01 19:18:54 d2.utils.events]:  eta: 0:12:53  iter: 879  total_loss: 0.5259  loss_cls: 0.09275  loss_box_reg: 0.1777  loss_mask: 0.1765  loss_rpn_cls: 0.01561  loss_rpn_loc: 0.04994    time: 1.2645  last_time: 1.2772  data_time: 0.3357  last_data_time: 0.3480   lr: 0.017582  max_mem: 17174M
[03/01 19:19:19 d2.utils.events]:  eta: 0:12:28  iter: 899  total_loss: 0.5191  loss_cls: 0.09372  loss_box_reg: 0.1828  loss_mask: 0.1669  loss_rpn_cls: 0.01372  loss_rpn_loc: 0.05731    time: 1.2644  last_time: 1.2716  data_time: 0.3009  last_data_time: 0.2769   lr: 0.017982  max_mem: 17174M
[03/01 19:19:44 d2.utils.events]:  eta: 0:12:03  iter: 919  total_loss: 0.5115  loss_cls: 0.09082  loss_box_reg: 0.1757  loss_mask: 0.1632  loss_rpn_cls: 0.01452  loss_rpn_loc: 0.056    time: 1.2644  last_time: 1.2796  data_time: 0.3077  last_data_time: 0.3528   lr: 0.018382  max_mem: 17174M
[03/01 19:20:10 d2.utils.events]:  eta: 0:11:38  iter: 939  total_loss: 0.5156  loss_cls: 0.09881  loss_box_reg: 0.1821  loss_mask: 0.1662  loss_rpn_cls: 0.01521  loss_rpn_loc: 0.0588    time: 1.2648  last_time: 1.2238  data_time: 0.3358  last_data_time: 0.2849   lr: 0.018781  max_mem: 17174M
[03/01 19:20:35 d2.utils.events]:  eta: 0:11:14  iter: 959  total_loss: 0.5077  loss_cls: 0.09961  loss_box_reg: 0.1769  loss_mask: 0.1581  loss_rpn_cls: 0.01212  loss_rpn_loc: 0.05686    time: 1.2652  last_time: 1.3179  data_time: 0.3252  last_data_time: 0.3109   lr: 0.019181  max_mem: 17174M
[03/01 19:21:01 d2.utils.events]:  eta: 0:10:49  iter: 979  total_loss: 0.4889  loss_cls: 0.09161  loss_box_reg: 0.1702  loss_mask: 0.1567  loss_rpn_cls: 0.0122  loss_rpn_loc: 0.05853    time: 1.2656  last_time: 1.3087  data_time: 0.3303  last_data_time: 0.3333   lr: 0.01958  max_mem: 17174M
[03/01 19:21:28 d2.utils.events]:  eta: 0:10:25  iter: 999  total_loss: 0.5132  loss_cls: 0.09296  loss_box_reg: 0.1835  loss_mask: 0.1668  loss_rpn_cls: 0.01248  loss_rpn_loc: 0.06301    time: 1.2665  last_time: 1.3114  data_time: 0.3487  last_data_time: 0.3696   lr: 0.01998  max_mem: 17174M
[03/01 19:21:54 d2.utils.events]:  eta: 0:10:00  iter: 1019  total_loss: 0.4691  loss_cls: 0.0857  loss_box_reg: 0.1609  loss_mask: 0.1524  loss_rpn_cls: 0.01204  loss_rpn_loc: 0.05313    time: 1.2668  last_time: 1.3100  data_time: 0.3297  last_data_time: 0.3652   lr: 0.02  max_mem: 17174M
[03/01 19:22:20 d2.utils.events]:  eta: 0:09:36  iter: 1039  total_loss: 0.5114  loss_cls: 0.09183  loss_box_reg: 0.1767  loss_mask: 0.1607  loss_rpn_cls: 0.0124  loss_rpn_loc: 0.05949    time: 1.2676  last_time: 1.3470  data_time: 0.3330  last_data_time: 0.3397   lr: 0.02  max_mem: 17174M
[03/01 19:22:45 d2.utils.events]:  eta: 0:09:11  iter: 1059  total_loss: 0.5012  loss_cls: 0.09299  loss_box_reg: 0.1688  loss_mask: 0.161  loss_rpn_cls: 0.01306  loss_rpn_loc: 0.05861    time: 1.2676  last_time: 1.3024  data_time: 0.3127  last_data_time: 0.3370   lr: 0.02  max_mem: 17174M
[03/01 19:23:11 d2.utils.events]:  eta: 0:08:46  iter: 1079  total_loss: 0.4747  loss_cls: 0.08956  loss_box_reg: 0.1606  loss_mask: 0.1568  loss_rpn_cls: 0.01167  loss_rpn_loc: 0.05319    time: 1.2678  last_time: 1.2916  data_time: 0.3209  last_data_time: 0.3531   lr: 0.02  max_mem: 17174M
[03/01 19:23:37 d2.utils.events]:  eta: 0:08:21  iter: 1099  total_loss: 0.4903  loss_cls: 0.09019  loss_box_reg: 0.1723  loss_mask: 0.1555  loss_rpn_cls: 0.01217  loss_rpn_loc: 0.05871    time: 1.2684  last_time: 1.3040  data_time: 0.3393  last_data_time: 0.4035   lr: 0.02  max_mem: 17174M
[03/01 19:24:02 d2.utils.events]:  eta: 0:07:57  iter: 1119  total_loss: 0.4762  loss_cls: 0.08167  loss_box_reg: 0.1741  loss_mask: 0.1589  loss_rpn_cls: 0.01239  loss_rpn_loc: 0.05619    time: 1.2685  last_time: 1.2637  data_time: 0.3176  last_data_time: 0.3173   lr: 0.02  max_mem: 17174M
[03/01 19:24:35 d2.utils.events]:  eta: 0:07:32  iter: 1139  total_loss: 0.4852  loss_cls: 0.08472  loss_box_reg: 0.168  loss_mask: 0.1557  loss_rpn_cls: 0.01166  loss_rpn_loc: 0.05641    time: 1.2752  last_time: 1.3503  data_time: 0.3680  last_data_time: 0.3038   lr: 0.02  max_mem: 17174M
[03/01 19:25:01 d2.utils.events]:  eta: 0:07:08  iter: 1159  total_loss: 0.4715  loss_cls: 0.08642  loss_box_reg: 0.166  loss_mask: 0.1563  loss_rpn_cls: 0.01371  loss_rpn_loc: 0.05524    time: 1.2751  last_time: 1.3087  data_time: 0.3214  last_data_time: 0.3842   lr: 0.02  max_mem: 17174M
[03/01 19:25:27 d2.utils.events]:  eta: 0:06:43  iter: 1179  total_loss: 0.4829  loss_cls: 0.08583  loss_box_reg: 0.1674  loss_mask: 0.1561  loss_rpn_cls: 0.0103  loss_rpn_loc: 0.05414    time: 1.2752  last_time: 1.2802  data_time: 0.3083  last_data_time: 0.2948   lr: 0.02  max_mem: 17174M
[03/01 19:25:52 d2.utils.events]:  eta: 0:06:18  iter: 1199  total_loss: 0.4793  loss_cls: 0.0863  loss_box_reg: 0.1714  loss_mask: 0.1513  loss_rpn_cls: 0.01313  loss_rpn_loc: 0.05686    time: 1.2753  last_time: 1.3362  data_time: 0.3192  last_data_time: 0.3654   lr: 0.02  max_mem: 17174M
[03/01 19:26:18 d2.utils.events]:  eta: 0:05:53  iter: 1219  total_loss: 0.4954  loss_cls: 0.09158  loss_box_reg: 0.1716  loss_mask: 0.1577  loss_rpn_cls: 0.01259  loss_rpn_loc: 0.0579    time: 1.2753  last_time: 1.3190  data_time: 0.3143  last_data_time: 0.3484   lr: 0.02  max_mem: 17174M
[03/01 19:26:43 d2.utils.events]:  eta: 0:05:29  iter: 1239  total_loss: 0.446  loss_cls: 0.08273  loss_box_reg: 0.1561  loss_mask: 0.1481  loss_rpn_cls: 0.01035  loss_rpn_loc: 0.05013    time: 1.2755  last_time: 1.3320  data_time: 0.3281  last_data_time: 0.3227   lr: 0.02  max_mem: 17174M
[03/01 19:27:09 d2.utils.events]:  eta: 0:05:04  iter: 1259  total_loss: 0.4564  loss_cls: 0.08416  loss_box_reg: 0.1514  loss_mask: 0.1501  loss_rpn_cls: 0.01129  loss_rpn_loc: 0.05156    time: 1.2755  last_time: 1.2844  data_time: 0.3177  last_data_time: 0.3340   lr: 0.02  max_mem: 17174M
[03/01 19:27:35 d2.utils.events]:  eta: 0:04:38  iter: 1279  total_loss: 0.4446  loss_cls: 0.07798  loss_box_reg: 0.1579  loss_mask: 0.1481  loss_rpn_cls: 0.01008  loss_rpn_loc: 0.05062    time: 1.2758  last_time: 1.3197  data_time: 0.3335  last_data_time: 0.3214   lr: 0.02  max_mem: 17174M
[03/01 19:28:00 d2.utils.events]:  eta: 0:04:13  iter: 1299  total_loss: 0.4364  loss_cls: 0.07637  loss_box_reg: 0.1499  loss_mask: 0.1426  loss_rpn_cls: 0.009516  loss_rpn_loc: 0.04937    time: 1.2757  last_time: 1.2682  data_time: 0.3037  last_data_time: 0.3002   lr: 0.02  max_mem: 17174M
[03/01 19:28:26 d2.utils.events]:  eta: 0:03:48  iter: 1319  total_loss: 0.4552  loss_cls: 0.0821  loss_box_reg: 0.161  loss_mask: 0.1435  loss_rpn_cls: 0.00861  loss_rpn_loc: 0.05351    time: 1.2757  last_time: 1.2168  data_time: 0.3032  last_data_time: 0.2715   lr: 0.02  max_mem: 17174M
[03/01 19:28:53 d2.utils.events]:  eta: 0:03:23  iter: 1339  total_loss: 0.4441  loss_cls: 0.07972  loss_box_reg: 0.1557  loss_mask: 0.1422  loss_rpn_cls: 0.008767  loss_rpn_loc: 0.05546    time: 1.2761  last_time: 1.2916  data_time: 0.3273  last_data_time: 0.3170   lr: 0.02  max_mem: 17174M
[03/01 19:29:18 d2.utils.events]:  eta: 0:02:57  iter: 1359  total_loss: 0.4675  loss_cls: 0.08046  loss_box_reg: 0.1663  loss_mask: 0.1539  loss_rpn_cls: 0.009109  loss_rpn_loc: 0.0487    time: 1.2763  last_time: 1.2976  data_time: 0.3032  last_data_time: 0.3374   lr: 0.02  max_mem: 17174M
[03/01 19:29:44 d2.utils.events]:  eta: 0:02:32  iter: 1379  total_loss: 0.4388  loss_cls: 0.07866  loss_box_reg: 0.1486  loss_mask: 0.1432  loss_rpn_cls: 0.009642  loss_rpn_loc: 0.05423    time: 1.2763  last_time: 1.2646  data_time: 0.3125  last_data_time: 0.3083   lr: 0.02  max_mem: 17174M
[03/01 19:30:10 d2.utils.events]:  eta: 0:02:07  iter: 1399  total_loss: 0.4598  loss_cls: 0.07598  loss_box_reg: 0.1553  loss_mask: 0.1466  loss_rpn_cls: 0.01018  loss_rpn_loc: 0.04949    time: 1.2766  last_time: 1.3792  data_time: 0.3275  last_data_time: 0.3780   lr: 0.02  max_mem: 17174M
[03/01 19:30:36 d2.utils.events]:  eta: 0:01:41  iter: 1419  total_loss: 0.4717  loss_cls: 0.0857  loss_box_reg: 0.1701  loss_mask: 0.1498  loss_rpn_cls: 0.00847  loss_rpn_loc: 0.05045    time: 1.2770  last_time: 1.3044  data_time: 0.3198  last_data_time: 0.3228   lr: 0.02  max_mem: 17174M
[03/01 19:31:02 d2.utils.events]:  eta: 0:01:16  iter: 1439  total_loss: 0.4373  loss_cls: 0.07985  loss_box_reg: 0.1587  loss_mask: 0.1467  loss_rpn_cls: 0.009074  loss_rpn_loc: 0.05468    time: 1.2774  last_time: 1.3295  data_time: 0.3397  last_data_time: 0.3382   lr: 0.02  max_mem: 17174M
[03/01 19:31:28 d2.utils.events]:  eta: 0:00:50  iter: 1459  total_loss: 0.4508  loss_cls: 0.08017  loss_box_reg: 0.1551  loss_mask: 0.1493  loss_rpn_cls: 0.01017  loss_rpn_loc: 0.05252    time: 1.2777  last_time: 1.3241  data_time: 0.3287  last_data_time: 0.3513   lr: 0.02  max_mem: 17174M
[03/01 19:31:54 d2.utils.events]:  eta: 0:00:25  iter: 1479  total_loss: 0.4379  loss_cls: 0.07543  loss_box_reg: 0.1516  loss_mask: 0.1504  loss_rpn_cls: 0.008594  loss_rpn_loc: 0.04999    time: 1.2779  last_time: 1.2302  data_time: 0.3167  last_data_time: 0.2806   lr: 0.02  max_mem: 17174M
[03/01 19:32:22 d2.utils.events]:  eta: 0:00:00  iter: 1499  total_loss: 0.4506  loss_cls: 0.08203  loss_box_reg: 0.1649  loss_mask: 0.1477  loss_rpn_cls: 0.01022  loss_rpn_loc: 0.05387    time: 1.2786  last_time: 1.2215  data_time: 0.3530  last_data_time: 0.2773   lr: 0.02  max_mem: 17174M
[03/01 19:32:22 d2.engine.hooks]: Overall training speed: 1498 iterations in 0:31:55 (1.2786 s / it)
[03/01 19:32:22 d2.engine.hooks]: Total training time: 0:32:08 (0:00:12 on hooks)
[03/01 19:32:25 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
| background | 0            |    car     | 8021         | pedestrian | 3347         |
|            | 0            |            | 0            |            | 0            |
|            | 0            |            | 0            |            | 0            |
|            | 0            |   ignore   | 2765         |            |              |
|   total    | 14133        |            |              |            |              |
[03/01 19:32:25 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/01 19:32:25 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 19:32:25 d2.data.common]: Serializing 2919 elements to byte tensors and concatenating them all ...
[03/01 19:32:25 d2.data.common]: Serialized dataset takes 5.86 MiB
WARNING [03/01 19:32:25 d2.engine.defaults]: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[03/01 19:32:26 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from /ghome/group07/C5-W2/lr_0_02_bs_16_is_16/model_0001499.pth ...
[03/01 19:32:32 d2.evaluation.coco_evaluation]: Trying to convert 'KITTI-MOTS_val' to COCO format ...
[03/01 19:32:32 d2.data.datasets.coco]: Converting annotations of dataset 'KITTI-MOTS_val' to COCO format ...)
[03/01 19:32:39 d2.data.datasets.coco]: Converting dataset dicts into COCO format
[03/01 19:32:39 d2.data.datasets.coco]: Conversion finished, #images: 2919, #annotations: 14133
[03/01 19:32:39 d2.data.datasets.coco]: Caching COCO format annotations at '/ghome/group07/C5-W2/lr_0_02_bs_16_is_16/KITTI-MOTS_val_coco_format.json' ...
[03/01 19:32:41 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/01 19:32:41 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 19:32:41 d2.data.common]: Serializing 2919 elements to byte tensors and concatenating them all ...
[03/01 19:32:42 d2.data.common]: Serialized dataset takes 5.86 MiB
[03/01 19:32:42 d2.evaluation.evaluator]: Start inference on 2919 batches
[03/01 19:32:47 d2.evaluation.evaluator]: Inference done 11/2919. Dataloading: 0.0101 s/iter. Inference: 0.0704 s/iter. Eval: 0.0057 s/iter. Total: 0.0863 s/iter. ETA=0:04:10
[03/01 19:32:52 d2.evaluation.evaluator]: Inference done 96/2919. Dataloading: 0.0040 s/iter. Inference: 0.0538 s/iter. Eval: 0.0033 s/iter. Total: 0.0612 s/iter. ETA=0:02:52
[03/01 19:32:57 d2.evaluation.evaluator]: Inference done 176/2919. Dataloading: 0.0036 s/iter. Inference: 0.0523 s/iter. Eval: 0.0059 s/iter. Total: 0.0619 s/iter. ETA=0:02:49
[03/01 19:33:03 d2.evaluation.evaluator]: Inference done 265/2919. Dataloading: 0.0034 s/iter. Inference: 0.0518 s/iter. Eval: 0.0055 s/iter. Total: 0.0608 s/iter. ETA=0:02:41
[03/01 19:33:08 d2.evaluation.evaluator]: Inference done 350/2919. Dataloading: 0.0033 s/iter. Inference: 0.0525 s/iter. Eval: 0.0047 s/iter. Total: 0.0605 s/iter. ETA=0:02:35
[03/01 19:33:13 d2.evaluation.evaluator]: Inference done 438/2919. Dataloading: 0.0032 s/iter. Inference: 0.0525 s/iter. Eval: 0.0042 s/iter. Total: 0.0599 s/iter. ETA=0:02:28
[03/01 19:33:18 d2.evaluation.evaluator]: Inference done 528/2919. Dataloading: 0.0031 s/iter. Inference: 0.0523 s/iter. Eval: 0.0038 s/iter. Total: 0.0592 s/iter. ETA=0:02:21
[03/01 19:33:23 d2.evaluation.evaluator]: Inference done 617/2919. Dataloading: 0.0030 s/iter. Inference: 0.0521 s/iter. Eval: 0.0036 s/iter. Total: 0.0588 s/iter. ETA=0:02:15
[03/01 19:33:28 d2.evaluation.evaluator]: Inference done 708/2919. Dataloading: 0.0029 s/iter. Inference: 0.0519 s/iter. Eval: 0.0035 s/iter. Total: 0.0584 s/iter. ETA=0:02:09
[03/01 19:33:33 d2.evaluation.evaluator]: Inference done 799/2919. Dataloading: 0.0029 s/iter. Inference: 0.0517 s/iter. Eval: 0.0034 s/iter. Total: 0.0580 s/iter. ETA=0:02:03
[03/01 19:33:38 d2.evaluation.evaluator]: Inference done 888/2919. Dataloading: 0.0029 s/iter. Inference: 0.0516 s/iter. Eval: 0.0033 s/iter. Total: 0.0579 s/iter. ETA=0:01:57
[03/01 19:33:43 d2.evaluation.evaluator]: Inference done 978/2919. Dataloading: 0.0029 s/iter. Inference: 0.0514 s/iter. Eval: 0.0033 s/iter. Total: 0.0577 s/iter. ETA=0:01:51
[03/01 19:33:48 d2.evaluation.evaluator]: Inference done 1068/2919. Dataloading: 0.0029 s/iter. Inference: 0.0513 s/iter. Eval: 0.0033 s/iter. Total: 0.0575 s/iter. ETA=0:01:46
[03/01 19:33:53 d2.evaluation.evaluator]: Inference done 1158/2919. Dataloading: 0.0029 s/iter. Inference: 0.0512 s/iter. Eval: 0.0033 s/iter. Total: 0.0574 s/iter. ETA=0:01:41
[03/01 19:33:58 d2.evaluation.evaluator]: Inference done 1245/2919. Dataloading: 0.0029 s/iter. Inference: 0.0512 s/iter. Eval: 0.0033 s/iter. Total: 0.0574 s/iter. ETA=0:01:36
[03/01 19:34:03 d2.evaluation.evaluator]: Inference done 1335/2919. Dataloading: 0.0029 s/iter. Inference: 0.0512 s/iter. Eval: 0.0032 s/iter. Total: 0.0573 s/iter. ETA=0:01:30
[03/01 19:34:08 d2.evaluation.evaluator]: Inference done 1426/2919. Dataloading: 0.0029 s/iter. Inference: 0.0510 s/iter. Eval: 0.0032 s/iter. Total: 0.0572 s/iter. ETA=0:01:25
[03/01 19:34:13 d2.evaluation.evaluator]: Inference done 1516/2919. Dataloading: 0.0029 s/iter. Inference: 0.0510 s/iter. Eval: 0.0032 s/iter. Total: 0.0571 s/iter. ETA=0:01:20
[03/01 19:34:18 d2.evaluation.evaluator]: Inference done 1604/2919. Dataloading: 0.0029 s/iter. Inference: 0.0510 s/iter. Eval: 0.0032 s/iter. Total: 0.0571 s/iter. ETA=0:01:15
[03/01 19:34:24 d2.evaluation.evaluator]: Inference done 1647/2919. Dataloading: 0.0028 s/iter. Inference: 0.0532 s/iter. Eval: 0.0031 s/iter. Total: 0.0593 s/iter. ETA=0:01:15
[03/01 19:34:29 d2.evaluation.evaluator]: Inference done 1741/2919. Dataloading: 0.0028 s/iter. Inference: 0.0529 s/iter. Eval: 0.0032 s/iter. Total: 0.0590 s/iter. ETA=0:01:09
[03/01 19:34:34 d2.evaluation.evaluator]: Inference done 1830/2919. Dataloading: 0.0028 s/iter. Inference: 0.0527 s/iter. Eval: 0.0032 s/iter. Total: 0.0588 s/iter. ETA=0:01:04
[03/01 19:34:39 d2.evaluation.evaluator]: Inference done 1913/2919. Dataloading: 0.0028 s/iter. Inference: 0.0527 s/iter. Eval: 0.0033 s/iter. Total: 0.0589 s/iter. ETA=0:00:59
[03/01 19:34:44 d2.evaluation.evaluator]: Inference done 1987/2919. Dataloading: 0.0028 s/iter. Inference: 0.0526 s/iter. Eval: 0.0038 s/iter. Total: 0.0593 s/iter. ETA=0:00:55
[03/01 19:34:49 d2.evaluation.evaluator]: Inference done 2076/2919. Dataloading: 0.0028 s/iter. Inference: 0.0525 s/iter. Eval: 0.0038 s/iter. Total: 0.0592 s/iter. ETA=0:00:49
[03/01 19:34:54 d2.evaluation.evaluator]: Inference done 2163/2919. Dataloading: 0.0028 s/iter. Inference: 0.0524 s/iter. Eval: 0.0038 s/iter. Total: 0.0592 s/iter. ETA=0:00:44
[03/01 19:34:59 d2.evaluation.evaluator]: Inference done 2257/2919. Dataloading: 0.0028 s/iter. Inference: 0.0522 s/iter. Eval: 0.0038 s/iter. Total: 0.0589 s/iter. ETA=0:00:39
[03/01 19:35:04 d2.evaluation.evaluator]: Inference done 2345/2919. Dataloading: 0.0028 s/iter. Inference: 0.0521 s/iter. Eval: 0.0038 s/iter. Total: 0.0589 s/iter. ETA=0:00:33
[03/01 19:35:10 d2.evaluation.evaluator]: Inference done 2426/2919. Dataloading: 0.0028 s/iter. Inference: 0.0521 s/iter. Eval: 0.0040 s/iter. Total: 0.0590 s/iter. ETA=0:00:29
[03/01 19:35:15 d2.evaluation.evaluator]: Inference done 2506/2919. Dataloading: 0.0029 s/iter. Inference: 0.0521 s/iter. Eval: 0.0041 s/iter. Total: 0.0591 s/iter. ETA=0:00:24
[03/01 19:35:20 d2.evaluation.evaluator]: Inference done 2588/2919. Dataloading: 0.0029 s/iter. Inference: 0.0520 s/iter. Eval: 0.0042 s/iter. Total: 0.0592 s/iter. ETA=0:00:19
[03/01 19:35:25 d2.evaluation.evaluator]: Inference done 2674/2919. Dataloading: 0.0029 s/iter. Inference: 0.0520 s/iter. Eval: 0.0042 s/iter. Total: 0.0591 s/iter. ETA=0:00:14
[03/01 19:35:30 d2.evaluation.evaluator]: Inference done 2762/2919. Dataloading: 0.0029 s/iter. Inference: 0.0520 s/iter. Eval: 0.0042 s/iter. Total: 0.0591 s/iter. ETA=0:00:09
[03/01 19:35:35 d2.evaluation.evaluator]: Inference done 2848/2919. Dataloading: 0.0029 s/iter. Inference: 0.0520 s/iter. Eval: 0.0042 s/iter. Total: 0.0591 s/iter. ETA=0:00:04
[03/01 19:35:40 d2.evaluation.evaluator]: Total inference time: 0:02:52.950096 (0.059351 s / iter per device, on 1 devices)
[03/01 19:35:40 d2.evaluation.evaluator]: Total inference pure compute time: 0:02:32 (0.052221 s / iter per device, on 1 devices)
[03/01 19:35:40 d2.evaluation.coco_evaluation]: Preparing results for COCO format ...
[03/01 19:35:40 d2.evaluation.coco_evaluation]: Saving results to /ghome/group07/C5-W2/lr_0_02_bs_16_is_16/coco_instances_results.json
[03/01 19:35:40 d2.evaluation.coco_evaluation]: Evaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
[03/01 19:35:40 d2.evaluation.fast_eval_api]: Evaluate annotation type *bbox*
[03/01 19:35:41 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 1.01 seconds.
[03/01 19:35:41 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[03/01 19:35:41 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.08 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.415
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.589
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.470
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.275
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.481
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.501
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.161
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.471
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.476
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.324
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.529
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.627
[03/01 19:35:41 d2.evaluation.coco_evaluation]: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 41.460 | 58.893 | 46.981 | 27.527 | 48.107 | 50.118 |
[03/01 19:35:41 d2.evaluation.coco_evaluation]: Per-category bbox AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| background | nan  | car        | 68.362 | pedestrian | 51.315 |
|            | nan  |            | nan    |            | nan    |
|            | nan  |            | nan    |            | nan    |
|            | nan  | ignore     | 4.704  |            |        |
Loading and preparing results...
DONE (t=0.14s)
creating index...
index created!
[03/01 19:35:41 d2.evaluation.fast_eval_api]: Evaluate annotation type *segm*
[03/01 19:35:43 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 1.08 seconds.
[03/01 19:35:43 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[03/01 19:35:43 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.07 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.372
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.551
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.412
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.218
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.442
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.531
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.144
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.424
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.426
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.278
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.480
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.577
[03/01 19:35:43 d2.evaluation.coco_evaluation]: Evaluation results for segm: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 37.203 | 55.091 | 41.171 | 21.795 | 44.249 | 53.116 |
[03/01 19:35:43 d2.evaluation.coco_evaluation]: Per-category segm AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| background | nan  | car        | 67.886 | pedestrian | 40.229 |
|            | nan  |            | nan    |            | nan    |
|            | nan  |            | nan    |            | nan    |
|            | nan  | ignore     | 3.494  |            |        |
OrderedDict([('bbox', {'AP': 41.46010728294552, 'AP50': 58.89302940427974, 'AP75': 46.98118437188922, 'APs': 27.52720797616571, 'APm': 48.10689824735972, 'APl': 50.117611441676125, 'AP-background': nan, 'AP-car': 68.36152374563568, 'AP-pedestrian': 51.314999774703566, 'AP-': nan, 'AP-ignore': 4.703798328497326}), ('segm', {'AP': 37.20304856026724, 'AP50': 55.091359934923865, 'AP75': 41.171048004942975, 'APs': 21.794533479535826, 'APm': 44.24883864425405, 'APl': 53.11553911825463, 'AP-background': nan, 'AP-car': 67.88596147329747, 'AP-pedestrian': 40.22935779742867, 'AP-': nan, 'AP-ignore': 3.493826410075606})])

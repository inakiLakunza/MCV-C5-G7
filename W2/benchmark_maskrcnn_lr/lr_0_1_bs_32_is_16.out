1
The device we will be working on is: cuda
[03/01 21:45:17 d2.engine.defaults]: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=12, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=44, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 11, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[03/01 21:45:21 d2.data.build]: Removed 0 images with no usable annotations. 5007 images left.
[03/01 21:45:21 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
| background | 0            |    car     | 18822        | pedestrian | 8065         |
|            | 0            |            | 0            |            | 0            |
|            | 0            |            | 0            |            | 0            |
|            | 0            |   ignore   | 4977         |            |              |
|   total    | 31864        |            |              |            |              |
[03/01 21:45:21 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[03/01 21:45:21 d2.data.build]: Using training sampler TrainingSampler
[03/01 21:45:21 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 21:45:21 d2.data.common]: Serializing 5007 elements to byte tensors and concatenating them all ...
[03/01 21:45:21 d2.data.common]: Serialized dataset takes 13.56 MiB
[03/01 21:45:21 d2.data.build]: Making batched data loader with batch_size=16
WARNING [03/01 21:45:21 d2.solver.build]: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/01 21:45:21 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl ...
[03/01 21:45:21 d2.engine.train_loop]: Starting training from iteration 0
[03/01 21:45:54 d2.utils.events]:  eta: 0:29:38  iter: 19  total_loss: 1.859  loss_cls: 0.7602  loss_box_reg: 0.4615  loss_mask: 0.5632  loss_rpn_cls: 0.0949  loss_rpn_loc: 0.08592    time: 1.2728  last_time: 1.2920  data_time: 0.5428  last_data_time: 0.3295   lr: 0.0019981  max_mem: 15848M
[03/01 21:46:25 d2.utils.events]:  eta: 0:29:57  iter: 39  total_loss: 1.096  loss_cls: 0.2869  loss_box_reg: 0.3618  loss_mask: 0.3018  loss_rpn_cls: 0.05769  loss_rpn_loc: 0.07852    time: 1.2784  last_time: 1.2297  data_time: 0.3513  last_data_time: 0.2989   lr: 0.0039961  max_mem: 15983M
[03/01 21:46:52 d2.utils.events]:  eta: 0:29:31  iter: 59  total_loss: 0.824  loss_cls: 0.1917  loss_box_reg: 0.259  loss_mask: 0.2479  loss_rpn_cls: 0.03608  loss_rpn_loc: 0.07168    time: 1.3047  last_time: 1.2785  data_time: 0.3604  last_data_time: 0.3323   lr: 0.0059941  max_mem: 15983M
[03/01 21:47:17 d2.utils.events]:  eta: 0:29:08  iter: 79  total_loss: 0.7279  loss_cls: 0.1557  loss_box_reg: 0.2313  loss_mask: 0.2262  loss_rpn_cls: 0.02853  loss_rpn_loc: 0.07485    time: 1.2882  last_time: 1.2689  data_time: 0.3256  last_data_time: 0.3751   lr: 0.0079921  max_mem: 16459M
[03/01 21:47:42 d2.utils.events]:  eta: 0:28:44  iter: 99  total_loss: 0.6854  loss_cls: 0.1382  loss_box_reg: 0.2102  loss_mask: 0.2291  loss_rpn_cls: 0.03164  loss_rpn_loc: 0.07113    time: 1.2808  last_time: 1.2315  data_time: 0.3416  last_data_time: 0.3089   lr: 0.0099901  max_mem: 16459M
[03/01 21:48:07 d2.utils.events]:  eta: 0:28:17  iter: 119  total_loss: 0.6444  loss_cls: 0.1323  loss_box_reg: 0.205  loss_mask: 0.216  loss_rpn_cls: 0.02798  loss_rpn_loc: 0.0633    time: 1.2699  last_time: 1.1156  data_time: 0.3230  last_data_time: 0.2642   lr: 0.011988  max_mem: 16459M
[03/01 21:48:33 d2.utils.events]:  eta: 0:28:04  iter: 139  total_loss: 0.6703  loss_cls: 0.1391  loss_box_reg: 0.2093  loss_mask: 0.2104  loss_rpn_cls: 0.02726  loss_rpn_loc: 0.07486    time: 1.2786  last_time: 1.2084  data_time: 0.4005  last_data_time: 0.3089   lr: 0.013986  max_mem: 16858M
[03/01 21:48:59 d2.utils.events]:  eta: 0:27:40  iter: 159  total_loss: 0.6298  loss_cls: 0.1267  loss_box_reg: 0.1974  loss_mask: 0.2093  loss_rpn_cls: 0.02658  loss_rpn_loc: 0.07479    time: 1.2788  last_time: 1.9475  data_time: 0.3619  last_data_time: 1.0190   lr: 0.015984  max_mem: 16858M
[03/01 21:49:24 d2.utils.events]:  eta: 0:27:20  iter: 179  total_loss: 0.6462  loss_cls: 0.1338  loss_box_reg: 0.2014  loss_mask: 0.1963  loss_rpn_cls: 0.02603  loss_rpn_loc: 0.07414    time: 1.2791  last_time: 1.1926  data_time: 0.3569  last_data_time: 0.2858   lr: 0.017982  max_mem: 16858M
[03/01 21:49:50 d2.utils.events]:  eta: 0:27:00  iter: 199  total_loss: 0.6633  loss_cls: 0.1418  loss_box_reg: 0.218  loss_mask: 0.1976  loss_rpn_cls: 0.02746  loss_rpn_loc: 0.06896    time: 1.2784  last_time: 1.2806  data_time: 0.3304  last_data_time: 0.3237   lr: 0.01998  max_mem: 16858M
[03/01 21:50:15 d2.utils.events]:  eta: 0:26:38  iter: 219  total_loss: 0.6231  loss_cls: 0.1387  loss_box_reg: 0.2121  loss_mask: 0.2009  loss_rpn_cls: 0.02117  loss_rpn_loc: 0.0665    time: 1.2762  last_time: 1.2553  data_time: 0.3179  last_data_time: 0.3388   lr: 0.021978  max_mem: 16858M
[03/01 21:50:40 d2.utils.events]:  eta: 0:26:14  iter: 239  total_loss: 0.6305  loss_cls: 0.1261  loss_box_reg: 0.2073  loss_mask: 0.1943  loss_rpn_cls: 0.02354  loss_rpn_loc: 0.07243    time: 1.2754  last_time: 1.2036  data_time: 0.3438  last_data_time: 0.3107   lr: 0.023976  max_mem: 16858M
[03/01 21:51:05 d2.utils.events]:  eta: 0:25:48  iter: 259  total_loss: 0.6082  loss_cls: 0.1238  loss_box_reg: 0.1894  loss_mask: 0.1901  loss_rpn_cls: 0.02514  loss_rpn_loc: 0.0716    time: 1.2722  last_time: 1.1689  data_time: 0.3156  last_data_time: 0.2854   lr: 0.025974  max_mem: 16858M
[03/01 21:51:30 d2.utils.events]:  eta: 0:25:22  iter: 279  total_loss: 0.6026  loss_cls: 0.1184  loss_box_reg: 0.1995  loss_mask: 0.1879  loss_rpn_cls: 0.01996  loss_rpn_loc: 0.07443    time: 1.2698  last_time: 1.2346  data_time: 0.3186  last_data_time: 0.3118   lr: 0.027972  max_mem: 16858M
[03/01 21:51:55 d2.utils.events]:  eta: 0:24:56  iter: 299  total_loss: 0.611  loss_cls: 0.1324  loss_box_reg: 0.2095  loss_mask: 0.1892  loss_rpn_cls: 0.02191  loss_rpn_loc: 0.06535    time: 1.2706  last_time: 1.1501  data_time: 0.3501  last_data_time: 0.2595   lr: 0.02997  max_mem: 16858M
[03/01 21:52:20 d2.utils.events]:  eta: 0:24:33  iter: 319  total_loss: 0.6409  loss_cls: 0.1212  loss_box_reg: 0.2161  loss_mask: 0.1861  loss_rpn_cls: 0.02322  loss_rpn_loc: 0.07308    time: 1.2690  last_time: 1.3462  data_time: 0.3212  last_data_time: 0.3695   lr: 0.031968  max_mem: 16858M
[03/01 21:52:46 d2.utils.events]:  eta: 0:24:10  iter: 339  total_loss: 0.5892  loss_cls: 0.1199  loss_box_reg: 0.1999  loss_mask: 0.1806  loss_rpn_cls: 0.01941  loss_rpn_loc: 0.06623    time: 1.2691  last_time: 1.2819  data_time: 0.3250  last_data_time: 0.3376   lr: 0.033966  max_mem: 16858M
[03/01 21:53:12 d2.utils.events]:  eta: 0:23:48  iter: 359  total_loss: 0.592  loss_cls: 0.1171  loss_box_reg: 0.205  loss_mask: 0.1787  loss_rpn_cls: 0.02042  loss_rpn_loc: 0.07046    time: 1.2713  last_time: 1.3530  data_time: 0.3629  last_data_time: 0.3758   lr: 0.035964  max_mem: 16858M
[03/01 21:53:38 d2.utils.events]:  eta: 0:23:24  iter: 379  total_loss: 0.577  loss_cls: 0.1135  loss_box_reg: 0.192  loss_mask: 0.1694  loss_rpn_cls: 0.02099  loss_rpn_loc: 0.0762    time: 1.2719  last_time: 1.2253  data_time: 0.3418  last_data_time: 0.3248   lr: 0.037962  max_mem: 16858M
[03/01 21:54:03 d2.utils.events]:  eta: 0:22:59  iter: 399  total_loss: 0.5571  loss_cls: 0.1046  loss_box_reg: 0.1904  loss_mask: 0.1757  loss_rpn_cls: 0.02029  loss_rpn_loc: 0.0734    time: 1.2712  last_time: 1.2310  data_time: 0.3256  last_data_time: 0.3109   lr: 0.03996  max_mem: 16858M
[03/01 21:54:28 d2.utils.events]:  eta: 0:22:35  iter: 419  total_loss: 0.5445  loss_cls: 0.1122  loss_box_reg: 0.1876  loss_mask: 0.1763  loss_rpn_cls: 0.02009  loss_rpn_loc: 0.05937    time: 1.2710  last_time: 1.3531  data_time: 0.3226  last_data_time: 0.3545   lr: 0.041958  max_mem: 16858M
[03/01 21:54:54 d2.utils.events]:  eta: 0:22:10  iter: 439  total_loss: 0.5831  loss_cls: 0.1159  loss_box_reg: 0.2075  loss_mask: 0.1798  loss_rpn_cls: 0.01883  loss_rpn_loc: 0.06749    time: 1.2711  last_time: 1.2107  data_time: 0.3162  last_data_time: 0.2649   lr: 0.043956  max_mem: 16858M
[03/01 21:55:20 d2.utils.events]:  eta: 0:21:46  iter: 459  total_loss: 0.5954  loss_cls: 0.1149  loss_box_reg: 0.204  loss_mask: 0.1791  loss_rpn_cls: 0.01742  loss_rpn_loc: 0.0614    time: 1.2725  last_time: 1.2867  data_time: 0.3603  last_data_time: 0.3395   lr: 0.045954  max_mem: 16858M
[03/01 21:55:45 d2.utils.events]:  eta: 0:21:21  iter: 479  total_loss: 0.5936  loss_cls: 0.1105  loss_box_reg: 0.198  loss_mask: 0.1888  loss_rpn_cls: 0.02154  loss_rpn_loc: 0.07403    time: 1.2727  last_time: 1.3238  data_time: 0.3387  last_data_time: 0.3325   lr: 0.047952  max_mem: 16858M
[03/01 21:56:12 d2.utils.events]:  eta: 0:20:57  iter: 499  total_loss: 0.6032  loss_cls: 0.1144  loss_box_reg: 0.2056  loss_mask: 0.1799  loss_rpn_cls: 0.01739  loss_rpn_loc: 0.07202    time: 1.2749  last_time: 1.2765  data_time: 0.3706  last_data_time: 0.3241   lr: 0.04995  max_mem: 16858M
[03/01 21:56:39 d2.utils.events]:  eta: 0:20:33  iter: 519  total_loss: 0.5705  loss_cls: 0.1068  loss_box_reg: 0.1991  loss_mask: 0.1693  loss_rpn_cls: 0.01833  loss_rpn_loc: 0.06973    time: 1.2758  last_time: 1.2694  data_time: 0.3396  last_data_time: 0.3398   lr: 0.051948  max_mem: 16858M
[03/01 21:57:04 d2.utils.events]:  eta: 0:20:08  iter: 539  total_loss: 0.5557  loss_cls: 0.1003  loss_box_reg: 0.1974  loss_mask: 0.1768  loss_rpn_cls: 0.02186  loss_rpn_loc: 0.06371    time: 1.2755  last_time: 1.2389  data_time: 0.3373  last_data_time: 0.3413   lr: 0.053946  max_mem: 16858M
[03/01 21:57:30 d2.utils.events]:  eta: 0:19:43  iter: 559  total_loss: 0.5746  loss_cls: 0.1163  loss_box_reg: 0.1946  loss_mask: 0.1752  loss_rpn_cls: 0.01768  loss_rpn_loc: 0.07043    time: 1.2759  last_time: 1.2965  data_time: 0.3414  last_data_time: 0.3434   lr: 0.055944  max_mem: 16920M
[03/01 21:57:55 d2.utils.events]:  eta: 0:19:18  iter: 579  total_loss: 0.5555  loss_cls: 0.1036  loss_box_reg: 0.1878  loss_mask: 0.1798  loss_rpn_cls: 0.02242  loss_rpn_loc: 0.06645    time: 1.2749  last_time: 1.3263  data_time: 0.3145  last_data_time: 0.3805   lr: 0.057942  max_mem: 16920M
[03/01 21:58:21 d2.utils.events]:  eta: 0:18:53  iter: 599  total_loss: 0.6035  loss_cls: 0.1078  loss_box_reg: 0.1872  loss_mask: 0.1777  loss_rpn_cls: 0.02129  loss_rpn_loc: 0.07386    time: 1.2756  last_time: 1.2114  data_time: 0.3689  last_data_time: 0.3082   lr: 0.05994  max_mem: 16920M
[03/01 21:58:46 d2.utils.events]:  eta: 0:18:28  iter: 619  total_loss: 0.5339  loss_cls: 0.1015  loss_box_reg: 0.1773  loss_mask: 0.1662  loss_rpn_cls: 0.023  loss_rpn_loc: 0.06317    time: 1.2748  last_time: 1.2799  data_time: 0.3164  last_data_time: 0.3096   lr: 0.061938  max_mem: 16920M
[03/01 21:59:11 d2.utils.events]:  eta: 0:18:03  iter: 639  total_loss: 0.577  loss_cls: 0.1087  loss_box_reg: 0.1924  loss_mask: 0.1734  loss_rpn_cls: 0.02187  loss_rpn_loc: 0.07418    time: 1.2749  last_time: 1.2062  data_time: 0.3329  last_data_time: 0.2745   lr: 0.063936  max_mem: 16920M
[03/01 21:59:37 d2.utils.events]:  eta: 0:17:38  iter: 659  total_loss: 0.5397  loss_cls: 0.09984  loss_box_reg: 0.1836  loss_mask: 0.1693  loss_rpn_cls: 0.02062  loss_rpn_loc: 0.06115    time: 1.2753  last_time: 1.3090  data_time: 0.3390  last_data_time: 0.3558   lr: 0.065934  max_mem: 17009M
[03/01 22:00:03 d2.utils.events]:  eta: 0:17:14  iter: 679  total_loss: 0.5555  loss_cls: 0.1058  loss_box_reg: 0.1926  loss_mask: 0.1572  loss_rpn_cls: 0.01943  loss_rpn_loc: 0.06498    time: 1.2760  last_time: 1.2555  data_time: 0.3354  last_data_time: 0.3194   lr: 0.067932  max_mem: 17009M
[03/01 22:00:29 d2.utils.events]:  eta: 0:16:49  iter: 699  total_loss: 0.5517  loss_cls: 0.104  loss_box_reg: 0.1869  loss_mask: 0.1605  loss_rpn_cls: 0.01701  loss_rpn_loc: 0.06533    time: 1.2763  last_time: 1.2392  data_time: 0.3205  last_data_time: 0.2993   lr: 0.06993  max_mem: 17009M
[03/01 22:00:54 d2.utils.events]:  eta: 0:16:24  iter: 719  total_loss: 0.5792  loss_cls: 0.1081  loss_box_reg: 0.1976  loss_mask: 0.1728  loss_rpn_cls: 0.01859  loss_rpn_loc: 0.07815    time: 1.2764  last_time: 1.2334  data_time: 0.3391  last_data_time: 0.3166   lr: 0.071928  max_mem: 17009M
[03/01 22:01:20 d2.utils.events]:  eta: 0:15:59  iter: 739  total_loss: 0.5617  loss_cls: 0.1007  loss_box_reg: 0.1954  loss_mask: 0.1622  loss_rpn_cls: 0.01794  loss_rpn_loc: 0.07166    time: 1.2761  last_time: 1.3106  data_time: 0.3172  last_data_time: 0.3291   lr: 0.073926  max_mem: 17009M
[03/01 22:01:46 d2.utils.events]:  eta: 0:15:34  iter: 759  total_loss: 0.5507  loss_cls: 0.111  loss_box_reg: 0.2028  loss_mask: 0.162  loss_rpn_cls: 0.01835  loss_rpn_loc: 0.05488    time: 1.2773  last_time: 1.3561  data_time: 0.3715  last_data_time: 0.3552   lr: 0.075924  max_mem: 17009M
[03/01 22:02:12 d2.utils.events]:  eta: 0:15:09  iter: 779  total_loss: 0.5757  loss_cls: 0.1061  loss_box_reg: 0.1979  loss_mask: 0.1592  loss_rpn_cls: 0.02199  loss_rpn_loc: 0.07617    time: 1.2776  last_time: 1.2419  data_time: 0.3308  last_data_time: 0.3134   lr: 0.077922  max_mem: 17009M
[03/01 22:02:38 d2.utils.events]:  eta: 0:14:45  iter: 799  total_loss: 0.5771  loss_cls: 0.1114  loss_box_reg: 0.1979  loss_mask: 0.1601  loss_rpn_cls: 0.02585  loss_rpn_loc: 0.07075    time: 1.2780  last_time: 1.2221  data_time: 0.3281  last_data_time: 0.3192   lr: 0.07992  max_mem: 17009M
[03/01 22:03:03 d2.utils.events]:  eta: 0:14:20  iter: 819  total_loss: 0.5361  loss_cls: 0.09616  loss_box_reg: 0.1686  loss_mask: 0.1657  loss_rpn_cls: 0.02272  loss_rpn_loc: 0.07907    time: 1.2776  last_time: 1.1984  data_time: 0.3177  last_data_time: 0.2956   lr: 0.081918  max_mem: 17009M
[03/01 22:03:28 d2.utils.events]:  eta: 0:13:55  iter: 839  total_loss: 0.5235  loss_cls: 0.09459  loss_box_reg: 0.1719  loss_mask: 0.1667  loss_rpn_cls: 0.02261  loss_rpn_loc: 0.06598    time: 1.2771  last_time: 1.2665  data_time: 0.3090  last_data_time: 0.3301   lr: 0.083916  max_mem: 17009M
[03/01 22:03:54 d2.utils.events]:  eta: 0:13:29  iter: 859  total_loss: 0.5534  loss_cls: 0.1007  loss_box_reg: 0.1871  loss_mask: 0.167  loss_rpn_cls: 0.02231  loss_rpn_loc: 0.07649    time: 1.2772  last_time: 1.4606  data_time: 0.3361  last_data_time: 0.4847   lr: 0.085914  max_mem: 17009M
[03/01 22:04:19 d2.utils.events]:  eta: 0:13:04  iter: 879  total_loss: 0.5356  loss_cls: 0.1022  loss_box_reg: 0.186  loss_mask: 0.1759  loss_rpn_cls: 0.01965  loss_rpn_loc: 0.06321    time: 1.2772  last_time: 1.3200  data_time: 0.3197  last_data_time: 0.3518   lr: 0.087912  max_mem: 17009M
[03/01 22:04:45 d2.utils.events]:  eta: 0:12:39  iter: 899  total_loss: 0.5717  loss_cls: 0.1032  loss_box_reg: 0.1969  loss_mask: 0.1752  loss_rpn_cls: 0.01833  loss_rpn_loc: 0.06652    time: 1.2774  last_time: 1.2393  data_time: 0.3276  last_data_time: 0.3336   lr: 0.08991  max_mem: 17009M
[03/01 22:05:11 d2.utils.events]:  eta: 0:12:14  iter: 919  total_loss: 0.5349  loss_cls: 0.09827  loss_box_reg: 0.1904  loss_mask: 0.1607  loss_rpn_cls: 0.01669  loss_rpn_loc: 0.06725    time: 1.2774  last_time: 1.2289  data_time: 0.3252  last_data_time: 0.2893   lr: 0.091908  max_mem: 17009M
[03/01 22:05:36 d2.utils.events]:  eta: 0:11:49  iter: 939  total_loss: 0.5202  loss_cls: 0.1015  loss_box_reg: 0.175  loss_mask: 0.1631  loss_rpn_cls: 0.01988  loss_rpn_loc: 0.06332    time: 1.2778  last_time: 1.2695  data_time: 0.3563  last_data_time: 0.3097   lr: 0.093906  max_mem: 17009M
[03/01 22:06:03 d2.utils.events]:  eta: 0:11:24  iter: 959  total_loss: 0.5592  loss_cls: 0.1088  loss_box_reg: 0.1943  loss_mask: 0.1673  loss_rpn_cls: 0.0212  loss_rpn_loc: 0.07656    time: 1.2783  last_time: 1.2916  data_time: 0.3308  last_data_time: 0.3657   lr: 0.095904  max_mem: 17009M
[03/01 22:06:28 d2.utils.events]:  eta: 0:10:58  iter: 979  total_loss: 0.5231  loss_cls: 0.09645  loss_box_reg: 0.179  loss_mask: 0.162  loss_rpn_cls: 0.01694  loss_rpn_loc: 0.06386    time: 1.2777  last_time: 1.2528  data_time: 0.3052  last_data_time: 0.2762   lr: 0.097902  max_mem: 17009M
[03/01 22:06:54 d2.utils.events]:  eta: 0:10:33  iter: 999  total_loss: 0.5527  loss_cls: 0.1012  loss_box_reg: 0.1885  loss_mask: 0.1653  loss_rpn_cls: 0.01933  loss_rpn_loc: 0.06405    time: 1.2779  last_time: 1.1829  data_time: 0.3355  last_data_time: 0.2803   lr: 0.0999  max_mem: 17009M
[03/01 22:07:20 d2.utils.events]:  eta: 0:10:08  iter: 1019  total_loss: 0.5653  loss_cls: 0.1057  loss_box_reg: 0.2004  loss_mask: 0.1571  loss_rpn_cls: 0.02041  loss_rpn_loc: 0.07711    time: 1.2782  last_time: 1.2931  data_time: 0.3429  last_data_time: 0.3489   lr: 0.1  max_mem: 17009M
[03/01 22:07:46 d2.utils.events]:  eta: 0:09:43  iter: 1039  total_loss: 0.5609  loss_cls: 0.1031  loss_box_reg: 0.2039  loss_mask: 0.1612  loss_rpn_cls: 0.01801  loss_rpn_loc: 0.07544    time: 1.2783  last_time: 1.3150  data_time: 0.3323  last_data_time: 0.3287   lr: 0.1  max_mem: 17009M
[03/01 22:08:11 d2.utils.events]:  eta: 0:09:18  iter: 1059  total_loss: 0.5228  loss_cls: 0.09469  loss_box_reg: 0.1811  loss_mask: 0.1672  loss_rpn_cls: 0.01658  loss_rpn_loc: 0.05826    time: 1.2781  last_time: 1.3183  data_time: 0.3223  last_data_time: 0.3768   lr: 0.1  max_mem: 17009M
[03/01 22:08:37 d2.utils.events]:  eta: 0:08:53  iter: 1079  total_loss: 0.5184  loss_cls: 0.09332  loss_box_reg: 0.1816  loss_mask: 0.1584  loss_rpn_cls: 0.01955  loss_rpn_loc: 0.06941    time: 1.2784  last_time: 1.5946  data_time: 0.3411  last_data_time: 0.6158   lr: 0.1  max_mem: 17009M
[03/01 22:09:03 d2.utils.events]:  eta: 0:08:27  iter: 1099  total_loss: 0.5092  loss_cls: 0.09317  loss_box_reg: 0.1804  loss_mask: 0.1559  loss_rpn_cls: 0.01545  loss_rpn_loc: 0.06288    time: 1.2783  last_time: 1.2994  data_time: 0.3317  last_data_time: 0.3343   lr: 0.1  max_mem: 17009M
[03/01 22:09:36 d2.utils.events]:  eta: 0:08:02  iter: 1119  total_loss: 0.5389  loss_cls: 0.09858  loss_box_reg: 0.1902  loss_mask: 0.1563  loss_rpn_cls: 0.01676  loss_rpn_loc: 0.07233    time: 1.2850  last_time: 1.2892  data_time: 0.4414  last_data_time: 0.3377   lr: 0.1  max_mem: 17009M
[03/01 22:10:02 d2.utils.events]:  eta: 0:07:37  iter: 1139  total_loss: 0.5035  loss_cls: 0.09629  loss_box_reg: 0.1818  loss_mask: 0.148  loss_rpn_cls: 0.01572  loss_rpn_loc: 0.06017    time: 1.2850  last_time: 1.2540  data_time: 0.3196  last_data_time: 0.2904   lr: 0.1  max_mem: 17009M
[03/01 22:10:27 d2.utils.events]:  eta: 0:07:12  iter: 1159  total_loss: 0.5377  loss_cls: 0.09809  loss_box_reg: 0.1833  loss_mask: 0.1695  loss_rpn_cls: 0.018  loss_rpn_loc: 0.05929    time: 1.2850  last_time: 1.2068  data_time: 0.3275  last_data_time: 0.2852   lr: 0.1  max_mem: 17009M
[03/01 22:10:53 d2.utils.events]:  eta: 0:06:47  iter: 1179  total_loss: 0.5257  loss_cls: 0.09061  loss_box_reg: 0.1725  loss_mask: 0.15  loss_rpn_cls: 0.01859  loss_rpn_loc: 0.07534    time: 1.2849  last_time: 1.2529  data_time: 0.3398  last_data_time: 0.3407   lr: 0.1  max_mem: 17009M
[03/01 22:11:19 d2.utils.events]:  eta: 0:06:22  iter: 1199  total_loss: 0.5015  loss_cls: 0.0891  loss_box_reg: 0.1731  loss_mask: 0.1544  loss_rpn_cls: 0.01547  loss_rpn_loc: 0.073    time: 1.2851  last_time: 1.2700  data_time: 0.3353  last_data_time: 0.3563   lr: 0.1  max_mem: 17009M
[03/01 22:11:44 d2.utils.events]:  eta: 0:05:56  iter: 1219  total_loss: 0.5214  loss_cls: 0.09573  loss_box_reg: 0.1789  loss_mask: 0.1614  loss_rpn_cls: 0.0159  loss_rpn_loc: 0.06581    time: 1.2848  last_time: 1.3308  data_time: 0.3344  last_data_time: 0.3803   lr: 0.1  max_mem: 17009M
[03/01 22:12:10 d2.utils.events]:  eta: 0:05:31  iter: 1239  total_loss: 0.5509  loss_cls: 0.1001  loss_box_reg: 0.1902  loss_mask: 0.1661  loss_rpn_cls: 0.01809  loss_rpn_loc: 0.06984    time: 1.2850  last_time: 1.2316  data_time: 0.3257  last_data_time: 0.2714   lr: 0.1  max_mem: 17009M
[03/01 22:12:36 d2.utils.events]:  eta: 0:05:05  iter: 1259  total_loss: 0.5157  loss_cls: 0.0998  loss_box_reg: 0.1879  loss_mask: 0.1512  loss_rpn_cls: 0.01558  loss_rpn_loc: 0.07011    time: 1.2852  last_time: 1.2875  data_time: 0.3279  last_data_time: 0.3237   lr: 0.1  max_mem: 17009M
[03/01 22:13:02 d2.utils.events]:  eta: 0:04:40  iter: 1279  total_loss: 0.4823  loss_cls: 0.08551  loss_box_reg: 0.1798  loss_mask: 0.1475  loss_rpn_cls: 0.0114  loss_rpn_loc: 0.05686    time: 1.2853  last_time: 1.2217  data_time: 0.3243  last_data_time: 0.2819   lr: 0.1  max_mem: 17009M
[03/01 22:13:28 d2.utils.events]:  eta: 0:04:15  iter: 1299  total_loss: 0.5057  loss_cls: 0.09159  loss_box_reg: 0.1781  loss_mask: 0.1509  loss_rpn_cls: 0.01355  loss_rpn_loc: 0.06517    time: 1.2859  last_time: 1.3085  data_time: 0.3403  last_data_time: 0.3225   lr: 0.1  max_mem: 17009M
[03/01 22:13:54 d2.utils.events]:  eta: 0:03:49  iter: 1319  total_loss: 0.4785  loss_cls: 0.08974  loss_box_reg: 0.1754  loss_mask: 0.1513  loss_rpn_cls: 0.01074  loss_rpn_loc: 0.05352    time: 1.2860  last_time: 1.3331  data_time: 0.3258  last_data_time: 0.3492   lr: 0.1  max_mem: 17009M
[03/01 22:14:20 d2.utils.events]:  eta: 0:03:24  iter: 1339  total_loss: 0.4993  loss_cls: 0.0904  loss_box_reg: 0.1762  loss_mask: 0.1466  loss_rpn_cls: 0.01311  loss_rpn_loc: 0.06066    time: 1.2862  last_time: 1.2331  data_time: 0.3378  last_data_time: 0.3081   lr: 0.1  max_mem: 17009M
[03/01 22:14:46 d2.utils.events]:  eta: 0:02:58  iter: 1359  total_loss: 0.5018  loss_cls: 0.08334  loss_box_reg: 0.181  loss_mask: 0.1539  loss_rpn_cls: 0.01333  loss_rpn_loc: 0.06405    time: 1.2862  last_time: 1.2533  data_time: 0.3286  last_data_time: 0.3061   lr: 0.1  max_mem: 17009M
[03/01 22:15:12 d2.utils.events]:  eta: 0:02:33  iter: 1379  total_loss: 0.5123  loss_cls: 0.09156  loss_box_reg: 0.1867  loss_mask: 0.1541  loss_rpn_cls: 0.01667  loss_rpn_loc: 0.06316    time: 1.2864  last_time: 1.2633  data_time: 0.3258  last_data_time: 0.3066   lr: 0.1  max_mem: 17009M
[03/01 22:15:38 d2.utils.events]:  eta: 0:02:07  iter: 1399  total_loss: 0.4934  loss_cls: 0.08335  loss_box_reg: 0.173  loss_mask: 0.1463  loss_rpn_cls: 0.01532  loss_rpn_loc: 0.05417    time: 1.2866  last_time: 1.3793  data_time: 0.3352  last_data_time: 0.3391   lr: 0.1  max_mem: 17123M
[03/01 22:16:03 d2.utils.events]:  eta: 0:01:42  iter: 1419  total_loss: 0.4638  loss_cls: 0.08421  loss_box_reg: 0.1728  loss_mask: 0.1455  loss_rpn_cls: 0.01361  loss_rpn_loc: 0.05796    time: 1.2861  last_time: 1.2837  data_time: 0.3070  last_data_time: 0.3142   lr: 0.1  max_mem: 17123M
[03/01 22:16:28 d2.utils.events]:  eta: 0:01:16  iter: 1439  total_loss: 0.4874  loss_cls: 0.07991  loss_box_reg: 0.1689  loss_mask: 0.1495  loss_rpn_cls: 0.01592  loss_rpn_loc: 0.06699    time: 1.2858  last_time: 1.3373  data_time: 0.3153  last_data_time: 0.3247   lr: 0.1  max_mem: 17123M
[03/01 22:16:54 d2.utils.events]:  eta: 0:00:51  iter: 1459  total_loss: 0.4766  loss_cls: 0.08291  loss_box_reg: 0.1667  loss_mask: 0.1503  loss_rpn_cls: 0.01366  loss_rpn_loc: 0.06797    time: 1.2855  last_time: 1.2694  data_time: 0.3063  last_data_time: 0.3127   lr: 0.1  max_mem: 17123M
[03/01 22:17:19 d2.utils.events]:  eta: 0:00:25  iter: 1479  total_loss: 0.4835  loss_cls: 0.08233  loss_box_reg: 0.1659  loss_mask: 0.1502  loss_rpn_cls: 0.01371  loss_rpn_loc: 0.05928    time: 1.2855  last_time: 1.4587  data_time: 0.3232  last_data_time: 0.4770   lr: 0.1  max_mem: 17123M
[03/01 22:17:47 d2.utils.events]:  eta: 0:00:00  iter: 1499  total_loss: 0.4844  loss_cls: 0.08591  loss_box_reg: 0.1799  loss_mask: 0.1479  loss_rpn_cls: 0.0106  loss_rpn_loc: 0.0585    time: 1.2859  last_time: 1.2712  data_time: 0.3329  last_data_time: 0.3321   lr: 0.1  max_mem: 17123M
[03/01 22:17:47 d2.engine.hooks]: Overall training speed: 1498 iterations in 0:32:06 (1.2859 s / it)
[03/01 22:17:47 d2.engine.hooks]: Total training time: 0:32:16 (0:00:10 on hooks)
[03/01 22:17:50 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
| background | 0            |    car     | 8021         | pedestrian | 3347         |
|            | 0            |            | 0            |            | 0            |
|            | 0            |            | 0            |            | 0            |
|            | 0            |   ignore   | 2765         |            |              |
|   total    | 14133        |            |              |            |              |
[03/01 22:17:50 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/01 22:17:50 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 22:17:50 d2.data.common]: Serializing 2919 elements to byte tensors and concatenating them all ...
[03/01 22:17:50 d2.data.common]: Serialized dataset takes 5.86 MiB
WARNING [03/01 22:17:50 d2.engine.defaults]: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[03/01 22:17:51 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from /ghome/group07/C5-W2/lr_0_1_bs_32_is_16/model_0001499.pth ...
[03/01 22:17:53 d2.evaluation.coco_evaluation]: Trying to convert 'KITTI-MOTS_val' to COCO format ...
[03/01 22:17:53 d2.data.datasets.coco]: Converting annotations of dataset 'KITTI-MOTS_val' to COCO format ...)
[03/01 22:17:58 d2.data.datasets.coco]: Converting dataset dicts into COCO format
[03/01 22:17:58 d2.data.datasets.coco]: Conversion finished, #images: 2919, #annotations: 14133
[03/01 22:17:58 d2.data.datasets.coco]: Caching COCO format annotations at '/ghome/group07/C5-W2/lr_0_1_bs_32_is_16/KITTI-MOTS_val_coco_format.json' ...
[03/01 22:18:01 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/01 22:18:01 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 22:18:01 d2.data.common]: Serializing 2919 elements to byte tensors and concatenating them all ...
[03/01 22:18:01 d2.data.common]: Serialized dataset takes 5.86 MiB
[03/01 22:18:01 d2.evaluation.evaluator]: Start inference on 2919 batches
[03/01 22:18:05 d2.evaluation.evaluator]: Inference done 11/2919. Dataloading: 0.0022 s/iter. Inference: 0.0646 s/iter. Eval: 0.0016 s/iter. Total: 0.0684 s/iter. ETA=0:03:18
[03/01 22:18:10 d2.evaluation.evaluator]: Inference done 99/2919. Dataloading: 0.0028 s/iter. Inference: 0.0526 s/iter. Eval: 0.0025 s/iter. Total: 0.0579 s/iter. ETA=0:02:43
[03/01 22:18:15 d2.evaluation.evaluator]: Inference done 186/2919. Dataloading: 0.0028 s/iter. Inference: 0.0525 s/iter. Eval: 0.0024 s/iter. Total: 0.0577 s/iter. ETA=0:02:37
[03/01 22:18:20 d2.evaluation.evaluator]: Inference done 275/2919. Dataloading: 0.0028 s/iter. Inference: 0.0522 s/iter. Eval: 0.0022 s/iter. Total: 0.0574 s/iter. ETA=0:02:31
[03/01 22:18:25 d2.evaluation.evaluator]: Inference done 363/2919. Dataloading: 0.0028 s/iter. Inference: 0.0524 s/iter. Eval: 0.0021 s/iter. Total: 0.0574 s/iter. ETA=0:02:26
[03/01 22:18:30 d2.evaluation.evaluator]: Inference done 451/2919. Dataloading: 0.0028 s/iter. Inference: 0.0523 s/iter. Eval: 0.0021 s/iter. Total: 0.0573 s/iter. ETA=0:02:21
[03/01 22:18:35 d2.evaluation.evaluator]: Inference done 539/2919. Dataloading: 0.0028 s/iter. Inference: 0.0524 s/iter. Eval: 0.0021 s/iter. Total: 0.0573 s/iter. ETA=0:02:16
[03/01 22:18:40 d2.evaluation.evaluator]: Inference done 620/2919. Dataloading: 0.0028 s/iter. Inference: 0.0529 s/iter. Eval: 0.0021 s/iter. Total: 0.0579 s/iter. ETA=0:02:13
[03/01 22:18:45 d2.evaluation.evaluator]: Inference done 707/2919. Dataloading: 0.0028 s/iter. Inference: 0.0527 s/iter. Eval: 0.0023 s/iter. Total: 0.0578 s/iter. ETA=0:02:07
[03/01 22:18:50 d2.evaluation.evaluator]: Inference done 791/2919. Dataloading: 0.0028 s/iter. Inference: 0.0529 s/iter. Eval: 0.0023 s/iter. Total: 0.0581 s/iter. ETA=0:02:03
[03/01 22:18:55 d2.evaluation.evaluator]: Inference done 878/2919. Dataloading: 0.0028 s/iter. Inference: 0.0528 s/iter. Eval: 0.0024 s/iter. Total: 0.0581 s/iter. ETA=0:01:58
[03/01 22:19:00 d2.evaluation.evaluator]: Inference done 967/2919. Dataloading: 0.0028 s/iter. Inference: 0.0527 s/iter. Eval: 0.0024 s/iter. Total: 0.0579 s/iter. ETA=0:01:53
[03/01 22:19:05 d2.evaluation.evaluator]: Inference done 1053/2919. Dataloading: 0.0028 s/iter. Inference: 0.0527 s/iter. Eval: 0.0025 s/iter. Total: 0.0580 s/iter. ETA=0:01:48
[03/01 22:19:10 d2.evaluation.evaluator]: Inference done 1136/2919. Dataloading: 0.0028 s/iter. Inference: 0.0529 s/iter. Eval: 0.0025 s/iter. Total: 0.0582 s/iter. ETA=0:01:43
[03/01 22:19:15 d2.evaluation.evaluator]: Inference done 1223/2919. Dataloading: 0.0028 s/iter. Inference: 0.0528 s/iter. Eval: 0.0025 s/iter. Total: 0.0582 s/iter. ETA=0:01:38
[03/01 22:19:20 d2.evaluation.evaluator]: Inference done 1312/2919. Dataloading: 0.0028 s/iter. Inference: 0.0526 s/iter. Eval: 0.0026 s/iter. Total: 0.0581 s/iter. ETA=0:01:33
[03/01 22:19:25 d2.evaluation.evaluator]: Inference done 1399/2919. Dataloading: 0.0028 s/iter. Inference: 0.0526 s/iter. Eval: 0.0026 s/iter. Total: 0.0580 s/iter. ETA=0:01:28
[03/01 22:19:30 d2.evaluation.evaluator]: Inference done 1485/2919. Dataloading: 0.0028 s/iter. Inference: 0.0526 s/iter. Eval: 0.0026 s/iter. Total: 0.0581 s/iter. ETA=0:01:23
[03/01 22:19:35 d2.evaluation.evaluator]: Inference done 1570/2919. Dataloading: 0.0028 s/iter. Inference: 0.0527 s/iter. Eval: 0.0026 s/iter. Total: 0.0581 s/iter. ETA=0:01:18
[03/01 22:19:40 d2.evaluation.evaluator]: Inference done 1655/2919. Dataloading: 0.0028 s/iter. Inference: 0.0526 s/iter. Eval: 0.0027 s/iter. Total: 0.0582 s/iter. ETA=0:01:13
[03/01 22:19:46 d2.evaluation.evaluator]: Inference done 1670/2919. Dataloading: 0.0028 s/iter. Inference: 0.0557 s/iter. Eval: 0.0027 s/iter. Total: 0.0613 s/iter. ETA=0:01:16
[03/01 22:19:51 d2.evaluation.evaluator]: Inference done 1758/2919. Dataloading: 0.0028 s/iter. Inference: 0.0555 s/iter. Eval: 0.0028 s/iter. Total: 0.0611 s/iter. ETA=0:01:10
[03/01 22:19:56 d2.evaluation.evaluator]: Inference done 1840/2919. Dataloading: 0.0028 s/iter. Inference: 0.0554 s/iter. Eval: 0.0028 s/iter. Total: 0.0611 s/iter. ETA=0:01:05
[03/01 22:20:01 d2.evaluation.evaluator]: Inference done 1912/2919. Dataloading: 0.0028 s/iter. Inference: 0.0554 s/iter. Eval: 0.0031 s/iter. Total: 0.0614 s/iter. ETA=0:01:01
[03/01 22:20:07 d2.evaluation.evaluator]: Inference done 1995/2919. Dataloading: 0.0028 s/iter. Inference: 0.0553 s/iter. Eval: 0.0032 s/iter. Total: 0.0614 s/iter. ETA=0:00:56
[03/01 22:20:12 d2.evaluation.evaluator]: Inference done 2075/2919. Dataloading: 0.0028 s/iter. Inference: 0.0554 s/iter. Eval: 0.0032 s/iter. Total: 0.0615 s/iter. ETA=0:00:51
[03/01 22:20:17 d2.evaluation.evaluator]: Inference done 2159/2919. Dataloading: 0.0028 s/iter. Inference: 0.0553 s/iter. Eval: 0.0032 s/iter. Total: 0.0614 s/iter. ETA=0:00:46
[03/01 22:20:22 d2.evaluation.evaluator]: Inference done 2244/2919. Dataloading: 0.0028 s/iter. Inference: 0.0552 s/iter. Eval: 0.0032 s/iter. Total: 0.0613 s/iter. ETA=0:00:41
[03/01 22:20:27 d2.evaluation.evaluator]: Inference done 2333/2919. Dataloading: 0.0028 s/iter. Inference: 0.0550 s/iter. Eval: 0.0032 s/iter. Total: 0.0611 s/iter. ETA=0:00:35
[03/01 22:20:32 d2.evaluation.evaluator]: Inference done 2412/2919. Dataloading: 0.0028 s/iter. Inference: 0.0550 s/iter. Eval: 0.0033 s/iter. Total: 0.0612 s/iter. ETA=0:00:31
[03/01 22:20:37 d2.evaluation.evaluator]: Inference done 2488/2919. Dataloading: 0.0028 s/iter. Inference: 0.0550 s/iter. Eval: 0.0035 s/iter. Total: 0.0614 s/iter. ETA=0:00:26
[03/01 22:20:42 d2.evaluation.evaluator]: Inference done 2568/2919. Dataloading: 0.0028 s/iter. Inference: 0.0549 s/iter. Eval: 0.0036 s/iter. Total: 0.0614 s/iter. ETA=0:00:21
[03/01 22:20:47 d2.evaluation.evaluator]: Inference done 2649/2919. Dataloading: 0.0029 s/iter. Inference: 0.0549 s/iter. Eval: 0.0036 s/iter. Total: 0.0615 s/iter. ETA=0:00:16
[03/01 22:20:52 d2.evaluation.evaluator]: Inference done 2732/2919. Dataloading: 0.0029 s/iter. Inference: 0.0549 s/iter. Eval: 0.0036 s/iter. Total: 0.0614 s/iter. ETA=0:00:11
[03/01 22:20:57 d2.evaluation.evaluator]: Inference done 2809/2919. Dataloading: 0.0029 s/iter. Inference: 0.0550 s/iter. Eval: 0.0036 s/iter. Total: 0.0615 s/iter. ETA=0:00:06
[03/01 22:21:02 d2.evaluation.evaluator]: Inference done 2890/2919. Dataloading: 0.0029 s/iter. Inference: 0.0550 s/iter. Eval: 0.0036 s/iter. Total: 0.0615 s/iter. ETA=0:00:01
[03/01 22:21:04 d2.evaluation.evaluator]: Total inference time: 0:02:59.212052 (0.061500 s / iter per device, on 1 devices)
[03/01 22:21:04 d2.evaluation.evaluator]: Total inference pure compute time: 0:02:39 (0.054898 s / iter per device, on 1 devices)
[03/01 22:21:04 d2.evaluation.coco_evaluation]: Preparing results for COCO format ...
[03/01 22:21:04 d2.evaluation.coco_evaluation]: Saving results to /ghome/group07/C5-W2/lr_0_1_bs_32_is_16/coco_instances_results.json
[03/01 22:21:04 d2.evaluation.coco_evaluation]: Evaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
[03/01 22:21:04 d2.evaluation.fast_eval_api]: Evaluate annotation type *bbox*
[03/01 22:21:05 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 0.96 seconds.
[03/01 22:21:05 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[03/01 22:21:05 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.09 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.375
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.554
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.431
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.246
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.442
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.467
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.152
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.429
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.432
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.289
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.493
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.565
[03/01 22:21:05 d2.evaluation.coco_evaluation]: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 37.495 | 55.417 | 43.062 | 24.575 | 44.218 | 46.749 |
[03/01 22:21:05 d2.evaluation.coco_evaluation]: Per-category bbox AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| background | nan  | car        | 62.848 | pedestrian | 45.750 |
|            | nan  |            | nan    |            | nan    |
|            | nan  |            | nan    |            | nan    |
|            | nan  | ignore     | 3.888  |            |        |
Loading and preparing results...
DONE (t=0.13s)
creating index...
index created!
[03/01 22:21:05 d2.evaluation.fast_eval_api]: Evaluate annotation type *segm*
[03/01 22:21:06 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 0.99 seconds.
[03/01 22:21:06 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[03/01 22:21:06 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.07 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.345
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.532
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.378
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.193
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.418
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.499
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.138
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.396
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.398
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.251
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.457
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.548
[03/01 22:21:06 d2.evaluation.coco_evaluation]: Evaluation results for segm: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 34.468 | 53.228 | 37.762 | 19.317 | 41.813 | 49.861 |
[03/01 22:21:06 d2.evaluation.coco_evaluation]: Per-category segm AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| background | nan  | car        | 63.640 | pedestrian | 36.456 |
|            | nan  |            | nan    |            | nan    |
|            | nan  |            | nan    |            | nan    |
|            | nan  | ignore     | 3.307  |            |        |
OrderedDict([('bbox', {'AP': 37.49503051151632, 'AP50': 55.41687448440371, 'AP75': 43.061632864837975, 'APs': 24.575416652892248, 'APm': 44.21847606115869, 'APl': 46.74886831448211, 'AP-background': nan, 'AP-car': 62.84761014581333, 'AP-pedestrian': 45.74970295629311, 'AP-': nan, 'AP-ignore': 3.8877784324425284}), ('segm', {'AP': 34.467775241103034, 'AP50': 53.227510228565244, 'AP75': 37.76171525377099, 'APs': 19.317362207387827, 'APm': 41.813478409823226, 'APl': 49.86133574114432, 'AP-background': nan, 'AP-car': 63.63968093956125, 'AP-pedestrian': 36.45632272835828, 'AP-': nan, 'AP-ignore': 3.307322055389587})])

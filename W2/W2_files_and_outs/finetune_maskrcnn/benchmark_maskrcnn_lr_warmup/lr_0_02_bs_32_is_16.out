1
The device we will be working on is: cuda
[03/01 18:58:16 d2.engine.defaults]: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=12, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=44, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 11, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[03/01 18:58:20 d2.data.build]: Removed 0 images with no usable annotations. 5007 images left.
[03/01 18:58:20 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
| background | 0            |    car     | 18822        | pedestrian | 8065         |
|            | 0            |            | 0            |            | 0            |
|            | 0            |            | 0            |            | 0            |
|            | 0            |   ignore   | 4977         |            |              |
|   total    | 31864        |            |              |            |              |
[03/01 18:58:20 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[03/01 18:58:20 d2.data.build]: Using training sampler TrainingSampler
[03/01 18:58:20 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 18:58:20 d2.data.common]: Serializing 5007 elements to byte tensors and concatenating them all ...
[03/01 18:58:20 d2.data.common]: Serialized dataset takes 13.56 MiB
[03/01 18:58:20 d2.data.build]: Making batched data loader with batch_size=16
WARNING [03/01 18:58:20 d2.solver.build]: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/01 18:58:20 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl ...
[03/01 18:58:20 d2.engine.train_loop]: Starting training from iteration 0
[03/01 18:58:56 d2.utils.events]:  eta: 0:30:09  iter: 19  total_loss: 3.216  loss_cls: 1.803  loss_box_reg: 0.4633  loss_mask: 0.6644  loss_rpn_cls: 0.1407  loss_rpn_loc: 0.07704    time: 1.3337  last_time: 1.0603  data_time: 0.6387  last_data_time: 0.2592   lr: 0.00039962  max_mem: 15847M
[03/01 18:59:28 d2.utils.events]:  eta: 0:29:21  iter: 39  total_loss: 1.518  loss_cls: 0.5019  loss_box_reg: 0.4207  loss_mask: 0.4586  loss_rpn_cls: 0.06813  loss_rpn_loc: 0.0784    time: 1.2947  last_time: 1.1870  data_time: 0.3561  last_data_time: 0.2832   lr: 0.00079922  max_mem: 15847M
[03/01 18:59:59 d2.utils.events]:  eta: 0:29:11  iter: 59  total_loss: 1.139  loss_cls: 0.2937  loss_box_reg: 0.3912  loss_mask: 0.3195  loss_rpn_cls: 0.0436  loss_rpn_loc: 0.06662    time: 1.3718  last_time: 1.2024  data_time: 0.4078  last_data_time: 0.2764   lr: 0.0011988  max_mem: 16204M
[03/01 19:00:23 d2.utils.events]:  eta: 0:28:55  iter: 79  total_loss: 0.9617  loss_cls: 0.2474  loss_box_reg: 0.3061  loss_mask: 0.2852  loss_rpn_cls: 0.0418  loss_rpn_loc: 0.07256    time: 1.3362  last_time: 1.4334  data_time: 0.3237  last_data_time: 0.5262   lr: 0.0015984  max_mem: 16204M
[03/01 19:00:48 d2.utils.events]:  eta: 0:28:25  iter: 99  total_loss: 0.8131  loss_cls: 0.1784  loss_box_reg: 0.2505  loss_mask: 0.2584  loss_rpn_cls: 0.0426  loss_rpn_loc: 0.07163    time: 1.3121  last_time: 1.2019  data_time: 0.3209  last_data_time: 0.2946   lr: 0.001998  max_mem: 16204M
[03/01 19:01:12 d2.utils.events]:  eta: 0:28:01  iter: 119  total_loss: 0.7533  loss_cls: 0.1565  loss_box_reg: 0.2409  loss_mask: 0.2483  loss_rpn_cls: 0.03774  loss_rpn_loc: 0.08016    time: 1.2978  last_time: 1.2601  data_time: 0.3415  last_data_time: 0.3712   lr: 0.0023976  max_mem: 16204M
[03/01 19:01:37 d2.utils.events]:  eta: 0:27:37  iter: 139  total_loss: 0.7108  loss_cls: 0.14  loss_box_reg: 0.2196  loss_mask: 0.2388  loss_rpn_cls: 0.03133  loss_rpn_loc: 0.07449    time: 1.2891  last_time: 1.2041  data_time: 0.3411  last_data_time: 0.2813   lr: 0.0027972  max_mem: 16204M
[03/01 19:02:01 d2.utils.events]:  eta: 0:27:03  iter: 159  total_loss: 0.6424  loss_cls: 0.1372  loss_box_reg: 0.1911  loss_mask: 0.2266  loss_rpn_cls: 0.02706  loss_rpn_loc: 0.06124    time: 1.2769  last_time: 1.2080  data_time: 0.3057  last_data_time: 0.3161   lr: 0.0031968  max_mem: 16204M
[03/01 19:02:27 d2.utils.events]:  eta: 0:26:53  iter: 179  total_loss: 0.7006  loss_cls: 0.1392  loss_box_reg: 0.2143  loss_mask: 0.2349  loss_rpn_cls: 0.02799  loss_rpn_loc: 0.07669    time: 1.2784  last_time: 1.5008  data_time: 0.3768  last_data_time: 0.5485   lr: 0.0035964  max_mem: 16204M
[03/01 19:02:51 d2.utils.events]:  eta: 0:26:29  iter: 199  total_loss: 0.6669  loss_cls: 0.134  loss_box_reg: 0.2036  loss_mask: 0.2231  loss_rpn_cls: 0.03026  loss_rpn_loc: 0.06811    time: 1.2740  last_time: 1.2272  data_time: 0.3278  last_data_time: 0.2945   lr: 0.003996  max_mem: 16204M
[03/01 19:03:15 d2.utils.events]:  eta: 0:26:03  iter: 219  total_loss: 0.6532  loss_cls: 0.1292  loss_box_reg: 0.1943  loss_mask: 0.2259  loss_rpn_cls: 0.02477  loss_rpn_loc: 0.06604    time: 1.2671  last_time: 1.2566  data_time: 0.3041  last_data_time: 0.3162   lr: 0.0043956  max_mem: 16204M
[03/01 19:03:40 d2.utils.events]:  eta: 0:25:37  iter: 239  total_loss: 0.652  loss_cls: 0.1339  loss_box_reg: 0.1946  loss_mask: 0.2156  loss_rpn_cls: 0.02853  loss_rpn_loc: 0.07119    time: 1.2626  last_time: 1.2064  data_time: 0.3143  last_data_time: 0.2848   lr: 0.0047952  max_mem: 16204M
[03/01 19:04:05 d2.utils.events]:  eta: 0:25:14  iter: 259  total_loss: 0.6416  loss_cls: 0.1338  loss_box_reg: 0.1998  loss_mask: 0.2135  loss_rpn_cls: 0.02681  loss_rpn_loc: 0.06507    time: 1.2632  last_time: 1.2933  data_time: 0.3605  last_data_time: 0.3358   lr: 0.0051948  max_mem: 16204M
[03/01 19:04:29 d2.utils.events]:  eta: 0:24:47  iter: 279  total_loss: 0.6397  loss_cls: 0.1283  loss_box_reg: 0.1905  loss_mask: 0.2157  loss_rpn_cls: 0.02455  loss_rpn_loc: 0.07043    time: 1.2591  last_time: 1.1991  data_time: 0.3111  last_data_time: 0.3250   lr: 0.0055944  max_mem: 16204M
[03/01 19:04:54 d2.utils.events]:  eta: 0:24:24  iter: 299  total_loss: 0.6283  loss_cls: 0.1329  loss_box_reg: 0.2038  loss_mask: 0.2035  loss_rpn_cls: 0.02171  loss_rpn_loc: 0.06803    time: 1.2576  last_time: 1.2240  data_time: 0.3152  last_data_time: 0.3023   lr: 0.005994  max_mem: 16204M
[03/01 19:05:19 d2.utils.events]:  eta: 0:24:01  iter: 319  total_loss: 0.6058  loss_cls: 0.1233  loss_box_reg: 0.1956  loss_mask: 0.2013  loss_rpn_cls: 0.02391  loss_rpn_loc: 0.06928    time: 1.2567  last_time: 1.1979  data_time: 0.3225  last_data_time: 0.2865   lr: 0.0063936  max_mem: 16204M
[03/01 19:05:43 d2.utils.events]:  eta: 0:23:35  iter: 339  total_loss: 0.5884  loss_cls: 0.1166  loss_box_reg: 0.1834  loss_mask: 0.1968  loss_rpn_cls: 0.02335  loss_rpn_loc: 0.06951    time: 1.2542  last_time: 1.1942  data_time: 0.3105  last_data_time: 0.2953   lr: 0.0067932  max_mem: 16204M
[03/01 19:06:08 d2.utils.events]:  eta: 0:23:12  iter: 359  total_loss: 0.6181  loss_cls: 0.126  loss_box_reg: 0.1964  loss_mask: 0.1942  loss_rpn_cls: 0.02083  loss_rpn_loc: 0.06318    time: 1.2544  last_time: 1.2994  data_time: 0.3286  last_data_time: 0.3991   lr: 0.0071928  max_mem: 16204M
[03/01 19:06:33 d2.utils.events]:  eta: 0:22:49  iter: 379  total_loss: 0.5927  loss_cls: 0.1247  loss_box_reg: 0.1933  loss_mask: 0.1904  loss_rpn_cls: 0.02142  loss_rpn_loc: 0.05721    time: 1.2540  last_time: 1.1966  data_time: 0.3210  last_data_time: 0.2669   lr: 0.0075924  max_mem: 16204M
[03/01 19:06:58 d2.utils.events]:  eta: 0:22:25  iter: 399  total_loss: 0.5986  loss_cls: 0.1232  loss_box_reg: 0.1961  loss_mask: 0.1882  loss_rpn_cls: 0.02171  loss_rpn_loc: 0.06426    time: 1.2529  last_time: 1.2558  data_time: 0.3062  last_data_time: 0.3404   lr: 0.007992  max_mem: 16204M
[03/01 19:07:23 d2.utils.events]:  eta: 0:22:02  iter: 419  total_loss: 0.5678  loss_cls: 0.1161  loss_box_reg: 0.1864  loss_mask: 0.185  loss_rpn_cls: 0.02119  loss_rpn_loc: 0.06217    time: 1.2532  last_time: 1.1365  data_time: 0.3363  last_data_time: 0.2539   lr: 0.0083916  max_mem: 16276M
[03/01 19:07:48 d2.utils.events]:  eta: 0:21:38  iter: 439  total_loss: 0.5775  loss_cls: 0.1131  loss_box_reg: 0.1855  loss_mask: 0.186  loss_rpn_cls: 0.01802  loss_rpn_loc: 0.06957    time: 1.2529  last_time: 1.2037  data_time: 0.3270  last_data_time: 0.2750   lr: 0.0087912  max_mem: 16678M
[03/01 19:08:12 d2.utils.events]:  eta: 0:21:15  iter: 459  total_loss: 0.5807  loss_cls: 0.1181  loss_box_reg: 0.1954  loss_mask: 0.1897  loss_rpn_cls: 0.01763  loss_rpn_loc: 0.0672    time: 1.2527  last_time: 1.2326  data_time: 0.3177  last_data_time: 0.3245   lr: 0.0091908  max_mem: 16678M
[03/01 19:08:37 d2.utils.events]:  eta: 0:20:51  iter: 479  total_loss: 0.5857  loss_cls: 0.1128  loss_box_reg: 0.187  loss_mask: 0.1916  loss_rpn_cls: 0.0182  loss_rpn_loc: 0.05963    time: 1.2513  last_time: 1.2085  data_time: 0.3007  last_data_time: 0.2995   lr: 0.0095904  max_mem: 16678M
[03/01 19:09:03 d2.utils.events]:  eta: 0:20:27  iter: 499  total_loss: 0.5692  loss_cls: 0.1169  loss_box_reg: 0.1847  loss_mask: 0.1808  loss_rpn_cls: 0.01853  loss_rpn_loc: 0.06388    time: 1.2521  last_time: 1.2689  data_time: 0.3318  last_data_time: 0.3209   lr: 0.00999  max_mem: 16750M
[03/01 19:09:28 d2.utils.events]:  eta: 0:20:02  iter: 519  total_loss: 0.5737  loss_cls: 0.1072  loss_box_reg: 0.1836  loss_mask: 0.1865  loss_rpn_cls: 0.0207  loss_rpn_loc: 0.06063    time: 1.2521  last_time: 1.3090  data_time: 0.3214  last_data_time: 0.3413   lr: 0.01039  max_mem: 16750M
[03/01 19:09:53 d2.utils.events]:  eta: 0:19:38  iter: 539  total_loss: 0.563  loss_cls: 0.1119  loss_box_reg: 0.1903  loss_mask: 0.1855  loss_rpn_cls: 0.01737  loss_rpn_loc: 0.0616    time: 1.2516  last_time: 1.2401  data_time: 0.3038  last_data_time: 0.3034   lr: 0.010789  max_mem: 16750M
[03/01 19:10:18 d2.utils.events]:  eta: 0:19:14  iter: 559  total_loss: 0.5779  loss_cls: 0.1093  loss_box_reg: 0.1972  loss_mask: 0.1841  loss_rpn_cls: 0.02062  loss_rpn_loc: 0.06764    time: 1.2517  last_time: 1.3233  data_time: 0.3263  last_data_time: 0.3309   lr: 0.011189  max_mem: 16903M
[03/01 19:10:43 d2.utils.events]:  eta: 0:18:50  iter: 579  total_loss: 0.5664  loss_cls: 0.1073  loss_box_reg: 0.1863  loss_mask: 0.1872  loss_rpn_cls: 0.01854  loss_rpn_loc: 0.06628    time: 1.2515  last_time: 1.2656  data_time: 0.3270  last_data_time: 0.3267   lr: 0.011588  max_mem: 16903M
[03/01 19:11:08 d2.utils.events]:  eta: 0:18:26  iter: 599  total_loss: 0.5666  loss_cls: 0.1127  loss_box_reg: 0.1895  loss_mask: 0.1819  loss_rpn_cls: 0.0199  loss_rpn_loc: 0.05676    time: 1.2520  last_time: 1.2425  data_time: 0.3356  last_data_time: 0.2986   lr: 0.011988  max_mem: 16903M
[03/01 19:11:41 d2.utils.events]:  eta: 0:18:03  iter: 619  total_loss: 0.592  loss_cls: 0.1149  loss_box_reg: 0.2008  loss_mask: 0.1765  loss_rpn_cls: 0.01818  loss_rpn_loc: 0.06499    time: 1.2641  last_time: 1.5663  data_time: 0.5623  last_data_time: 0.4784   lr: 0.012388  max_mem: 16903M
[03/01 19:12:08 d2.utils.events]:  eta: 0:17:40  iter: 639  total_loss: 0.5327  loss_cls: 0.09836  loss_box_reg: 0.1716  loss_mask: 0.1789  loss_rpn_cls: 0.01581  loss_rpn_loc: 0.06818    time: 1.2669  last_time: 1.2390  data_time: 0.3974  last_data_time: 0.3204   lr: 0.012787  max_mem: 16903M
[03/01 19:12:33 d2.utils.events]:  eta: 0:17:15  iter: 659  total_loss: 0.4809  loss_cls: 0.09208  loss_box_reg: 0.1583  loss_mask: 0.1628  loss_rpn_cls: 0.0141  loss_rpn_loc: 0.05805    time: 1.2665  last_time: 1.3021  data_time: 0.3224  last_data_time: 0.3402   lr: 0.013187  max_mem: 16903M
[03/01 19:12:58 d2.utils.events]:  eta: 0:16:51  iter: 679  total_loss: 0.5468  loss_cls: 0.1035  loss_box_reg: 0.1859  loss_mask: 0.1714  loss_rpn_cls: 0.0139  loss_rpn_loc: 0.05809    time: 1.2666  last_time: 1.4227  data_time: 0.3354  last_data_time: 0.4483   lr: 0.013586  max_mem: 16903M
[03/01 19:13:24 d2.utils.events]:  eta: 0:16:27  iter: 699  total_loss: 0.533  loss_cls: 0.11  loss_box_reg: 0.1745  loss_mask: 0.1699  loss_rpn_cls: 0.01611  loss_rpn_loc: 0.06453    time: 1.2664  last_time: 1.2413  data_time: 0.3189  last_data_time: 0.3162   lr: 0.013986  max_mem: 16903M
[03/01 19:13:49 d2.utils.events]:  eta: 0:16:03  iter: 719  total_loss: 0.5243  loss_cls: 0.1023  loss_box_reg: 0.1799  loss_mask: 0.1685  loss_rpn_cls: 0.01583  loss_rpn_loc: 0.05256    time: 1.2668  last_time: 1.2380  data_time: 0.3418  last_data_time: 0.3263   lr: 0.014386  max_mem: 16903M
[03/01 19:14:15 d2.utils.events]:  eta: 0:15:39  iter: 739  total_loss: 0.5127  loss_cls: 0.1023  loss_box_reg: 0.1736  loss_mask: 0.1721  loss_rpn_cls: 0.01456  loss_rpn_loc: 0.053    time: 1.2667  last_time: 1.2538  data_time: 0.3378  last_data_time: 0.3300   lr: 0.014785  max_mem: 16903M
[03/01 19:14:40 d2.utils.events]:  eta: 0:15:15  iter: 759  total_loss: 0.5353  loss_cls: 0.1017  loss_box_reg: 0.1833  loss_mask: 0.1742  loss_rpn_cls: 0.01574  loss_rpn_loc: 0.05819    time: 1.2663  last_time: 1.2942  data_time: 0.3136  last_data_time: 0.3335   lr: 0.015185  max_mem: 16903M
[03/01 19:15:05 d2.utils.events]:  eta: 0:14:50  iter: 779  total_loss: 0.5258  loss_cls: 0.1032  loss_box_reg: 0.1837  loss_mask: 0.1732  loss_rpn_cls: 0.01277  loss_rpn_loc: 0.05    time: 1.2662  last_time: 1.2237  data_time: 0.3095  last_data_time: 0.2970   lr: 0.015584  max_mem: 16903M
[03/01 19:15:30 d2.utils.events]:  eta: 0:14:26  iter: 799  total_loss: 0.5169  loss_cls: 0.1026  loss_box_reg: 0.179  loss_mask: 0.173  loss_rpn_cls: 0.01509  loss_rpn_loc: 0.05254    time: 1.2663  last_time: 1.3227  data_time: 0.3331  last_data_time: 0.3828   lr: 0.015984  max_mem: 16903M
[03/01 19:15:56 d2.utils.events]:  eta: 0:14:02  iter: 819  total_loss: 0.5327  loss_cls: 0.0977  loss_box_reg: 0.1905  loss_mask: 0.1663  loss_rpn_cls: 0.01531  loss_rpn_loc: 0.06305    time: 1.2671  last_time: 1.2673  data_time: 0.3478  last_data_time: 0.3227   lr: 0.016384  max_mem: 16903M
[03/01 19:16:21 d2.utils.events]:  eta: 0:13:37  iter: 839  total_loss: 0.5244  loss_cls: 0.09469  loss_box_reg: 0.1807  loss_mask: 0.1708  loss_rpn_cls: 0.0147  loss_rpn_loc: 0.05897    time: 1.2670  last_time: 1.2833  data_time: 0.3207  last_data_time: 0.3517   lr: 0.016783  max_mem: 16903M
[03/01 19:16:47 d2.utils.events]:  eta: 0:13:13  iter: 859  total_loss: 0.5356  loss_cls: 0.09811  loss_box_reg: 0.1874  loss_mask: 0.1737  loss_rpn_cls: 0.01431  loss_rpn_loc: 0.05935    time: 1.2668  last_time: 1.2981  data_time: 0.3246  last_data_time: 0.3629   lr: 0.017183  max_mem: 16903M
[03/01 19:17:12 d2.utils.events]:  eta: 0:12:48  iter: 879  total_loss: 0.5104  loss_cls: 0.0956  loss_box_reg: 0.1732  loss_mask: 0.1603  loss_rpn_cls: 0.01624  loss_rpn_loc: 0.05486    time: 1.2668  last_time: 1.2905  data_time: 0.3219  last_data_time: 0.3279   lr: 0.017582  max_mem: 16903M
[03/01 19:17:37 d2.utils.events]:  eta: 0:12:24  iter: 899  total_loss: 0.4804  loss_cls: 0.09198  loss_box_reg: 0.1643  loss_mask: 0.164  loss_rpn_cls: 0.01416  loss_rpn_loc: 0.05008    time: 1.2661  last_time: 1.2870  data_time: 0.2965  last_data_time: 0.3077   lr: 0.017982  max_mem: 16903M
[03/01 19:18:02 d2.utils.events]:  eta: 0:11:59  iter: 919  total_loss: 0.4906  loss_cls: 0.09189  loss_box_reg: 0.1638  loss_mask: 0.16  loss_rpn_cls: 0.01426  loss_rpn_loc: 0.05583    time: 1.2657  last_time: 1.3205  data_time: 0.3148  last_data_time: 0.3420   lr: 0.018382  max_mem: 16903M
[03/01 19:18:27 d2.utils.events]:  eta: 0:11:35  iter: 939  total_loss: 0.5287  loss_cls: 0.1004  loss_box_reg: 0.1765  loss_mask: 0.1661  loss_rpn_cls: 0.01404  loss_rpn_loc: 0.06554    time: 1.2662  last_time: 1.2934  data_time: 0.3332  last_data_time: 0.3662   lr: 0.018781  max_mem: 16903M
[03/01 19:18:53 d2.utils.events]:  eta: 0:11:10  iter: 959  total_loss: 0.4891  loss_cls: 0.092  loss_box_reg: 0.1738  loss_mask: 0.1594  loss_rpn_cls: 0.01139  loss_rpn_loc: 0.05581    time: 1.2661  last_time: 1.2130  data_time: 0.3096  last_data_time: 0.2768   lr: 0.019181  max_mem: 16903M
[03/01 19:19:18 d2.utils.events]:  eta: 0:10:46  iter: 979  total_loss: 0.4885  loss_cls: 0.09269  loss_box_reg: 0.1701  loss_mask: 0.1586  loss_rpn_cls: 0.01274  loss_rpn_loc: 0.05448    time: 1.2664  last_time: 1.3955  data_time: 0.3190  last_data_time: 0.4108   lr: 0.01958  max_mem: 16995M
[03/01 19:19:45 d2.utils.events]:  eta: 0:10:21  iter: 999  total_loss: 0.5131  loss_cls: 0.09679  loss_box_reg: 0.1783  loss_mask: 0.1619  loss_rpn_cls: 0.01316  loss_rpn_loc: 0.06061    time: 1.2668  last_time: 1.3812  data_time: 0.3191  last_data_time: 0.4174   lr: 0.01998  max_mem: 16995M
[03/01 19:20:10 d2.utils.events]:  eta: 0:09:57  iter: 1019  total_loss: 0.4804  loss_cls: 0.08755  loss_box_reg: 0.1695  loss_mask: 0.1528  loss_rpn_cls: 0.01398  loss_rpn_loc: 0.05382    time: 1.2670  last_time: 1.3255  data_time: 0.3345  last_data_time: 0.3649   lr: 0.02  max_mem: 16995M
[03/01 19:20:36 d2.utils.events]:  eta: 0:09:32  iter: 1039  total_loss: 0.4821  loss_cls: 0.08937  loss_box_reg: 0.1644  loss_mask: 0.156  loss_rpn_cls: 0.01352  loss_rpn_loc: 0.05714    time: 1.2672  last_time: 1.2143  data_time: 0.3273  last_data_time: 0.2869   lr: 0.02  max_mem: 16995M
[03/01 19:21:02 d2.utils.events]:  eta: 0:09:08  iter: 1059  total_loss: 0.4728  loss_cls: 0.08636  loss_box_reg: 0.1646  loss_mask: 0.161  loss_rpn_cls: 0.01052  loss_rpn_loc: 0.0536    time: 1.2676  last_time: 1.3522  data_time: 0.3281  last_data_time: 0.3669   lr: 0.02  max_mem: 16995M
[03/01 19:21:27 d2.utils.events]:  eta: 0:08:43  iter: 1079  total_loss: 0.4872  loss_cls: 0.08525  loss_box_reg: 0.1638  loss_mask: 0.1579  loss_rpn_cls: 0.01083  loss_rpn_loc: 0.05356    time: 1.2676  last_time: 1.3319  data_time: 0.3136  last_data_time: 0.3523   lr: 0.02  max_mem: 16995M
[03/01 19:21:53 d2.utils.events]:  eta: 0:08:19  iter: 1099  total_loss: 0.527  loss_cls: 0.09597  loss_box_reg: 0.1839  loss_mask: 0.1639  loss_rpn_cls: 0.01343  loss_rpn_loc: 0.06547    time: 1.2684  last_time: 1.2350  data_time: 0.3476  last_data_time: 0.2992   lr: 0.02  max_mem: 16995M
[03/01 19:22:19 d2.utils.events]:  eta: 0:07:54  iter: 1119  total_loss: 0.4794  loss_cls: 0.08573  loss_box_reg: 0.1705  loss_mask: 0.1642  loss_rpn_cls: 0.01239  loss_rpn_loc: 0.05807    time: 1.2684  last_time: 1.3111  data_time: 0.3194  last_data_time: 0.3377   lr: 0.02  max_mem: 16995M
[03/01 19:22:53 d2.utils.events]:  eta: 0:07:30  iter: 1139  total_loss: 0.4744  loss_cls: 0.08803  loss_box_reg: 0.1674  loss_mask: 0.1586  loss_rpn_cls: 0.01303  loss_rpn_loc: 0.05523    time: 1.2758  last_time: 1.2140  data_time: 0.4129  last_data_time: 0.2611   lr: 0.02  max_mem: 16995M
[03/01 19:23:18 d2.utils.events]:  eta: 0:07:06  iter: 1159  total_loss: 0.4846  loss_cls: 0.08568  loss_box_reg: 0.1767  loss_mask: 0.1603  loss_rpn_cls: 0.0116  loss_rpn_loc: 0.0474    time: 1.2757  last_time: 1.3479  data_time: 0.3227  last_data_time: 0.3796   lr: 0.02  max_mem: 16995M
[03/01 19:23:43 d2.utils.events]:  eta: 0:06:40  iter: 1179  total_loss: 0.4694  loss_cls: 0.08483  loss_box_reg: 0.1609  loss_mask: 0.1561  loss_rpn_cls: 0.01181  loss_rpn_loc: 0.05562    time: 1.2754  last_time: 1.2933  data_time: 0.3194  last_data_time: 0.3158   lr: 0.02  max_mem: 16995M
[03/01 19:24:09 d2.utils.events]:  eta: 0:06:16  iter: 1199  total_loss: 0.4535  loss_cls: 0.07581  loss_box_reg: 0.1555  loss_mask: 0.1522  loss_rpn_cls: 0.01193  loss_rpn_loc: 0.05363    time: 1.2754  last_time: 1.2166  data_time: 0.3112  last_data_time: 0.2865   lr: 0.02  max_mem: 16995M
[03/01 19:24:35 d2.utils.events]:  eta: 0:05:51  iter: 1219  total_loss: 0.4992  loss_cls: 0.08308  loss_box_reg: 0.1732  loss_mask: 0.1552  loss_rpn_cls: 0.01244  loss_rpn_loc: 0.05582    time: 1.2757  last_time: 1.3066  data_time: 0.3243  last_data_time: 0.3479   lr: 0.02  max_mem: 16995M
[03/01 19:25:00 d2.utils.events]:  eta: 0:05:26  iter: 1239  total_loss: 0.4831  loss_cls: 0.089  loss_box_reg: 0.1692  loss_mask: 0.1491  loss_rpn_cls: 0.01186  loss_rpn_loc: 0.05691    time: 1.2757  last_time: 1.2518  data_time: 0.3027  last_data_time: 0.2941   lr: 0.02  max_mem: 16995M
[03/01 19:25:26 d2.utils.events]:  eta: 0:05:02  iter: 1259  total_loss: 0.4614  loss_cls: 0.08448  loss_box_reg: 0.1599  loss_mask: 0.1537  loss_rpn_cls: 0.01123  loss_rpn_loc: 0.04721    time: 1.2759  last_time: 1.2796  data_time: 0.3301  last_data_time: 0.3318   lr: 0.02  max_mem: 16995M
[03/01 19:25:52 d2.utils.events]:  eta: 0:04:37  iter: 1279  total_loss: 0.4564  loss_cls: 0.08215  loss_box_reg: 0.1636  loss_mask: 0.1529  loss_rpn_cls: 0.008921  loss_rpn_loc: 0.04977    time: 1.2764  last_time: 1.2830  data_time: 0.3313  last_data_time: 0.3084   lr: 0.02  max_mem: 16995M
[03/01 19:26:18 d2.utils.events]:  eta: 0:04:12  iter: 1299  total_loss: 0.4383  loss_cls: 0.07278  loss_box_reg: 0.1498  loss_mask: 0.1457  loss_rpn_cls: 0.009325  loss_rpn_loc: 0.05674    time: 1.2765  last_time: 1.3475  data_time: 0.3225  last_data_time: 0.4150   lr: 0.02  max_mem: 17087M
[03/01 19:26:43 d2.utils.events]:  eta: 0:03:47  iter: 1319  total_loss: 0.4048  loss_cls: 0.06956  loss_box_reg: 0.1426  loss_mask: 0.1487  loss_rpn_cls: 0.009092  loss_rpn_loc: 0.04006    time: 1.2764  last_time: 1.2857  data_time: 0.3265  last_data_time: 0.3238   lr: 0.02  max_mem: 17087M
[03/01 19:27:09 d2.utils.events]:  eta: 0:03:21  iter: 1339  total_loss: 0.4508  loss_cls: 0.08103  loss_box_reg: 0.1592  loss_mask: 0.1531  loss_rpn_cls: 0.008639  loss_rpn_loc: 0.04744    time: 1.2766  last_time: 1.2790  data_time: 0.3283  last_data_time: 0.3243   lr: 0.02  max_mem: 17087M
[03/01 19:27:34 d2.utils.events]:  eta: 0:02:56  iter: 1359  total_loss: 0.4475  loss_cls: 0.0784  loss_box_reg: 0.1609  loss_mask: 0.151  loss_rpn_cls: 0.01019  loss_rpn_loc: 0.05028    time: 1.2764  last_time: 1.2893  data_time: 0.3106  last_data_time: 0.3507   lr: 0.02  max_mem: 17087M
[03/01 19:28:00 d2.utils.events]:  eta: 0:02:31  iter: 1379  total_loss: 0.4432  loss_cls: 0.08133  loss_box_reg: 0.1651  loss_mask: 0.1479  loss_rpn_cls: 0.009801  loss_rpn_loc: 0.04752    time: 1.2763  last_time: 1.3083  data_time: 0.2981  last_data_time: 0.3082   lr: 0.02  max_mem: 17087M
[03/01 19:28:26 d2.utils.events]:  eta: 0:02:06  iter: 1399  total_loss: 0.4571  loss_cls: 0.07781  loss_box_reg: 0.1605  loss_mask: 0.1471  loss_rpn_cls: 0.00981  loss_rpn_loc: 0.04771    time: 1.2765  last_time: 1.2132  data_time: 0.3085  last_data_time: 0.2621   lr: 0.02  max_mem: 17087M
[03/01 19:28:51 d2.utils.events]:  eta: 0:01:41  iter: 1419  total_loss: 0.4416  loss_cls: 0.07682  loss_box_reg: 0.1594  loss_mask: 0.148  loss_rpn_cls: 0.008911  loss_rpn_loc: 0.05099    time: 1.2763  last_time: 1.3443  data_time: 0.3015  last_data_time: 0.3264   lr: 0.02  max_mem: 17087M
[03/01 19:29:17 d2.utils.events]:  eta: 0:01:15  iter: 1439  total_loss: 0.4428  loss_cls: 0.08294  loss_box_reg: 0.159  loss_mask: 0.1439  loss_rpn_cls: 0.01046  loss_rpn_loc: 0.04936    time: 1.2768  last_time: 1.3552  data_time: 0.3392  last_data_time: 0.3570   lr: 0.02  max_mem: 17087M
[03/01 19:29:43 d2.utils.events]:  eta: 0:00:50  iter: 1459  total_loss: 0.4575  loss_cls: 0.08648  loss_box_reg: 0.1679  loss_mask: 0.1489  loss_rpn_cls: 0.01027  loss_rpn_loc: 0.05842    time: 1.2770  last_time: 1.3521  data_time: 0.3160  last_data_time: 0.3306   lr: 0.02  max_mem: 17087M
[03/01 19:30:09 d2.utils.events]:  eta: 0:00:25  iter: 1479  total_loss: 0.4278  loss_cls: 0.07939  loss_box_reg: 0.1519  loss_mask: 0.1411  loss_rpn_cls: 0.0112  loss_rpn_loc: 0.04613    time: 1.2773  last_time: 1.2658  data_time: 0.3275  last_data_time: 0.3280   lr: 0.02  max_mem: 17087M
[03/01 19:30:36 d2.utils.events]:  eta: 0:00:00  iter: 1499  total_loss: 0.4287  loss_cls: 0.07203  loss_box_reg: 0.1485  loss_mask: 0.1424  loss_rpn_cls: 0.009166  loss_rpn_loc: 0.04319    time: 1.2769  last_time: 1.2515  data_time: 0.2947  last_data_time: 0.2650   lr: 0.02  max_mem: 17087M
[03/01 19:30:36 d2.engine.hooks]: Overall training speed: 1498 iterations in 0:31:52 (1.2769 s / it)
[03/01 19:30:36 d2.engine.hooks]: Total training time: 0:32:04 (0:00:11 on hooks)
[03/01 19:30:38 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
| background | 0            |    car     | 8021         | pedestrian | 3347         |
|            | 0            |            | 0            |            | 0            |
|            | 0            |            | 0            |            | 0            |
|            | 0            |   ignore   | 2765         |            |              |
|   total    | 14133        |            |              |            |              |
[03/01 19:30:38 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/01 19:30:38 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 19:30:38 d2.data.common]: Serializing 2919 elements to byte tensors and concatenating them all ...
[03/01 19:30:39 d2.data.common]: Serialized dataset takes 5.86 MiB
WARNING [03/01 19:30:39 d2.engine.defaults]: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[03/01 19:30:39 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from /ghome/group07/C5-W2/lr_0_02_bs_32_is_16/model_0001499.pth ...
[03/01 19:30:42 d2.evaluation.coco_evaluation]: Trying to convert 'KITTI-MOTS_val' to COCO format ...
[03/01 19:30:42 d2.data.datasets.coco]: Converting annotations of dataset 'KITTI-MOTS_val' to COCO format ...)
[03/01 19:30:48 d2.data.datasets.coco]: Converting dataset dicts into COCO format
[03/01 19:30:48 d2.data.datasets.coco]: Conversion finished, #images: 2919, #annotations: 14133
[03/01 19:30:48 d2.data.datasets.coco]: Caching COCO format annotations at '/ghome/group07/C5-W2/lr_0_02_bs_32_is_16/KITTI-MOTS_val_coco_format.json' ...
[03/01 19:30:51 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/01 19:30:51 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/01 19:30:51 d2.data.common]: Serializing 2919 elements to byte tensors and concatenating them all ...
[03/01 19:30:51 d2.data.common]: Serialized dataset takes 5.86 MiB
[03/01 19:30:51 d2.evaluation.evaluator]: Start inference on 2919 batches
[03/01 19:30:56 d2.evaluation.evaluator]: Inference done 11/2919. Dataloading: 0.0021 s/iter. Inference: 0.0589 s/iter. Eval: 0.0144 s/iter. Total: 0.0754 s/iter. ETA=0:03:39
[03/01 19:31:01 d2.evaluation.evaluator]: Inference done 93/2919. Dataloading: 0.0031 s/iter. Inference: 0.0535 s/iter. Eval: 0.0054 s/iter. Total: 0.0620 s/iter. ETA=0:02:55
[03/01 19:31:06 d2.evaluation.evaluator]: Inference done 180/2919. Dataloading: 0.0029 s/iter. Inference: 0.0530 s/iter. Eval: 0.0039 s/iter. Total: 0.0598 s/iter. ETA=0:02:43
[03/01 19:31:11 d2.evaluation.evaluator]: Inference done 263/2919. Dataloading: 0.0030 s/iter. Inference: 0.0536 s/iter. Eval: 0.0033 s/iter. Total: 0.0600 s/iter. ETA=0:02:39
[03/01 19:31:16 d2.evaluation.evaluator]: Inference done 349/2919. Dataloading: 0.0029 s/iter. Inference: 0.0537 s/iter. Eval: 0.0030 s/iter. Total: 0.0596 s/iter. ETA=0:02:33
[03/01 19:31:21 d2.evaluation.evaluator]: Inference done 435/2919. Dataloading: 0.0029 s/iter. Inference: 0.0537 s/iter. Eval: 0.0028 s/iter. Total: 0.0594 s/iter. ETA=0:02:27
[03/01 19:31:26 d2.evaluation.evaluator]: Inference done 521/2919. Dataloading: 0.0029 s/iter. Inference: 0.0537 s/iter. Eval: 0.0026 s/iter. Total: 0.0592 s/iter. ETA=0:02:22
[03/01 19:31:31 d2.evaluation.evaluator]: Inference done 608/2919. Dataloading: 0.0028 s/iter. Inference: 0.0534 s/iter. Eval: 0.0028 s/iter. Total: 0.0591 s/iter. ETA=0:02:16
[03/01 19:31:36 d2.evaluation.evaluator]: Inference done 693/2919. Dataloading: 0.0028 s/iter. Inference: 0.0532 s/iter. Eval: 0.0030 s/iter. Total: 0.0591 s/iter. ETA=0:02:11
[03/01 19:31:41 d2.evaluation.evaluator]: Inference done 777/2919. Dataloading: 0.0028 s/iter. Inference: 0.0533 s/iter. Eval: 0.0030 s/iter. Total: 0.0592 s/iter. ETA=0:02:06
[03/01 19:31:46 d2.evaluation.evaluator]: Inference done 863/2919. Dataloading: 0.0028 s/iter. Inference: 0.0533 s/iter. Eval: 0.0030 s/iter. Total: 0.0591 s/iter. ETA=0:02:01
[03/01 19:31:51 d2.evaluation.evaluator]: Inference done 951/2919. Dataloading: 0.0028 s/iter. Inference: 0.0531 s/iter. Eval: 0.0030 s/iter. Total: 0.0589 s/iter. ETA=0:01:55
[03/01 19:31:56 d2.evaluation.evaluator]: Inference done 1039/2919. Dataloading: 0.0028 s/iter. Inference: 0.0530 s/iter. Eval: 0.0030 s/iter. Total: 0.0588 s/iter. ETA=0:01:50
[03/01 19:32:01 d2.evaluation.evaluator]: Inference done 1124/2919. Dataloading: 0.0028 s/iter. Inference: 0.0530 s/iter. Eval: 0.0030 s/iter. Total: 0.0588 s/iter. ETA=0:01:45
[03/01 19:32:06 d2.evaluation.evaluator]: Inference done 1210/2919. Dataloading: 0.0028 s/iter. Inference: 0.0528 s/iter. Eval: 0.0031 s/iter. Total: 0.0588 s/iter. ETA=0:01:40
[03/01 19:32:11 d2.evaluation.evaluator]: Inference done 1298/2919. Dataloading: 0.0027 s/iter. Inference: 0.0528 s/iter. Eval: 0.0031 s/iter. Total: 0.0587 s/iter. ETA=0:01:35
[03/01 19:32:16 d2.evaluation.evaluator]: Inference done 1387/2919. Dataloading: 0.0027 s/iter. Inference: 0.0526 s/iter. Eval: 0.0031 s/iter. Total: 0.0585 s/iter. ETA=0:01:29
[03/01 19:32:21 d2.evaluation.evaluator]: Inference done 1475/2919. Dataloading: 0.0027 s/iter. Inference: 0.0526 s/iter. Eval: 0.0031 s/iter. Total: 0.0585 s/iter. ETA=0:01:24
[03/01 19:32:26 d2.evaluation.evaluator]: Inference done 1560/2919. Dataloading: 0.0027 s/iter. Inference: 0.0526 s/iter. Eval: 0.0031 s/iter. Total: 0.0585 s/iter. ETA=0:01:19
[03/01 19:32:31 d2.evaluation.evaluator]: Inference done 1647/2919. Dataloading: 0.0027 s/iter. Inference: 0.0526 s/iter. Eval: 0.0031 s/iter. Total: 0.0585 s/iter. ETA=0:01:14
[03/01 19:32:36 d2.evaluation.evaluator]: Inference done 1731/2919. Dataloading: 0.0027 s/iter. Inference: 0.0526 s/iter. Eval: 0.0031 s/iter. Total: 0.0585 s/iter. ETA=0:01:09
[03/01 19:32:41 d2.evaluation.evaluator]: Inference done 1815/2919. Dataloading: 0.0027 s/iter. Inference: 0.0527 s/iter. Eval: 0.0031 s/iter. Total: 0.0586 s/iter. ETA=0:01:04
[03/01 19:32:46 d2.evaluation.evaluator]: Inference done 1895/2919. Dataloading: 0.0027 s/iter. Inference: 0.0527 s/iter. Eval: 0.0034 s/iter. Total: 0.0588 s/iter. ETA=0:01:00
[03/01 19:33:06 d2.evaluation.evaluator]: Inference done 1957/2919. Dataloading: 0.0027 s/iter. Inference: 0.0606 s/iter. Eval: 0.0038 s/iter. Total: 0.0671 s/iter. ETA=0:01:04
[03/01 19:33:11 d2.evaluation.evaluator]: Inference done 2035/2919. Dataloading: 0.0027 s/iter. Inference: 0.0605 s/iter. Eval: 0.0038 s/iter. Total: 0.0670 s/iter. ETA=0:00:59
[03/01 19:33:16 d2.evaluation.evaluator]: Inference done 2117/2919. Dataloading: 0.0027 s/iter. Inference: 0.0602 s/iter. Eval: 0.0039 s/iter. Total: 0.0668 s/iter. ETA=0:00:53
[03/01 19:33:21 d2.evaluation.evaluator]: Inference done 2200/2919. Dataloading: 0.0027 s/iter. Inference: 0.0599 s/iter. Eval: 0.0039 s/iter. Total: 0.0666 s/iter. ETA=0:00:47
[03/01 19:33:27 d2.evaluation.evaluator]: Inference done 2286/2919. Dataloading: 0.0027 s/iter. Inference: 0.0595 s/iter. Eval: 0.0040 s/iter. Total: 0.0663 s/iter. ETA=0:00:41
[03/01 19:33:32 d2.evaluation.evaluator]: Inference done 2375/2919. Dataloading: 0.0027 s/iter. Inference: 0.0592 s/iter. Eval: 0.0040 s/iter. Total: 0.0659 s/iter. ETA=0:00:35
[03/01 19:33:37 d2.evaluation.evaluator]: Inference done 2453/2919. Dataloading: 0.0027 s/iter. Inference: 0.0590 s/iter. Eval: 0.0041 s/iter. Total: 0.0659 s/iter. ETA=0:00:30
[03/01 19:33:42 d2.evaluation.evaluator]: Inference done 2536/2919. Dataloading: 0.0027 s/iter. Inference: 0.0587 s/iter. Eval: 0.0042 s/iter. Total: 0.0657 s/iter. ETA=0:00:25
[03/01 19:33:47 d2.evaluation.evaluator]: Inference done 2620/2919. Dataloading: 0.0027 s/iter. Inference: 0.0585 s/iter. Eval: 0.0043 s/iter. Total: 0.0655 s/iter. ETA=0:00:19
[03/01 19:33:52 d2.evaluation.evaluator]: Inference done 2697/2919. Dataloading: 0.0027 s/iter. Inference: 0.0583 s/iter. Eval: 0.0044 s/iter. Total: 0.0655 s/iter. ETA=0:00:14
[03/01 19:33:57 d2.evaluation.evaluator]: Inference done 2781/2919. Dataloading: 0.0027 s/iter. Inference: 0.0582 s/iter. Eval: 0.0044 s/iter. Total: 0.0653 s/iter. ETA=0:00:09
[03/01 19:34:02 d2.evaluation.evaluator]: Inference done 2863/2919. Dataloading: 0.0027 s/iter. Inference: 0.0581 s/iter. Eval: 0.0043 s/iter. Total: 0.0652 s/iter. ETA=0:00:03
[03/01 19:34:05 d2.evaluation.evaluator]: Total inference time: 0:03:10.070807 (0.065227 s / iter per device, on 1 devices)
[03/01 19:34:05 d2.evaluation.evaluator]: Total inference pure compute time: 0:02:48 (0.057982 s / iter per device, on 1 devices)
[03/01 19:34:06 d2.evaluation.coco_evaluation]: Preparing results for COCO format ...
[03/01 19:34:06 d2.evaluation.coco_evaluation]: Saving results to /ghome/group07/C5-W2/lr_0_02_bs_32_is_16/coco_instances_results.json
[03/01 19:34:06 d2.evaluation.coco_evaluation]: Evaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
[03/01 19:34:06 d2.evaluation.fast_eval_api]: Evaluate annotation type *bbox*
[03/01 19:34:07 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 0.88 seconds.
[03/01 19:34:07 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[03/01 19:34:07 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.08 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.420
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.595
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.476
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.274
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.490
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.529
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.166
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.477
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.480
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.318
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.540
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.662
[03/01 19:34:07 d2.evaluation.coco_evaluation]: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 41.955 | 59.485 | 47.589 | 27.421 | 48.956 | 52.853 |
[03/01 19:34:07 d2.evaluation.coco_evaluation]: Per-category bbox AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| background | nan  | car        | 68.767 | pedestrian | 51.801 |
|            | nan  |            | nan    |            | nan    |
|            | nan  |            | nan    |            | nan    |
|            | nan  | ignore     | 5.299  |            |        |
Loading and preparing results...
DONE (t=0.14s)
creating index...
index created!
[03/01 19:34:07 d2.evaluation.fast_eval_api]: Evaluate annotation type *segm*
[03/01 19:34:08 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 0.94 seconds.
[03/01 19:34:08 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[03/01 19:34:08 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.08 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.380
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.563
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.430
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.221
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.449
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.542
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.146
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.431
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.434
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.283
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.490
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.599
[03/01 19:34:08 d2.evaluation.coco_evaluation]: Evaluation results for segm: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 37.954 | 56.295 | 43.040 | 22.135 | 44.928 | 54.215 |
[03/01 19:34:08 d2.evaluation.coco_evaluation]: Per-category segm AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| background | nan  | car        | 68.123 | pedestrian | 42.118 |
|            | nan  |            | nan    |            | nan    |
|            | nan  |            | nan    |            | nan    |
|            | nan  | ignore     | 3.622  |            |        |
OrderedDict([('bbox', {'AP': 41.955349728902064, 'AP50': 59.485432384733194, 'AP75': 47.588561786335156, 'APs': 27.421259557604436, 'APm': 48.95641135969386, 'APl': 52.85285412619222, 'AP-background': nan, 'AP-car': 68.76677229857077, 'AP-pedestrian': 51.800701006506685, 'AP-': nan, 'AP-ignore': 5.298575881628709}), ('segm', {'AP': 37.95429938359916, 'AP50': 56.29541667872808, 'AP75': 43.040322860081695, 'APs': 22.13534110138962, 'APm': 44.92818476545166, 'APl': 54.2154953531866, 'AP-background': nan, 'AP-car': 68.12278021468245, 'AP-pedestrian': 42.11825095138387, 'AP-': nan, 'AP-ignore': 3.6218669847311493})])
